{"version":3,"sources":["views/Administration/notificationBuilder/CreateNotification.js","../node_modules/@material-ui/icons/esm/Save.js","assets/form/emptyForm.bpmn.jsx"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","marginLeft","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","withStyles","withTheme","props","React","useState","notificationName","setNotificationName","notificationFrom","notificationTo","setNotificationTo","notificationSubject","setNotificationSubject","notificationCc","setNotificationCc","notificationBcc","setNotificationBcc","enableEmailNotification","setEnableEmailNotification","notificationVersion","setNotificationVersion","versionState","setVersionState","JSON","parse","localStorage","getItem","domainId","roles","setRoles","toRoles","setToRoles","userRoles","setUserRoles","versionError","setVersionError","notificationData","setNotificationData","domainName","useEffect","roles_data","method","headers","fetch","USER_SERVICE","then","response","json","data","console","log","rolesFromApi","map","role","push","value","roleName","label","catch","error","xs","sm","noValidate","row","className","htmlFor","id","disabled","onChange","e","target","invalid","event","length","md","name","placeholder","options","isMulti","variant","inline","custom","checked","style","backgroundColor","padding","editor","getData","color","onClick","preventDefault","notification_data","body","stringify","notificationRoles","enabled","notificationToRoles","username","MAIL_NOTIFICATION_SERVICE","history","createSvgIcon","d","emptyForm"],"mappings":"iRAyBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,OAAQF,EAAMG,QAAQ,GACtBC,WAAY,iBACZC,SAAU,IACVC,SAAU,KAEZC,MAAO,CACLC,QAAS,OACTC,SAAU,QAEZC,KAAM,CACJR,OAAQ,GAEVS,QAAS,CACPC,UAAWZ,EAAMG,QAAQ,QA+UdU,sBAAW,eAAKf,GAAY,CAAEgB,WAAW,GAAzCD,EAjUY,SAACE,GAAW,IAAD,EACFC,IAAMC,UAAS,GADb,gCAEID,IAAMC,UAAS,IAFnB,gCAGYD,IAAMC,SAAS,KAH3B,mBAG7BC,EAH6B,KAGXC,EAHW,OAIVH,IAAMC,SAAS,IAJL,gCAKRD,IAAMC,SAAS,KALP,gCAMND,IAAMC,SAAS,KANT,gCAOYD,IAAMC,SAAS,2BAP3B,mBAO7BG,EAP6B,aAQQJ,IAAMC,SAAS,KARvB,mBAQ7BI,EAR6B,KAQbC,EARa,OASkBN,IAAMC,SAAS,IATjC,mBAS7BM,EAT6B,KASRC,EATQ,OAUQR,IAAMC,SAAS,IAVvB,mBAU7BQ,EAV6B,KAUbC,EAVa,OAWUV,IAAMC,SAAS,IAXzB,mBAW7BU,EAX6B,KAWZC,EAXY,OAYYZ,IAAMC,SAAS,IAZ3B,gCAa0BD,IAAMC,SAAS,KAbzC,mBAa7BY,EAb6B,KAaJC,EAbI,OAckBd,IAAMC,SAAS,IAdjC,mBAc7Bc,EAd6B,KAcRC,GAdQ,QAeIhB,IAAMC,SAAS,IAfnB,qBAe7BgB,GAf6B,MAefC,GAfe,SAgBJlB,IAAMC,SAASkB,KAAKC,MAAMC,aAAaC,QAAQ,gBAAgBC,UAhB3D,qBAgB7BA,GAhB6B,gBAiBVvB,IAAMC,SAAS,KAjBL,qBAiB7BuB,GAjB6B,MAiBtBC,GAjBsB,SAkBNzB,IAAMC,SAAS,IAlBT,qBAkB7ByB,GAlB6B,MAkBpBC,GAlBoB,SAmBA3B,IAAMC,SAAS,IAnBf,qCAoBFD,IAAMC,SAAS,KApBb,qBAoB7B2B,GApB6B,MAoBlBC,GApBkB,SAqBI7B,IAAMC,SAAS,IArBnB,qBAqB7B6B,GArB6B,MAqBfC,GArBe,SAsBY/B,IAAMC,SAAS,IAtB3B,qBAsB7B+B,GAtB6B,MAsBXC,GAtBW,SAuBAjC,IAAMC,SAASkB,KAAKC,MAAMC,aAAaC,QAAQ,gBAAgBY,YAvB/D,qBAuB7BA,GAvB6B,YA2BpBpD,IAChBqD,qBAAU,WACR,IAAMC,EAAa,CACjBC,OAAQ,MACRC,QAAS,CACP,WAAYJ,GACZ,eAAgB,mBAChB,cAAiB,UAAYb,aAAaC,QAAQ,mBAGtDiB,MAAMC,IAAe,0BAA2BJ,GAC7CK,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZ,IAAIG,EAAe,GACnBH,EAAKI,KAAI,SAAAC,GACPF,EAAaG,KAAK,CAChBC,MAAQF,EAAKG,SACbC,MAAQJ,EAAKG,cAEjBvB,GAAakB,GACbF,QAAQC,IAAIlB,OACX0B,OAAM,SAAAC,GACTV,QAAQC,IAAIS,QAed,IA0DF,OACE,mCACE,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,uDAEF,cAAC,IAAD,UACE,eAAC,IAAD,CAAQC,YAAU,EAAlB,UACE,eAAC,IAAD,CAAYC,KAAG,EAACC,UAAU,OAA1B,UACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQK,QAAQ,MAAhB,kBACA,cAAC,IAAD,CAAQC,GAAG,MACgBC,UAAQ,SAGvC,cAAC,IAAD,CAAMP,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQK,QAAQ,mBAAhB,oCACA,cAAC,IAAD,CAAQC,GAAG,mBAAmBE,SAAU,SAAAC,GAAC,OAAI9D,EAAoB8D,EAAEC,OAAOf,QAClEA,MAAOjD,YAKrB,eAAC,IAAD,CAAYyD,KAAG,EAACC,UAAU,OAA1B,UACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQK,QAAQ,UAAhB,qBACA,cAAC,IAAD,CAAQM,QAA0B,UAAjBlD,GAA0B6C,GAAG,UAAUE,SAAU,SAAAI,GApD/D,IAACjB,EAAOkB,EAqDTrD,GAAuBoD,EAAMF,OAAOf,OArDlCA,EAsDciB,EAAMF,OAAOf,MAtDpBkB,EAsD2B,EArDlDlB,EAAMkB,QAAUA,EAsDAnD,GAAgB,YAEhBA,GAAgB,SAChBa,GAAgB,qCAGpB,cAAC,IAAD,CAAkB6B,UAAU,aAA5B,SACG9B,UAIN,cAAC,IAAD,CAAM2B,GAAI,GAAIa,GAAI,EAAlB,SACK,eAAC,IAAD,WACI,cAAC,IAAD,CAAQT,QAAQ,oBAAhB,oCAEA,cAAC,IAAD,CACEU,KAAK,mBACLC,YAAY,SACZrB,MAAO3B,GACPiD,QAAS7C,GACToC,SAAUvC,GACViD,SAAO,YAKrB,eAAC,IAAD,CAAYf,KAAG,EAACC,UAAU,OAA1B,UACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQK,QAAQ,OAAhB,gBACA,cAAC,IAAD,CAAQC,GAAG,OACHX,MAAM,yBAAyBY,UAAQ,SAGnD,cAAC,IAAD,CAAMP,GAAG,IAAT,SAEE,eAAC,IAAD,CAAYmB,QAAQ,kBAAkBC,QAAM,EAA5C,UACE,cAAC,IAAD,CAAgBC,QAAM,EAACf,GAAG,mBAAmBS,KAAK,mBAAmBP,SAAU,SAAAC,GAAC,OAAInD,EAA2BmD,EAAEC,OAAOY,UAAW3B,MAAOtC,IAC1I,cAAC,IAAD,CAAQ8D,QAAQ,kBAAkBd,QAAQ,mBAA1C,wDAON,eAAC,IAAD,CAAYF,KAAG,EAACC,UAAU,OAA1B,UACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQK,QAAQ,KAAhB,kBACA,cAAC,IAAD,CAAQC,GAAG,KAAME,SAAU,SAAAC,GAAC,OAAI3D,EAAkB2D,EAAEC,OAAOf,QACnDA,MAAO9C,SAGnB,cAAC,IAAD,CAAMmD,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQK,QAAQ,UAAhB,mBACA,cAAC,IAAD,CAAQC,GAAG,UAAUE,SAAU,SAAAC,GAAC,OAAIzD,EAAuByD,EAAEC,OAAOf,QAC5DA,MAAO5C,YAMrB,eAAC,IAAD,CAAYoD,KAAG,EAACC,UAAU,OAA1B,UACA,cAAC,IAAD,CAAMH,GAAI,GAAIa,GAAI,EAAlB,SACsB,eAAC,IAAD,WACI,cAAC,IAAD,CAAQT,QAAQ,oBAAhB,0BAEA,cAAC,IAAD,CACEU,KAAK,mBACLC,YAAY,SACZrB,MAAOzB,GACPsC,SAAUrC,GACV8C,QAAS7C,GACT8C,SAAO,SAkBjC,cAAC,IAAD,CAAMlB,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQK,QAAQ,KAAhB,gBACA,cAAC,IAAD,CAAQC,GAAG,KAAME,SAAU,SAAAC,GAAC,OAAIvD,EAAkBuD,EAAEC,OAAOf,QACnDA,MAAO1C,YAMrB,cAAC,IAAD,CAAYkD,KAAG,EAACC,UAAU,OAA1B,SASE,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQK,QAAQ,MAAhB,iBACA,cAAC,IAAD,CAAQC,GAAG,MAAOE,SAAU,SAAAC,GAAC,OAAIrD,EAAmBqD,EAAEC,OAAOf,QACrDA,MAAOxC,WAiBhB,eAAC,IAAD,WACM,cAAC,IAAD,CAAaoE,MAAO,CAACC,gBAAgB,WAArC,kBAGT,cAAC,IAAD,CAAWD,MAAO,CAACE,QAAQ,OAA3B,SACE,cAAC,IAAD,CACEjB,SAAU,SAACI,GACDnC,GAAoBmC,EAAMc,OAAOC,mBAKjD,eAAC,IAAD,CAAM3B,GAAG,IAAT,UACE,cAAC,IAAD,CAAMA,GAAG,IAAII,UAAU,gBAAvB,SACE,eAAC,IAAD,CAASwB,MAAM,UAAUtB,GAAG,WAAWuB,QAxOvB,SAACjB,GAC/BA,EAAMkB,iBACNzC,QAAQC,IAAItB,IACZ,IAAM+D,EAAoB,CACxBlD,OAAQ,OACRC,QAAS,CACP,WAAYJ,GACZ,eAAgB,mBAChB,cAAiB,UAAUb,aAAaC,QAAQ,kBAClDkE,KAAMrE,KAAKsE,UAAU,CAEnBvF,iBAAkBA,EAAkBa,oBAAoBA,EACxD2E,kBAAkBlE,GAAOpB,iBAAkBA,EAAkBuF,QAAU9E,EACvER,eAAgBA,EAAgBI,eAAgBA,EAChDE,gBAAiBA,EAAiBJ,oBAAqBA,EACvDgB,SAAUA,GAAUqE,oBAAqBlE,GAASmE,SAAUxE,aAAaC,QAAQ,YAAaU,iBAAkBA,MAG/F,KAAjBf,IACFC,GAAgB,SAEG,YAAlBD,IACDsB,MAAMuD,IAA4B,2BAA4BP,GAC3D9C,MAAK,SAAAC,GACJG,QAAQC,IAAIJ,GACZ3C,EAAMgG,QAAQ7C,KAAK,gCA+MX,UACE,cAAC,IAAD,IADF,aAIF,cAAC,IAAD,CAAMM,GAAG,IAAII,UAAU,eAAvB,SACE,eAAC,IAAD,CAASwB,MAAM,SAASC,QAAS,kBAAKtF,EAAMgG,QAAQ7C,KAAK,6BAAzD,UACE,cAAC,IAAD,IADF,iC,iCC3WlB,qBAEe8C,gBAA4BhG,gBAAoB,OAAQ,CACrEiG,EAAG,mJACD,S,iCCJJ,kCAAO,IAAMC,EAAS","file":"static/js/71.e3f04332.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CFormGroup,\n  CInput, CSelect,\n  CLabel, CNavbar, CNavbarBrand, CRow, CForm, CInputGroup, CInvalidFeedback, CInputCheckbox, CInputRadio,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { DocsLink } from 'src/reusable'\nimport { Link } from 'react-router-dom'\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport {emptyForm} from \"../../../assets/form/emptyForm.bpmn.jsx\";\nimport CKEditor from 'ckeditor4-react';\nimport {SERVER_URL, USER_SERVICE, MAIL_NOTIFICATION_SERVICE, NORM_SERVICE} from \"../../../constants\";\n\nimport {Cancel, Save} from \"@material-ui/icons\";\nimport {Chip} from \"@material-ui/core\";\nimport Select from 'react-select';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    marginLeft: 0+'px !important',\n    minWidth: 220,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst CreateNotification = (props) => {\n  const [collapsed, setCollapsed] = React.useState(true)\n  const [showElements, setShowElements] = React.useState(true)\n  const [notificationName, setNotificationName] = React.useState('');\n  const [Alert, setAlert] = React.useState('');\n  const [formId, setFormId] = React.useState('');\n  const [display, setDisplay] = React.useState('');\n  const [notificationFrom, setNotificationFrom] = React.useState('support@isct-group.com');\n  const [notificationTo, setNotificationTo] = React.useState('');\n  const [notificationSubject, setNotificationSubject] = React.useState('');\n  const [notificationCc, setNotificationCc] = React.useState('');\n  const [notificationBcc, setNotificationBcc] = React.useState('');\n  const [notificationSite, setNotificationSite] = React.useState('');\n  const [enableEmailNotification, setEnableEmailNotification] = React.useState('');\n  const [notificationVersion, setNotificationVersion] = React.useState('');\n  const [versionState, setVersionState] = React.useState('');\n  const [domainId, setDomainId] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainId);\n  const [roles, setRoles] = React.useState([]);\n  const [toRoles, setToRoles] = React.useState([]);\n  const [components, setComponents] = React.useState([]);\n  const [userRoles, setUserRoles] = React.useState([]);\n  const [versionError, setVersionError] = React.useState('');\n  const [notificationData, setNotificationData] = React.useState('');\n  const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n\n  /* const [norms, setNorms] = React.useState([]);\n   const [selectedNorms, setSelectedNorms] = React.useState([]);*/\n  const classes = useStyles();\n  useEffect(()=> {\n    const roles_data = {\n      method: 'GET',\n      headers: {\n        \"X-Tenant\": domainName,\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n      }\n    };\n    fetch(USER_SERVICE + \"/api/auth/role/getRoles\", roles_data)\n      .then((response) => {\n        return response.json();\n      })\n      .then(data => {\n        console.log(data);\n        var rolesFromApi = [];\n        data.map(role => {\n          rolesFromApi.push({\n            value : role.roleName,\n            label : role.roleName\n          })})\n        setUserRoles(rolesFromApi);\n        console.log(userRoles);\n      }).catch(error => {\n      console.log(error);\n    });\n   /* fetch(NORM_SERVICE + \"/api/auth/norm/getAll\")\n        .then((response) => {\n          return response.json();\n        })\n        .then(data => {\n          console.log(data);\n          var normsFromApi = [];\n          const allNorms = JSON.parse(data.standards)\n          allNorms.map(norm =>{\n            normsFromApi.push({label: norm.name, value: norm.id})\n          })\n          setNorms(normsFromApi)\n        })*/\n  },[]);\n\n\n\n\n  const handleNotificationSubmit =(event ) => {\n    event.preventDefault();\n    console.log(roles);\n    const notification_data = {\n      method: 'POST',\n      headers: {\n        \"X-Tenant\": domainName,\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \"+localStorage.getItem('Authorization')},\n      body: JSON.stringify({\n        // standards: selectedNorms,\n        notificationName: notificationName, notificationVersion:notificationVersion,\n        notificationRoles:roles, notificationFrom: notificationFrom, enabled : enableEmailNotification,\n        notificationTo: notificationTo, notificationCc: notificationCc,\n        notificationBcc: notificationBcc, notificationSubject: notificationSubject,\n        domainId: domainId, notificationToRoles: toRoles, username: localStorage.getItem('username'), notificationData: notificationData})\n    };\n\n    if (versionState === \"\") {\n      setVersionState(\"error\");\n    }\n    if(versionState  === \"success\"){\n      fetch(MAIL_NOTIFICATION_SERVICE + '/api/notification/create', notification_data)\n        .then(response => {\n          console.log(response)\n          props.history.push(\"/admin/notification/list\");\n\n        })\n    }\n  }\n\n  const verifyLength = (value, length) => {\n    if (value.length >= length) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleDelete = (chipToDelete) =>{\n    console.log(chipToDelete);\n    console.log(roles);\n    console.log(roles.filter((chip) => chip !== chipToDelete))\n    const data = roles.filter((chip) => chip !== chipToDelete);\n    setRoles(data);\n  };\n  const handleToRolesDelete = (chipToDelete) =>{\n    console.log(chipToDelete);\n    console.log(toRoles.filter((chip) => chip !== chipToDelete))\n    const data = toRoles.filter((chip) => chip !== chipToDelete);\n    setToRoles(data);\n  };\n\n  let icon;\n  return (\n    <>\n      <CCol xs=\"12\" sm=\"12\">\n        <CCard>\n          <CCardHeader>\n            <h2>Create Notification</h2>\n          </CCardHeader>\n          <CCardBody>\n            <CForm  noValidate >\n              <CFormGroup row className=\"my-0\">\n                <CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"SNo\">S No</CLabel>\n                    <CInput id=\"SNo\" /*onChange={e => setFormId(e.target.value)}\n                              value={formId}*/ disabled />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"notificationName\">Nom de la notification</CLabel>\n                    <CInput id=\"notificationName\" onChange={e => setNotificationName(e.target.value) }\n                            value={notificationName}  />\n                  </CFormGroup>\n                </CCol>\n\n              </CFormGroup>\n              <CFormGroup row className=\"my-0\">\n                <CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"version\">Version</CLabel>\n                    <CInput invalid={versionState === \"error\"} id=\"version\" onChange={event => {\n                      setNotificationVersion(event.target.value)\n                      if(verifyLength(event.target.value, 3) ){\n                        setVersionState(\"success\");\n                      } else {\n                        setVersionState(\"error\");\n                        setVersionError(\"invalid notificationVersion !\")\n                      }\n                    }} />\n                    <CInvalidFeedback className=\"help-block\">\n                      {versionError}\n                    </CInvalidFeedback>\n                  </CFormGroup>\n                </CCol>\n                 <CCol sm={12} md={6}>\n                      <CFormGroup>\n                          <CLabel htmlFor=\"AccessControlUser\">Contrôle d'accès</CLabel>\n\n                          <Select\n                            name=\"form-field-name2\"\n                            placeholder=\"Global\"\n                            value={roles}\n                            options={userRoles}\n                            onChange={setRoles}\n                            isMulti\n                          />\n                    </CFormGroup>\n                  </CCol>\n              </CFormGroup>\n              <CFormGroup row className=\"my-0\">\n                <CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"From\">De</CLabel>\n                    <CInput id=\"From\"\n                            value=\"support@isct-group.com\" disabled />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs=\"6\">\n\n                  <CFormGroup variant=\"custom-checkbox\" inline>\n                    <CInputCheckbox custom id=\"inline-checkbox2\" name=\"inline-checkbox2\" onChange={e => setEnableEmailNotification(e.target.checked) } value={enableEmailNotification}  />\n                    <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox2\" >Activer la notification par e-mail</CLabel>\n                  </CFormGroup>\n                </CCol>\n\n              </CFormGroup>\n\n\n              <CFormGroup row className=\"my-0\">\n                <CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"To\">À</CLabel>\n                    <CInput id=\"To\"  onChange={e => setNotificationTo(e.target.value) }\n                            value={notificationTo} />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"Subject\">Sujet</CLabel>\n                    <CInput id=\"Subject\" onChange={e => setNotificationSubject(e.target.value) }\n                            value={notificationSubject}  />\n                  </CFormGroup>\n                </CCol>\n\n              </CFormGroup>\n\n              <CFormGroup row className=\"my-0\">\n              <CCol sm={12} md={6}>\n                                    <CFormGroup>\n                                        <CLabel htmlFor=\"AccessControlUser\">À (Roles)</CLabel>\n\n                                        <Select\n                                          name=\"form-field-name2\"\n                                          placeholder=\"Global\"\n                                          value={toRoles}\n                                          onChange={setToRoles}\n                                          options={userRoles}\n                                          isMulti\n                                        />\n                                  </CFormGroup>\n                                </CCol>\n\n\n\n           {/*     <CCol md=\"6\">\n                  <CFormGroup variant=\"custom-radio\" inline>\n                    <CInputRadio custom id=\"inline-radio1\" name=\"inline-radios\" value=\"option1\" />\n                    <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio1\">Html email</CLabel>\n                  </CFormGroup>\n                  <CFormGroup variant=\"custom-radio\" inline>\n                    <CInputRadio custom id=\"inline-radio2\" name=\"inline-radios\" value=\"option2\" />\n                    <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio2\">Script Email</CLabel>\n                  </CFormGroup>\n\n                </CCol>*/}\n                <CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"Cc\">Cc</CLabel>\n                    <CInput id=\"Cc\"  onChange={e => setNotificationCc(e.target.value) }\n                            value={notificationCc} />\n                  </CFormGroup>\n                </CCol>\n\n              </CFormGroup>\n\n              <CFormGroup row className=\"my-0\">\n\n               { /*<CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"Site\">Site</CLabel>\n                    <CInput id=\"Site\" onChange={e => setNotificationSite(e.target.value) }\n                            value={notificationSite}  />\n                  </CFormGroup>\n                </CCol>*/}\n                <CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"Bcc\">Cci</CLabel>\n                    <CInput id=\"Bcc\"  onChange={e => setNotificationBcc(e.target.value) }\n                            value={notificationBcc} />\n                  </CFormGroup>\n                </CCol>\n                {/*<CCol sm={12} md={6}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"type\">Norme</CLabel>\n                    <Select\n                        name=\"type\"\n                        value={selectedNorms}\n                        onChange={setSelectedNorms}\n                        placeholder=\"Selectionnez les normes\"\n                        options={norms}\n                        isMulti\n                    />\n                  </CFormGroup>\n                </CCol>*/}\n              </CFormGroup>\n                   <CCard>\n                         <CCardHeader style={{backgroundColor:\"#F5F5F5\"}}>\n                                                Body\n                                            </CCardHeader>\n                <CCardBody style={{padding:'0px'}}>\n                  <CKEditor\n                    onChange={(event) => {\n                              setNotificationData(event.editor.getData());\n                            }}\n                  />\n                </CCardBody>\n              </CCard>\n              <CRow xs=\"4\">\n                <CCol xs=\"2\" className=\"text-md-right\">\n                  <CButton color=\"success\" id=\"formSave\" onClick={handleNotificationSubmit}>\n                    <Save/> Save\n                  </CButton>\n                </CCol>\n                <CCol xs=\"2\" className=\"text-md-left\">\n                  <CButton color=\"danger\" onClick={()=> props.history.push(\"/admin/notification/list\")}>\n                    <Cancel />\n                    Cancel\n                  </CButton>\n                </CCol></CRow>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </>\n  )\n}\nexport default withStyles({ ...useStyles}, { withTheme: true })(CreateNotification) ;\n\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","export const emptyForm = `{\"display\":\"form\",\"form\":{\"display\":\"form\",\"components\":[{\"title\":\"Panel\",\"theme\":\"default\",\"tooltip\":\"\",\"customClass\":\"\",\"collapsible\":false,\"hidden\":false,\"hideLabel\":false,\"disabled\":false,\"modalEdit\":false,\"key\":\"panel\",\"tags\":[],\"properties\":{},\"customConditional\":\"\",\"conditional\":{\"json\":\"\",\"show\":null,\"when\":null,\"eq\":\"\"},\"logic\":[],\"attributes\":{},\"overlay\":{\"style\":\"\",\"page\":\"\",\"left\":\"\",\"top\":\"\",\"width\":\"\",\"height\":\"\"},\"type\":\"panel\",\"label\":\"Panel\",\"breadcrumb\":\"default\",\"tabindex\":\"\",\"input\":false,\"placeholder\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"multiple\":false,\"defaultValue\":null,\"protected\":false,\"unique\":false,\"persistent\":false,\"clearOnHide\":false,\"refreshOn\":\"\",\"redrawOn\":\"\",\"tableView\":false,\"labelPosition\":\"top\",\"description\":\"\",\"errorLabel\":\"\",\"autofocus\":false,\"dbIndex\":false,\"customDefaultValue\":\"\",\"calculateValue\":\"\",\"calculateServer\":false,\"widget\":null,\"validateOn\":\"change\",\"validate\":{\"required\":false,\"custom\":\"\",\"customPrivate\":false,\"strictDateValidation\":false,\"multiple\":false,\"unique\":false},\"allowCalculateOverride\":false,\"encrypted\":false,\"showCharCount\":false,\"showWordCount\":false,\"allowMultipleMasks\":false,\"tree\":false,\"components\":[{\"label\":\"Columns\",\"columns\":[{\"components\":[],\"width\":6,\"offset\":0,\"push\":0,\"pull\":0,\"size\":\"md\"},{\"components\":[],\"width\":6,\"offset\":0,\"push\":0,\"pull\":0,\"size\":\"md\"}],\"autoAdjust\":false,\"hideOnChildrenHidden\":false,\"customClass\":\"\",\"hidden\":false,\"hideLabel\":false,\"modalEdit\":false,\"key\":\"columns\",\"tags\":[],\"properties\":{},\"conditional\":{\"show\":null,\"when\":null,\"eq\":\"\",\"json\":\"\"},\"customConditional\":\"\",\"logic\":[],\"attributes\":{},\"overlay\":{\"style\":\"\",\"page\":\"\",\"left\":\"\",\"top\":\"\",\"width\":\"\",\"height\":\"\"},\"type\":\"columns\",\"input\":false,\"placeholder\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"multiple\":false,\"defaultValue\":null,\"protected\":false,\"unique\":false,\"persistent\":false,\"clearOnHide\":false,\"refreshOn\":\"\",\"redrawOn\":\"\",\"tableView\":false,\"labelPosition\":\"top\",\"description\":\"\",\"errorLabel\":\"\",\"tooltip\":\"\",\"tabindex\":\"\",\"disabled\":false,\"autofocus\":false,\"dbIndex\":false,\"customDefaultValue\":\"\",\"calculateValue\":\"\",\"calculateServer\":false,\"widget\":null,\"validateOn\":\"change\",\"validate\":{\"required\":false,\"custom\":\"\",\"customPrivate\":false,\"strictDateValidation\":false,\"multiple\":false,\"unique\":false},\"allowCalculateOverride\":false,\"encrypted\":false,\"showCharCount\":false,\"showWordCount\":false,\"allowMultipleMasks\":false,\"tree\":false,\"id\":\"e7wum4j\"}],\"id\":\"eoa4jqh\"},{\"type\":\"button\",\"label\":\"Submit\",\"key\":\"submit\",\"size\":\"md\",\"block\":false,\"action\":\"submit\",\"disableOnInvalid\":true,\"theme\":\"primary\",\"input\":true,\"placeholder\":\"\",\"prefix\":\"\",\"customClass\":\"\",\"suffix\":\"\",\"multiple\":false,\"defaultValue\":null,\"protected\":false,\"unique\":false,\"persistent\":false,\"hidden\":false,\"clearOnHide\":true,\"refreshOn\":\"\",\"redrawOn\":\"\",\"tableView\":false,\"modalEdit\":false,\"labelPosition\":\"top\",\"description\":\"\",\"errorLabel\":\"\",\"tooltip\":\"\",\"hideLabel\":false,\"tabindex\":\"\",\"disabled\":false,\"autofocus\":false,\"dbIndex\":false,\"customDefaultValue\":\"\",\"calculateValue\":\"\",\"calculateServer\":false,\"widget\":{\"type\":\"input\"},\"attributes\":{},\"validateOn\":\"change\",\"validate\":{\"required\":false,\"custom\":\"\",\"customPrivate\":false,\"strictDateValidation\":false,\"multiple\":false,\"unique\":false},\"conditional\":{\"show\":null,\"when\":null,\"eq\":\"\"},\"overlay\":{\"style\":\"\",\"left\":\"\",\"top\":\"\",\"width\":\"\",\"height\":\"\"},\"allowCalculateOverride\":false,\"encrypted\":false,\"showCharCount\":false,\"showWordCount\":false,\"properties\":{},\"allowMultipleMasks\":false,\"leftIcon\":\"\",\"rightIcon\":\"\",\"dataGridLabel\":true,\"id\":\"eh3b4xu\"}]},\"domainId\":1,\"roles\":[\"Admin\"],\"components\":[{\"title\":\"Panel\",\"theme\":\"default\",\"tooltip\":\"\",\"customClass\":\"\",\"collapsible\":false,\"hidden\":false,\"hideLabel\":false,\"disabled\":false,\"modalEdit\":false,\"key\":\"panel\",\"tags\":[],\"properties\":{},\"customConditional\":\"\",\"conditional\":{\"json\":\"\",\"show\":null,\"when\":null,\"eq\":\"\"},\"logic\":[],\"attributes\":{},\"overlay\":{\"style\":\"\",\"page\":\"\",\"left\":\"\",\"top\":\"\",\"width\":\"\",\"height\":\"\"},\"type\":\"panel\",\"label\":\"Panel\",\"breadcrumb\":\"default\",\"tabindex\":\"\",\"input\":false,\"placeholder\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"multiple\":false,\"defaultValue\":null,\"protected\":false,\"unique\":false,\"persistent\":false,\"clearOnHide\":false,\"refreshOn\":\"\",\"redrawOn\":\"\",\"tableView\":false,\"labelPosition\":\"top\",\"description\":\"\",\"errorLabel\":\"\",\"autofocus\":false,\"dbIndex\":false,\"customDefaultValue\":\"\",\"calculateValue\":\"\",\"calculateServer\":false,\"widget\":null,\"validateOn\":\"change\",\"validate\":{\"required\":false,\"custom\":\"\",\"customPrivate\":false,\"strictDateValidation\":false,\"multiple\":false,\"unique\":false},\"allowCalculateOverride\":false,\"encrypted\":false,\"showCharCount\":false,\"showWordCount\":false,\"allowMultipleMasks\":false,\"tree\":false,\"components\":[{\"label\":\"Columns\",\"columns\":[{\"components\":[],\"width\":6,\"offset\":0,\"push\":0,\"pull\":0,\"size\":\"md\"},{\"components\":[],\"width\":6,\"offset\":0,\"push\":0,\"pull\":0,\"size\":\"md\"}],\"autoAdjust\":false,\"hideOnChildrenHidden\":false,\"customClass\":\"\",\"hidden\":false,\"hideLabel\":false,\"modalEdit\":false,\"key\":\"columns\",\"tags\":[],\"properties\":{},\"conditional\":{\"show\":null,\"when\":null,\"eq\":\"\",\"json\":\"\"},\"customConditional\":\"\",\"logic\":[],\"attributes\":{},\"overlay\":{\"style\":\"\",\"page\":\"\",\"left\":\"\",\"top\":\"\",\"width\":\"\",\"height\":\"\"},\"type\":\"columns\",\"input\":false,\"placeholder\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"multiple\":false,\"defaultValue\":null,\"protected\":false,\"unique\":false,\"persistent\":false,\"clearOnHide\":false,\"refreshOn\":\"\",\"redrawOn\":\"\",\"tableView\":false,\"labelPosition\":\"top\",\"description\":\"\",\"errorLabel\":\"\",\"tooltip\":\"\",\"tabindex\":\"\",\"disabled\":false,\"autofocus\":false,\"dbIndex\":false,\"customDefaultValue\":\"\",\"calculateValue\":\"\",\"calculateServer\":false,\"widget\":null,\"validateOn\":\"change\",\"validate\":{\"required\":false,\"custom\":\"\",\"customPrivate\":false,\"strictDateValidation\":false,\"multiple\":false,\"unique\":false},\"allowCalculateOverride\":false,\"encrypted\":false,\"showCharCount\":false,\"showWordCount\":false,\"allowMultipleMasks\":false,\"tree\":false,\"id\":\"e7wum4j\"}],\"id\":\"eoa4jqh\"},{\"type\":\"button\",\"label\":\"Submit\",\"key\":\"submit\",\"size\":\"md\",\"block\":false,\"action\":\"submit\",\"disableOnInvalid\":true,\"theme\":\"primary\",\"input\":true,\"placeholder\":\"\",\"prefix\":\"\",\"customClass\":\"\",\"suffix\":\"\",\"multiple\":false,\"defaultValue\":null,\"protected\":false,\"unique\":false,\"persistent\":false,\"hidden\":false,\"clearOnHide\":true,\"refreshOn\":\"\",\"redrawOn\":\"\",\"tableView\":false,\"modalEdit\":false,\"labelPosition\":\"top\",\"description\":\"\",\"errorLabel\":\"\",\"tooltip\":\"\",\"hideLabel\":false,\"tabindex\":\"\",\"disabled\":false,\"autofocus\":false,\"dbIndex\":false,\"customDefaultValue\":\"\",\"calculateValue\":\"\",\"calculateServer\":false,\"widget\":{\"type\":\"input\"},\"attributes\":{},\"validateOn\":\"change\",\"validate\":{\"required\":false,\"custom\":\"\",\"customPrivate\":false,\"strictDateValidation\":false,\"multiple\":false,\"unique\":false},\"conditional\":{\"show\":null,\"when\":null,\"eq\":\"\"},\"overlay\":{\"style\":\"\",\"left\":\"\",\"top\":\"\",\"width\":\"\",\"height\":\"\"},\"allowCalculateOverride\":false,\"encrypted\":false,\"showCharCount\":false,\"showWordCount\":false,\"properties\":{},\"allowMultipleMasks\":false,\"leftIcon\":\"\",\"rightIcon\":\"\",\"dataGridLabel\":true,\"id\":\"eh3b4xu\"}]}`;\n"],"sourceRoot":""}