{"version":3,"sources":["views/Administration/users/ChangePassword.js","../node_modules/@material-ui/icons/esm/Save.js","../node_modules/@material-ui/icons/esm/Cancel.js"],"names":["ChangePassword","props","useState","localStorage","getItem","username","oldPasswordError","setOldPasswordError","oldPassword","setOldPassword","oldPasswordState","setOldPasswordState","passwordState","setPasswordState","passwordError","setPasswordError","repeatPassword","setRepeatPassword","repeatPasswordState","setRepeatPasswordState","repeatPasswordError","setRepeatPasswordError","password","setPassword","React","JSON","parse","domainId","domainName","useEffect","verifyLength","value","length","noValidate","style","marginTop","row","className","sm","md","htmlFor","id","type","invalid","onChange","e","target","data","method","headers","body","stringify","fetch","USER_SERVICE","then","response","Promise","resolve","reject","text","catch","err","error","console","log","verifyOldPassword","valid","xs","col","xl","block","variant","color","onClick","alert","history","push","handleSubmit","createSvgIcon","d"],"mappings":"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","file":"static/js/55.6ced3770.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n// import { Form, Field } from 'react-final-form';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Calendar } from 'primereact/calendar';\nimport { Password } from 'primereact/password';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Dialog } from 'primereact/dialog';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { Toast } from 'primereact/toast';\nimport { FileUpload } from 'primereact/fileupload';\nimport { ProgressBar } from 'primereact/progressbar';\nimport { Tooltip } from 'primereact/tooltip';\nimport { Tag } from 'primereact/tag';\nimport './img css/imgStyle.scss';\nimport axios from 'axios';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CForm,\n    CFormGroup,\n    CInput,\n    CInvalidFeedback,\n    CValidFeedback,\n    CLabel, CNav, CNavItem, CNavLink,\n    CRow, CTabContent, CTabPane, CTabs\n} from \"@coreui/react\";\nimport Select from \"@material-ui/core/Select\";\nimport {Cancel, Save} from \"@material-ui/icons\";\nimport {SERVER_URL, USER_SERVICE, PROFILE_IMG_UPLOAD_URL} from \"../../../constants\";\nimport UserImage from \"./img/user.png\"\nimport Editor from \"@monaco-editor/react\";\n// import { CountryService } from '../service/CountryService';\n//import './FormDemo.css';\n\nconst ChangePassword = (props) => {\n    const [username, setUsername] = useState(localStorage.getItem(\"username\"));\n    const [oldPasswordError, setOldPasswordError] = useState(\"\");\n    const [oldPassword, setOldPassword] = useState(\"\");\n    const [oldPasswordState, setOldPasswordState] = useState(\"\");\n    const [passwordState, setPasswordState] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const [repeatPasswordState, setRepeatPasswordState] = useState(\"\");\n    const [repeatPasswordError, setRepeatPasswordError] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [domainId, setDomainId] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainId);\n    const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n\n    useEffect(() => {\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n    const handleSubmit = ()=>{\n        // event.preventDefault();\n\n        /* const fd = new FormData();\n         fd.append('image', photo, photo.name);\n     */\n\n        /* const data = {\n             method: 'POST',\n             headers: {\n                 \"Authorization\": \"Bearer \"+localStorage.getItem('Authorization')},\n             body:  fd\n         };*/\n\n\n        if (passwordState === \"\") {\n            setPasswordState(\"error\");\n        }\n        if (oldPasswordState === \"\") {\n            setOldPasswordState(\"error\");\n        }\n        if (repeatPasswordState === \"\") {\n            setRepeatPasswordState(\"error\");\n        }\n\n\n        if (repeatPasswordState===\"success\" && oldPasswordState===\"success\" &&\n            passwordState===\"success\"\n        ){\n\n            const data = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    \"X-Tenant\": domainName,\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('Authorization')\n                },\n                body: JSON.stringify({password: password, username: username})\n            };\n\n\n        fetch(USER_SERVICE+\"/api/auth/user/changeUserPassword\", data)\n            .then(response => {\n                return new Promise((resolve, reject) => {\n                    response.text().then(body => {\n                        resolve(\n                            body.length ? JSON.parse(body) : null\n                        );\n                    }).catch(err => {\n                        reject(err);\n                    });\n                });\n            })\n            .then( data =>{\n                if (data !== null) {\n\n                    alert(\"Votre mot de passe a été changé avec succès !\")\n                    props.history.push(\"/dashboard\");\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n        }\n\n    }\n\n\n\n\n\n\n    const verifyLength = (value, length) => {\n        if (value.length >= length) {\n            return true;\n        }\n        return false;\n    };\n\n    const verifyOldPassword = () =>{\n        const data = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                \"X-Tenant\": domainName,\n                \"Authorization\": \"Bearer \" + localStorage.getItem('Authorization')\n            },\n            body: JSON.stringify({password: password, username: username, domainId: domainId})\n        };\n\n        fetch(USER_SERVICE+\"/api/auth/user/verifyUserPassword\", data)\n            .then(response => {\n                    return new Promise((resolve, reject) => {\n                        response.text().then(body => {\n                            resolve(\n                                body.length ? JSON.parse(body) : null\n                            );\n                        }).catch(err => {\n                            reject(err);\n                        });\n                    });\n                })\n            .then( data =>{\n                if (data !== null) {\n                    setOldPasswordState(\"success\");\n                } else {\n                    setOldPasswordState(\"error\");\n                    setOldPasswordError(\"Mot de passe invalide !\")\n                }\n            })\n            .catch(error => {\n            console.log(error);\n        });\n    }\n\n\n\n\n\n\n\n\n\n    return (\n        <>\n            <CCard>\n                <CCardHeader>\n                    <h3>Changer le mot de passe</h3>\n                </CCardHeader>\n\n                <CCardBody>\n\n\n                    <CForm  noValidate style={{marginTop: \"20px\"}}>\n                        <CFormGroup row className=\"my-0\">\n                            <CCol sm={12} md={6}>\n                                <CFormGroup>\n                                    <CLabel htmlFor=\"password\">Mot de passe actuel</CLabel>\n                                    <CInput id=\"password\" type=\"password\"\n                                            invalid={oldPasswordState === \"error\" }\n                                            onChange={e =>\n                                            {\n                                                setOldPassword(e.target.value)\n                                                verifyOldPassword(e.target.value);\n                                                if(verifyLength(e.target.value, 3) ){\n                                                    setOldPasswordState(\"success\");\n                                                } else {\n                                                    setOldPasswordState(\"error\");\n                                                    setOldPasswordError(\"Le mot de passe  est obligatoire !\")\n                                                }\n                                            }}\n                                            value={oldPassword} />\n                                    <CInvalidFeedback className=\"help-block\">\n                                        {oldPasswordError}\n                                    </CInvalidFeedback>\n                                </CFormGroup>\n                            </CCol>\n                            <CCol sm={12} md={6}>\n                                <CFormGroup>\n                                    <CLabel htmlFor=\"password\">Mot de passe</CLabel>\n                                    <CInput id=\"password\" type=\"password\"\n                                            invalid={passwordState === \"error\" }\n                                            onChange={e =>\n                                            {\n                                                setPassword(e.target.value)\n                                                if(verifyLength(e.target.value, 3) ){\n                                                    setPasswordState(\"success\");\n                                                } else {\n                                                    setPasswordState(\"error\");\n                                                    setPasswordError(\"Le mot de passe  est obligatoire !\")\n                                                }\n                                            }}\n                                            value={password} />\n                                    <CInvalidFeedback className=\"help-block\">\n                                        {passwordError}\n                                    </CInvalidFeedback>\n                                </CFormGroup>\n                            </CCol>\n                            <CCol sm={12} md={6}>\n                                <CFormGroup>\n                                    <CLabel htmlFor=\"password\">Confirmer le mot de passe</CLabel>\n                                    <CInput id=\"repeat_password\" type=\"password\"\n                                            invalid={repeatPasswordState === \"error\" }\n                                            valid={repeatPasswordState === \"success\"}\n                                            onChange={e =>\n                                            {\n                                                setRepeatPassword(e.target.value)\n                                                if(password === e.target.value ){\n                                                    setRepeatPasswordState(\"success\");\n                                                } else {\n                                                    setRepeatPasswordState(\"error\");\n                                                    setRepeatPasswordError(\"Mot de passe invalide !\")\n                                                }\n                                            }}\n                                            value={repeatPassword} />\n                                    <CInvalidFeedback className=\"help-block\">\n                                        {repeatPasswordError}\n                                    </CInvalidFeedback>\n\n                                </CFormGroup>\n                            </CCol>\n\n\n                            <CRow xs=\"4\" style={{marginTop: \"50px\"}}>\n\n                                <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\n                                    <CButton block variant=\"outline\" color=\"info\" id=\"workflowSave\" onClick={()=> handleSubmit()}><Save/> Enregister</CButton>\n                                </CCol>\n                                <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\n                                    <CButton block variant=\"outline\" color=\"danger\" onClick={()=> props.history.push(\"/dashboard\")}><Cancel />\n                                        Annuler</CButton>\n                                </CCol>\n\n                            </CRow>\n                        </CFormGroup>\n                    </CForm>\n\n                </CCardBody>\n            </CCard>\n        </>\n\n    );\n}\nexport default ChangePassword","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');"],"sourceRoot":""}