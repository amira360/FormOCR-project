{"version":3,"sources":["views/Administration/workflowMaster/WorkflowMasterList.js","views/users/UsersData.js","../node_modules/primereact/inputtext.js","../node_modules/@material-ui/icons/esm/Add.js"],"names":["WorkflowMasterList","props","React","useState","setCurrentItems","masters","setMasters","globalFilter","setGlobalFilter","dt","useRef","JSON","parse","localStorage","getItem","domainId","useSelector","state","sidebarShow","domainName","permissions","setPermissions","visible","setVisible","useEffect","role_permissions","permissionTab","length","map","rolePermissions","permission","push","key","master_data","method","headers","body","stringify","fetch","WORKFLOW_MASTER_SERVICE","then","response","Promise","resolve","reject","text","catch","err","data","masters_data","master","sno","name","code","id","size","error","console","log","header","className","type","label","icon","onClick","current","reset","value","onChange","e","target","placeholder","isVisible","style","zIndex","backgroundColor","color","fontWeight","includes","history","rel","createWorkflowMaster","paddingLeft","event","mode","height","ref","dataKey","paginator","rows","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","field","item","padding","width","sortable","usersData","registered","role","status","module","exports","require","createSvgIcon","d"],"mappings":"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","file":"static/js/61.62c812cb.chunk.js","sourcesContent":["import {\n  CBadge, CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable, CDropdown, CDropdownDivider, CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle, CHeader,\n  CRow, CSidebar, CToggler,CLink\n} from \"@coreui/react\";\nimport { Menu } from 'primereact/menu';\n\nimport 'primeicons/primeicons.css';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.css';\nimport 'primeflex/primeflex.css';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport CIcon from '@coreui/icons-react';\nimport usersData from \"../../users/UsersData\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport Tables from \"../../base/tables/Tables\";\nimport {useSelector} from \"react-redux\";\nimport {Search, Add, Delete, Edit, Update} from \"@material-ui/icons\";\nimport {RemoveRedEye} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\n\nimport {SERVER_URL, WORKFLOW_MASTER_SERVICE} from '../../../constants';\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport {ProgressBar} from \"primereact/progressbar\";\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active': return 'success'\n    case 'Inactive': return 'secondary'\n    case 'Pending': return 'warning'\n    case 'Banned': return 'danger'\n    default: return 'primary'\n  }\n}\nconst fields = [ 'Action','S No','Nom']\n\nconst WorkflowMasterList = (props) => {\n  const [currentItems, setCurrentItems] = React.useState([]);\n  const [formName, setFormName] = React.useState(\"\");\n  //const [items, setItems] = React.useState([]);\n  const [formId, setFormId] = React.useState(\"\");\n  const [formCode, setFormCode] = React.useState(\"\");\n  const [masters, setMasters] = React.useState([]);\n  const [items, setItems] = React.useState([]);\n    const [globalFilter, setGlobalFilter] = React.useState(\"\");\n\n    const dt = useRef(null);\n\n    // const [menu, setMenu] = React.useState(null);\n  const [domainId, setDomainId] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainId);\n  const show = useSelector(state => state.sidebarShow)\n    const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n    const [permissions, setPermissions] = React.useState([]);\n    const [visible, setVisible] = useState(true)\n\n    useEffect(()=> {\n\n        const role_permissions = JSON.parse(localStorage.getItem(\"userPermissions\"))\n        const permissionTab = []\n        if(role_permissions.length ){\n            role_permissions.map(rolePermissions =>{\n                rolePermissions.map(permission =>{\n                    permissionTab.push(permission.key)\n                })\n            })\n            setPermissions(permissionTab)\n\n        }\n    const master_data = {\n      method: 'POST',\n      headers: {\n          \"X-Tenant\": domainName,\n          'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n      body: JSON.stringify({domainId: domainId})\n    };\n    fetch(WORKFLOW_MASTER_SERVICE + '/api/workflowMaster/getAll',master_data)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        });\n      })\n      .then(data => {\n        var masters_data = [];\n        data.map(master =>\n        {masters_data.push({\"S No\":master.sno, \"Nom\": master.name, \"Code\": master.code,\"id\":master.id})\n        })\n    /*    data.map(form =>\n        {forms_data.push({\"formId\":form.formId, \"formName\": form.formName,\n          \"formCode\": form.formCode,\"formKey\": form.formCode,\n          \"version\": \"1.0\"})\n        })*/\n       /* const data_to_ten = data.length%10\n        if(data_to_ten !== 0 && data_to_ten<=2){\n          var index = 0;\n          const rest_data = 10-data_to_ten;\n          if(rest_data>2){\n            for (index; index < 2; index++){\n              masters_data.push({\"S No\":'', \"Nom\":'' })\n            }\n          }\n            }*/\n        setMasters(masters_data)\n      /*  setFormName(data.form_name);\n        setFormCode(data.form_code);*/\n        setCurrentItems(masters)\n        //this.props.history.push(\"/admin/formView\");\n          if(masters_data.size !== 0){\n              setVisible(false)\n          }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  },[])\n  const menu = useRef(null);\n\n const menuList = (rowData) => {\n\n                             return (  <div>\n                             <Menu model={items} onClick={item => onClickMenu(rowData)} popup ref={menu} id=\"popup_menu\" />\n                            <i className=\"pi pi-bars\" onClick={(event) => menu.current.toggle(event)}></i>\n                            </div>)\n                                 //  return <i className=\"pi pi-bars p-toolbar-separator p-mr-2\" onClick={(event) => <Menu model={items} popup ref={menu} />}></i> ;\n                               }\n\n                               const onClickMenu = (item) => {\n                               setItems([  {\n                                                                  label: 'Aperçu',\n                                                                  icon: 'pi pi-eye',\n                                                                  command:()=>{ window.location.hash=\"/admin/workflowMaster/preview/\" + item.id;}\n\n                                                              },\n                                                              {\n                                                                                      label: 'Modifier',\n                                                                                      icon: 'pi pi-pencil',\n                                                                                      command:()=>{ window.location.hash=\"/admin/workflowMaster/edit/\" + item.id ;}\n                                                                                  },\n                                                              {\n                                                                  label: 'Supprimer',\n                                                                  icon: 'pi pi-trash',\n                                                               //   command:()=>{ window.location.hash=\"/admin/notification/edit/\" + rowData.id;\n\n                                                              }\n                                                          ])\n                               }\n\n    const menuPermissions = (item)=>{\n\n\n\n        if (permissions.includes(\"0-0-12-1\")){\n            if (permissions.includes(\"0-0-12-2\")){\n                return  (\n                    <CDropdownMenu className=\"mp-0\">\n                        {/*<CDropdownItem to={\"/admin/workflowMaster/preview/\" + item.id}>\n                            <RemoveRedEye/>&nbsp;&nbsp;Aperçu\n                        </CDropdownItem>\n                        <CDropdownItem to={\"/admin/workflowMaster/edit/\" + item.id}>\n                            <Edit/> &nbsp;&nbsp;Editer\n                        </CDropdownItem>*/}\n                      {/*  <CDropdownItem>\n                            <Delete/>&nbsp;&nbsp;Supprimer\n                        </CDropdownItem>*/}\n                    </CDropdownMenu>\n                    )\n            }else{\n                return  (\n                    <CDropdownMenu className=\"mp-0\">\n                        {/*<CDropdownItem to={\"/admin/workflowMaster/preview/\" + item.id}>\n                            <RemoveRedEye/>&nbsp;&nbsp;Aperçu\n                        </CDropdownItem>\n                        <CDropdownItem to={\"/admin/workflowMaster/edit/\" + item.id}>\n                            <Edit/> &nbsp;&nbsp;Editer\n                        </CDropdownItem>*/}\n\n                    </CDropdownMenu>\n                )\n            }\n\n        }else{\n            if (permissions.includes(\"0-0-12-2\")){\n                return  (\n                    <CDropdownMenu className=\"mp-0\">\n                       {/* <CDropdownItem to={\"/admin/workflowMaster/preview/\" + item.id}>\n                            <RemoveRedEye/>&nbsp;&nbsp;Aperçu\n                        </CDropdownItem>*/}\n\n                       {/* <CDropdownItem>\n                            <Delete/>&nbsp;&nbsp;Supprimer\n                        </CDropdownItem>*/}\n                    </CDropdownMenu>\n                    )\n            }else{\n                return  (\n                    <CDropdownMenu className=\"mp-0\">\n                       {/* <CDropdownItem to={\"/admin/workflowMaster/preview/\" + item.id}>\n                            <RemoveRedEye/>&nbsp;&nbsp;Aperçu\n                        </CDropdownItem>*/}\n\n                    </CDropdownMenu>\n                )\n            }\n        }\n\n    }\n    const createWorkflowMaster =() =>{\n        if (permissions.includes(\"0-0-12-0\")){\n            return (\n                <CLink\n                    style={{color: \"#FFFFFF\"}}\n                    onClick={()=> props.history.push(\"/admin/workflowMaster/create\")}\n                    rel=\"noreferrer noopener\"\n                    target=\"_blank\"\n                    className=\"card-header-action\"\n                >\n                    <Add/>Ajouter un nouveau\n                </CLink>\n            )\n        }\n    }\n    const reset = () => {\n        setGlobalFilter('');\n        dt.current.reset();\n    }\n    const header = (\n        <div className=\"table-header\">\n            <Button type=\"button\" label=\"Clear\" className=\"p-button-outlined\" icon=\"pi pi-filter-slash\" onClick={reset} />\n            <span className=\"p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" value={globalFilter} onChange={(e) => setGlobalFilter(e.target.value)} placeholder=\"Global Search\" />\n            </span>\n        </div>\n    );\n\n    const isVisible = visible;\n\n    return (\n    <>\n      <CRow>\n        <CCol>\n          <CCard style={{zIndex: \"10 !important\"}}>\n            <CCardHeader style={{backgroundColor: \"#494399\"}}>\n             <span style={{color: \"#FFFFFF\", fontWeight: \"bold\"}}>Maître de flux de travail</span>\n\n\n <div className=\"card-header-actions\">\n\n     {createWorkflowMaster()}\n      {/*<CLink style={{color: \"#FFFFFF\", paddingLeft: \"10px\" }} >\n      <Search content=\"cil-search\" size=\"2xl\"/>\n      </CLink>*/}\n\n      <CLink style={{color: \"#FFFFFF\", paddingLeft: \"10px\" }} >\n           {/* <Menu content=\"cil-search\" size=\"2xl\"/>*/}\n            <i  size=\"2xl\" className=\"pi pi-bars\" onClick={(event) => console.log(event)}></i>\n            </CLink>\n    </div>\n            </CCardHeader>\n            <CCardBody>\n  <div className=\"card\">\n      {isVisible && <ProgressBar  mode=\"indeterminate\" style={{ height: '6px' }}></ProgressBar>}\n\n      <DataTable value={masters} ref={dt} header={header}  globalFilter={globalFilter} dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\n                                                               paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                                                              currentPageReportTemplate=\"{currentPage} of {totalPages} pages ({totalRecords} items)\"  className=\"p-datatable-sm p-datatable-striped p-datatable-gridlines\">\n                   <Column field={ item => {return (<td>\n                                                            <CDropdown className=\"m-1\">\n                                                              <CDropdownToggle style={{padding:'0px'}}>\n                                                                <i  size=\"2xl\" className=\"pi pi-bars\"></i>\n                                                              </CDropdownToggle>\n                                                                {menuPermissions(item)}\n                                                            </CDropdown>\n                                                          </td>)}} style={{width:\"50px\"}}></Column>\n                   <Column field='S No' header=\"S No\"  sortable  ></Column>\n                    <Column field=\"Nom\" header=\"Nom de maître de workflow\"  sortable ></Column>\n                    <Column field=\"Code\" header=\"Identifiant du processus\"  sortable ></Column>\n\n                </DataTable>\n            </div>\n         {    /* <CDataTable style={{position:\"absolute\"}}\n                  items={masters}\n                fields={fields}\n                          hover\n                          striped\n                          bordered\n                          sorter\n\n                size=\"sm\"\n                itemsPerPage={10}\n                pagination\n                scopedSlots = {{\n                  'Action':\n                    (item, index) => {\n                      if (item.id !== \"\") {\n                        return (<td>\n                          <CDropdown className=\"m-1\">\n                            <CDropdownToggle>\n                              <Menu/>\n                            </CDropdownToggle>\n                            <CDropdownMenu className=\"mp-0\">\n                              <CDropdownItem to={\"/admin/master/preview/\" + item.id}>\n                                  <RemoveRedEye/>&nbsp;&nbsp;Aperçu\n                              </CDropdownItem>\n                              <CDropdownItem to={\"/admin/master/edit/\" + item.id}>\n                                  <Edit/> &nbsp;&nbsp;Editer\n                              </CDropdownItem>\n                              {*//*   <CDropdownItem > <Update/> &nbsp;&nbsp;History</CDropdownItem>*//*}\n                              <CDropdownItem>\n                                <Delete/>&nbsp;&nbsp;Supprimer\n                              </CDropdownItem>\n                            </CDropdownMenu>\n                          </CDropdown>\n                        </td>)\n                      }else{\n                        return (<td className=\"p-4\"> </td>)\n                      }\n                    }\n                }}\n              />\n*/}\n            </CCardBody>\n\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n)\n}\nexport default WorkflowMasterList\n","const usersData = [\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending'},\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'}\n]\n\nexport default usersData\n","'use strict';\n\nmodule.exports = require('./components/inputtext/InputText');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');"],"sourceRoot":""}