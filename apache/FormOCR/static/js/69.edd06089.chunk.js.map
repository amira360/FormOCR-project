{"version":3,"sources":["views/Administration/workflowMaster/IndexViews.js","../node_modules/@material-ui/icons/esm/Add.js","../node_modules/primereact/panel.js","../node_modules/primereact/components/panel/Panel.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","marginLeft","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","withStyles","withTheme","props","React","useState","JSON","parse","localStorage","getItem","domainId","selectedKeys","selectedKeys3","setSelectedKeys3","treeData","setTreeData","expandedKeys","setExpandedKeys","workflowMasterId","setWorkflowMasterId","domainName","useEffect","match","params","worklfow_master_data","method","headers","body","stringify","fetch","WORKFLOW_MASTER_SERVICE","then","response","Promise","resolve","reject","text","length","catch","err","data","formsIds","map","taskTab","push","console","log","newArray","filter","elem","pos","indexOf","formCodesTab","id","formCode","form_data","formCodes","FORM_SERVICE","treeKeysTab","nodeDataTab","forms_data_list","forms_data","index","forms_json","nodeData","createTree","components","nodeTree","label","name","children","createTreeKeys","nodesTree","keys","treeParentKeys","keyValue","selectionObject","allSelections","selected","levels","split","checked","partialChecked","key2","root","error","isSub","lev","component","level0","type","title","fieldKey","key","datagridComp","level1","columns","col","sub_comp","level3","datagridComps","level4","comp","level5","level6","node","key_val","node_child","index_child","node_subchild","index_subchild","node_subsubchild","index_subsubchild","onLoad","setTimeout","className","role","value","onToggle","e","selectionMode","selectionKeys","onContextMenu","onSelectionChange","onClick","event","preventDefault","treeFormsSelection","formsSelection","parent","child","undefined","sub_child","formId","selectedFields","index_view_data","history","handleSubmit","color","active","tabIndex","style","textAlign","createSvgIcon","d","module","exports","require","_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","Panel","_react","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","call","desc","set","_interopRequireWildcard","_propTypes","_interopRequireDefault","_CSSTransition","_ClassNames","_UniqueComponentId","_ObjectUtils","_Ripple","WeakMap","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","enumerable","apply","_objectSpread","target","i","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_defineProperties","descriptor","configurable","writable","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_isNativeReflectConstruct","result","Super","_getPrototypeOf","NewTarget","this","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","getPrototypeOf","_Component","subClass","superClass","TypeError","create","_inherits","Constructor","protoProps","staticProps","_super","_this","instance","_classCallCheck","state","collapsed","toggle","bind","contentRef","createRef","toggleable","expand","collapse","originalEvent","setState","onExpand","onCollapse","ariaControls","toggleIcon","expandIcon","collapseIcon","createElement","Ripple","header","getJSXElement","icons","togglerElement","renderToggleIcon","titleElement","iconsElement","content","headerTemplate","defaultContentOptions","titleClassName","iconsClassName","togglerClassName","togglerIconClassName","onTogglerClick","element","CSSTransition","nodeRef","classNames","timeout","enter","exit","in","unmountOnExit","options","transitionOptions","ref","isCollapsed","renderHeader","renderContent","Component","string","any","bool","func"],"mappings":"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","file":"static/js/69.edd06089.chunk.js","sourcesContent":["\nimport React, {useEffect} from 'react';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardHeader,\n    CCol,\n    CFormGroup,\n    CInput, CSelect,\n    CLabel, CNavbar, CNavbarBrand, CRow, CForm, CInputGroup, CInvalidFeedback, CInputCheckbox\n} from '@coreui/react'\nimport {SERVER_URL, WORKFLOW_MASTER_SERVICE, FORM_SERVICE} from \"../../../constants\";\nimport { Tree } from 'primereact/tree';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\n\n\nimport {Add, Cancel, Save} from \"@material-ui/icons\";\nimport {Chip} from \"@material-ui/core\";\nimport Select from 'react-select';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\nimport { Panel } from 'primereact/panel';\nimport {FormBuilder, Form} from \"react-formio\";\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        marginLeft: 0+'px !important',\n        minWidth: 220,\n        maxWidth: 300,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n    noLabel: {\n        marginTop: theme.spacing(3),\n    },\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst WorkflowMasterIndexViews = (props) => {\n    const [collapsed, setCollapsed] = React.useState(true)\n    const [showElements, setShowElements] = React.useState(true)\n    const [formName, setFormName] = React.useState('');\n    const [Alert, setAlert] = React.useState('');\n    const [formId, setFormId] = React.useState('');\n    const [formSno, setFormSno] = React.useState('');\n    const [display, setDisplay] = React.useState('');\n    const [formCode, setFormCode] = React.useState('');\n    const [formVersion, setFormVersion] = React.useState('');\n    const [type, setType] = React.useState('form');\n    const [formCodeState, setFormCodeState] = React.useState('');\n    const [domainId, setDomainId] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainId);\n    const [roles, setRoles] = React.useState([]);\n    const [components, setComponents] = React.useState([]);\n    const [userRoles, setUserRoles] = React.useState([]);\n    const [selectedRoles, setSelectedRoles] = React.useState([]);\n    const [formData, setFormData] = React.useState({});\n    const [form, setForm] = React.useState({});\n    const [formCodeError, setFormCodeError] = React.useState('');\n    const [newVersion, setNewVersion] = React.useState(false);\n    const [username, setUsername] = React.useState(localStorage.getItem('username'));\n    const [selectedKeys, setSelectedKeys] = React.useState([]);\n    const [selectedKeys3, setSelectedKeys3] = React.useState({});\n    const [treeData, setTreeData] = React.useState({});\n    const [expandedKeys, setExpandedKeys] = React.useState({})\n    const [workflowMasterId, setWorkflowMasterId] = React.useState('')\n    const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n\n\n\n    const classes = useStyles();\n    useEffect(()=> {\n\n        const workflowMasterId = props.match.params.workflowMasterId;\n        setWorkflowMasterId(workflowMasterId)\n        const worklfow_master_data = {\n            method: 'POST',\n            headers: {\n                \"X-Tenant\": domainName,\n                'Content-Type': 'application/json', \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n            body: JSON.stringify({domainId : domainId, workflowMasterId: workflowMasterId})\n        };\n        fetch(WORKFLOW_MASTER_SERVICE + '/api/workflowMasterIndexView/getTasksFormIds', worklfow_master_data)\n            .then(response => {\n                return new Promise((resolve, reject) => {\n                    response.text().then(body => {\n                        resolve(\n                            body.length ? JSON.parse(body) : null\n                        );\n                    }).catch(err => {\n                        reject(err);\n                    });\n                });\n            })\n            .then(data => {\n                var formsIds = [];\n                data.map(taskTab =>{\n                    formsIds.push(...taskTab)\n                })\n                console.log(data)\n                console.log(formsIds)\n\n                var newArray = formsIds.filter(function(elem, pos) {\n                    return formsIds.indexOf(elem) == pos;\n                });\n                var formCodesTab = [];\n                newArray.map(id =>{\n                    formCodesTab.push({formCode: id})\n                })\n                console.log(newArray)\n                const form_data = {\n                    method: 'POST',\n                    headers: {\n                        \"X-Tenant\": domainName,\n                        'Content-Type': 'application/json',\n                        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n                    body: JSON.stringify({formCodes : formCodesTab})\n                };\n                fetch(FORM_SERVICE + '/api/form/getByFormCodes', form_data)\n                    .then(response => {\n                        return new Promise((resolve, reject) => {\n                            response.text().then(body => {\n                                resolve(\n                                    body.length ? JSON.parse(body) : null\n                                );\n                            }).catch(err => {\n                                reject(err);\n                            });\n                        });\n                    })\n                    .then(data => {\n                        //  setComponents(JSON.parse(data.form_json).components)\n\n                        console.log(data)\n                        var treeKeysTab = {}\n                        var nodeDataTab = []\n                        const forms_data_list = JSON.parse(data.forms_data)\n                        console.log(forms_data_list)\n                        forms_data_list.map((form_data, index) =>{\n                            console.log(form_data)\n                            console.log(JSON.parse(data.forms_json)[index])\n                            const nodeData = createTree(JSON.parse(data.forms_json)[index].components,true, 0 )\n                            var nodeTree = [{label: form_data.name, id: form_data.id, children: nodeData }]\n\n                            console.log(nodeData)\n                            const [nodesTree, keys] = createTreeKeys(nodeTree,index );\n                            console.log(nodesTree)\n                            console.log(keys)\n                            var treeParentKeys = {};\n                            keys.map(keyValue =>{\n                                treeParentKeys.[keyValue] = true;\n                            })\n                            console.log(treeParentKeys)\n                            nodeDataTab.push(...nodesTree)\n                            treeKeysTab = {...treeKeysTab, ...treeParentKeys}\n                        })\n                        var selectionObject = {}\n                        var allSelections = {}\n                        selectedKeys.map(selected =>{\n                            const levels = selected.split('-');\n                            console.log(levels.length)\n                            if(levels.length === 3 ){\n                                selectionObject = {checked: true, partialChecked: false}\n                                allSelections.[selected] = selectionObject\n                                allSelections.[selected[0]] = {checked: false, partialChecked: true}\n                                const key2 = selected[0]+\"-\"+selected[2]\n                                allSelections.[key2] = {checked: false, partialChecked: true}\n                            }else if(levels.length === 2 ){\n                                selectionObject = {checked: true, partialChecked: false}\n                                allSelections.[selected] = selectionObject\n                                allSelections.[selected[0]] =  {checked: false, partialChecked: true}\n                            }else if(levels.length === 1 ){\n                                selectionObject = {checked: true, partialChecked: false}\n                                allSelections.[selected] = selectionObject\n                            }\n\n                            /*levels.map(level =>{\n\n                            })*/\n                        })\n                        setSelectedKeys3(allSelections)\n                        setExpandedKeys(treeKeysTab)\n                        console.log(treeKeysTab)\n                        console.log(nodeDataTab)\n                        // setExpandedKeys([ ...fieldsKeys])\n                        setTreeData({root: [...nodeDataTab]})\n                        //console.log(form_data);\n                        //  setComponents(JSON.parse(data.form_json).components)\n                        // const form_file = JSON.parse(data.form_json);\n                        // console.log(form_file)\n                        // //  setFormId(getFormId)\n                        // setFormCode(form_data.code)\n                        // setFormName(form_data.name)\n                        // setFormSno(form_data.sno)\n                        // setFormVersion(form_data.version)\n                        // setFormData(form_data)\n                        // const roles_data = form_data.roles\n                        // var tab = []\n                        //\n                        // roles_data.map(role => {\n                        //     tab.push(role.roleName)\n                        // })\n                        // setSelectedRoles(tab)\n                        //\n                        // // setSelectedRoles(form_data.roles)\n                        // setForm(form_file)\n                        // // var keys = [];\n                        //\n                        // //  setExpandedKeys(form_data.code)\n\n                        // const nodeData = createTree(form_file.components,true, 0 )\n                        // var nodeTree = [{label: form_data.name, id: form_data.code, children: nodeData }]\n                        //\n                        // console.log(nodeData)\n                        // const [nodesTree, keys] = createTreeKeys(nodeTree );\n                        // console.log(nodesTree)\n                        // console.log(keys)\n                        // var treeParentKeys = {};\n                        // keys.map(keyValue =>{\n                        //     treeParentKeys.[keyValue] = true;\n                        // })\n                        // console.log(treeParentKeys)\n                        // setExpandedKeys(treeParentKeys)\n                        // // setExpandedKeys([ ...fieldsKeys])\n                        // setTreeData(nodesTree)\n                        /* const form_data = JSON.parse(data.form_json);\n                         console.log(form_data)\n                         setFormId(getFormId)\n                         setFormCode(form_data.code)\n                         setFormName(form_data.name)\n                         setFormData(form_data)\n                         setSelectedRoles(form_data.roles)\n                         console.log(form_data.roles)\n\n                         setForm(form_data.form)*/\n                        // this.props.history.push(\"/admin/formView\");\n                    })\n                    .catch(error => {\n                        console.log(error);\n                    })\n            })\n\n\n\n\n\n        /* setFormId(formId)\n           console.log(formCode);\n           const form_post = {\n             method: 'POST',\n             headers: {'Content-Type': 'application/json', \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n             body: JSON.stringify({formCode : formCode})\n           };\n           fetch('http://localhost:8080/api/form/getByFormCode',form_post)\n             .then(response => {\n               return new Promise((resolve, reject) => {\n                 response.text().then(body => {\n                   resolve(\n                     body.length ? JSON.parse(body) : null\n                   );\n                 }).catch(err => {\n                   reject(err);\n                 });\n               });\n             })\n             .then(data => {\n               //  setComponents(JSON.parse(data.form_json).components)\n               var formDatas = JSON.parse(data.form_json);\n               console.log(formDatas);\n               setFormData(formDatas)\n               setSelectedRoles(formDatas.roles)\n               console.log(selectedRoles)\n               setForm(formDatas.form)\n\n               // this.props.history.push(\"/admin/formView\");\n             })\n             .catch(error => {\n               console.log(error);\n             })\n     */\n\n    },[]);\n    const NewVersionHandle = (checked) =>{\n        setNewVersion(checked)\n        if (checked === true){\n            document.getElementById(\"formVersion\").disabled = false;\n        }else{\n            document.getElementById(\"formVersion\").disabled = true;}\n    }\n\n    const handleSubmit =(event ) => {\n        event.preventDefault();\n\n        var treeFormsSelection = []\n        var formsSelection = []\n        treeData.root.map(parent =>{\n            console.log(parent)\n         //   Object.keys(selectedKeys3)\n            if(selectedKeys3[parent.key]){\n                console.log(selectedKeys3[parent.key])\n                formsSelection.push({label: parent.label,fieldKey: parent.fieldKey, id: parent.id, key:parent.key, data:selectedKeys3[parent.key]})\n\n            }\n            parent.children.map(child =>{\n                if(selectedKeys3[child.key]) {\n                    formsSelection.push({\n                        label: child.label,\n                        id: child.id,\n                        key: child.key,\n                        fieldKey: child.fieldKey,\n                        data: selectedKeys3[child.key]\n                    })\n                }\n                if(child.children !== undefined){\n                    child.children.map(sub_child =>{\n                        if(selectedKeys3[sub_child.key]) {\n                            formsSelection.push({\n                                label: sub_child.label,\n                                id: sub_child.id,\n                                key: sub_child.key,\n                                fieldKey: sub_child.fieldKey,\n                                data: selectedKeys3[sub_child.key]\n                            })\n                        }\n                    })\n                }\n\n            })\n\n            treeFormsSelection.push({formId : parent.id, selectedFields: formsSelection })\n        })\n\n       // const form_data ={treeFormsSelection: treeFormsSelection};\n        const index_view_data = {\n            method: 'POST',\n            headers: {\n                \"X-Tenant\": domainName,\n                'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \"+localStorage.getItem('Authorization')},\n            body: JSON.stringify({domainId: domainId, treeFormsSelection: treeFormsSelection, workflowMasterId: workflowMasterId})\n        };\n        fetch(WORKFLOW_MASTER_SERVICE + '/api/workflowMasterIndexView/saveIndexViews', index_view_data)\n            .then(response => {\n                console.log(response)\n                //toaser\n                props.history.push(\"/admin/workflowMaster/notificationSettings\");\n                // props.history.push(\"/admin/workflowMaster/list\");\n            })\n    }\n\n\n\n    const createTree =(data, isSub,lev) => {\n        let children = [];\n        let count = 0;\n        console.log(data)\n        data.map((component, level0) =>{\n            if (typeof(component.components) === 'object') { // Sub array found, build structure\n             //   children.push({label: component.title, key: component.key, children: createTree(component.components, true, level)})\n                if (component.type !== \"datagrid\"){\n                    children.push({\n                        label: component.title,\n                        id: component.id,\n                        fieldKey: component.key,\n                        children: createTree(component.components, true, count)\n                    })\n                }else{\n                    component.components.map((datagridComp, level1) => {\n                        if (typeof(datagridComp.components) === 'object')  {\n                            children.push({\n                                label: datagridComp.label,\n                                id: datagridComp.id,\n                                fieldKey: datagridComp.key,\n                                children: createTree(datagridComp.components, true, count)\n                            })\n                        } else  if(typeof(datagridComp.columns) === 'object')\n                        {\n                            datagridComp.columns.map((col) =>{\n                                if (typeof(col.components) === 'object') { // Sub array found, build structure\n                                    col.components.map((sub_comp, level3) =>{\n                                        if (typeof(sub_comp.components) === 'object') {\n                                            if (sub_comp.type !== \"datagrid\"){\n                                                children.push({\n                                                    label: sub_comp.label,\n                                                    id: sub_comp.id,\n                                                    fieldKey: sub_comp.key,\n                                                    children: createTree(sub_comp.components, true, count)\n                                                })\n                                            }else{\n                                                sub_comp.components.map((datagridComps, level4) => {\n                                                    if (typeof(datagridComps.components) === 'object')  {\n                                                        children.push({\n                                                            label: datagridComps.label,\n                                                            id: datagridComps.id,\n                                                            fieldKey: datagridComps.key,\n                                                            children: createTree(datagridComps.components, true, count)\n                                                        })\n                                                    } else {\n                                                        children.push({\n                                                            label: datagridComps.label,\n                                                            id: datagridComps.id,\n                                                            fieldKey: datagridComps.key,\n                                                        })\n                                                    }\n                                                })\n                                            }\n                                        } else{\n                                            children.push(\n                                                {label: sub_comp.label,\n                                                    id: sub_comp.id,\n                                                    fieldKey: sub_comp.key,\n                                                }\n                                            );\n                                        }\n                                    })\n                                }\n                            })\n                        }else{\n                            children.push({\n                                label: datagridComp.label,\n                                id: datagridComp.id,\n                                fieldKey: datagridComp.key,\n                            })\n                        }\n                    })\n                }\n             }else if (typeof(component.columns) === 'object') {\n                component.columns.map((col) =>{\n                    if (typeof(col.components) === 'object') { // Sub array found, build structure\n                        col.components.map((comp, level5) =>{\n                            if (typeof(comp.components) === 'object') {\n                                if (comp.type !== \"datagrid\"){\n                                    children.push({\n                                        label: comp.label,\n                                        id: comp.id,\n                                        fieldKey: comp.key,\n                                        children: createTree(comp.components, true, count)\n                                    })\n                                }else{\n                                        comp.components.map((datagridComp, level6) => {\n                                           if (typeof(datagridComp.components) === 'object')  {\n                                                children.push({\n                                                    label: datagridComp.label,\n                                                    id: datagridComp.id,\n                                                    fieldKey: datagridComp.key,\n                                                    children: createTree(datagridComp.components, true, count)\n                                                })\n                                            } else {\n                                                    children.push({\n                                                        label: datagridComp.label,\n                                                        id: datagridComp.id,\n                                                        fieldKey: datagridComp.key,\n                                                    })\n                                            }\n                                        })\n                                    }\n                                } else{\n                            children.push(\n                                {label: comp.label,\n                                    id: comp.id,\n                                    fieldKey: comp.key,\n                                }\n                            );\n                        }\n                        })\n                    }\n                })\n            }else { // No submenu, bottom of tree\n                children.push(\n                    {label: component.label,\n                        id: component.id,\n                        fieldKey: component.key,\n                    }\n                );\n            }\n        })\n\n      //  setExpandedKeys(keys)\n        /* console.log(keys)*/\n\n        return children;\n        //return <div className='filter-body open'>{children}</div>;\n\n        }\n    const createTreeKeys =(data, key) => {\n        let keys = [ ];\n        console.log(data)\n        data.map((node, index) =>{\n            var key_val = index+key\n            node.key = \"\"+key_val\n\n            if(node.children && node.children.length){\n                keys.push(node.key)\n                node.children.map((node_child, index_child)=>{\n                    node_child.key = node.key+\"-\"+index_child\n\n                    if( node_child.children && node_child.children.length){\n                        keys.push(node_child.key)\n                        node_child.children.map((node_subchild, index_subchild)=>{\n                            node_subchild.key = node_child.key + \"-\"+ index_subchild\n\n                            if(node_subchild.children && node_subchild.children.length){\n                                keys.push(node_subchild.key);\n                                node_subchild.children.map((node_subsubchild, index_subsubchild)=>{\n                                    node_subsubchild.key =  node_subchild.key +\"-\"+index_subsubchild\n                                 //   keys.push(node_subsubchild.key)\n                                })\n                            }\n                        })\n                    }\n                })\n                }\n            })\n\n        return  [data, keys];\n        //return <div className='filter-body open'>{children}</div>;\n\n    }\n    const verifyLength = (value, length) => {\n        if (value.length >= length) {\n            return true;\n        }\n        return false;\n    };\n    const basicAlert = () =>{\n        /* this.setState({alert:\n             <SweetAlert\n               style={{ display: \"block\", marginTop: \"-100px\" }}\n               title=\"the form code is already used !\"\n               onConfirm={() => this.hideAlert()}\n               onCancel={() => this.hideAlert()}\n             />\n         })*/\n    };\n\n    const handleDelete = (chipToDelete) =>{\n        console.log(chipToDelete);\n        console.log(roles);\n        console.log(roles.filter((chip) => chip !== chipToDelete))\n        const data = roles.filter((chip) => chip !== chipToDelete);\n        setRoles(data);\n    };\nconst spinner = ()=>{\n    setTimeout(()=> {\n        return (\n            <div className=\"spinner-border text-primary\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        )\n    })\n\n}\n    let icon;\n    return (\n        <div onLoad={spinner}>\n            <CCardHeader>\n                <h3>Choisir les noms des colonnes à afficher</h3>\n            </CCardHeader>\n              <Tree value={treeData.root} onToggle={e => setExpandedKeys(e.value)} expandedKeys={expandedKeys}\n                              selectionMode=\"checkbox\" selectionKeys={selectedKeys3} onContextMenu={e => console.log(e)}\n                              onSelectionChange={e => {\n                                  console.log(e.value)\n                                  setSelectedKeys3(e.value)}}/>\n            <CCardFooter>\n                <CButton onClick={(e)=> handleSubmit(e)}  color=\"success\" className=\"mt-3 -item-right\" active tabIndex={-1} style={{textAlign: \"right\"}}><Add/>Submit</CButton>\n            </CCardFooter>\n        </div>\n    )\n}\nexport default withStyles({ ...useStyles}, { withTheme: true })(WorkflowMasterIndexViews) ;\n\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","'use strict';\n\nmodule.exports = require('./components/panel/Panel');","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Panel = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _CSSTransition = require(\"../transition/CSSTransition\");\n\nvar _ClassNames = require(\"../utils/ClassNames\");\n\nvar _UniqueComponentId = _interopRequireDefault(require(\"../utils/UniqueComponentId\"));\n\nvar _ObjectUtils = _interopRequireDefault(require(\"../utils/ObjectUtils\"));\n\nvar _Ripple = require(\"../ripple/Ripple\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Panel = /*#__PURE__*/function (_Component) {\n  _inherits(Panel, _Component);\n\n  var _super = _createSuper(Panel);\n\n  function Panel(props) {\n    var _this;\n\n    _classCallCheck(this, Panel);\n\n    _this = _super.call(this, props);\n    var state = {\n      id: _this.props.id\n    };\n\n    if (!_this.props.onToggle) {\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        collapsed: _this.props.collapsed\n      });\n    }\n\n    _this.state = state;\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.contentRef = /*#__PURE__*/_react.default.createRef();\n    return _this;\n  }\n\n  _createClass(Panel, [{\n    key: \"toggle\",\n    value: function toggle(event) {\n      if (this.props.toggleable) {\n        var collapsed = this.props.onToggle ? this.props.collapsed : this.state.collapsed;\n        if (collapsed) this.expand(event);else this.collapse(event);\n\n        if (this.props.onToggle) {\n          this.props.onToggle({\n            originalEvent: event,\n            value: !collapsed\n          });\n        }\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"expand\",\n    value: function expand(event) {\n      if (!this.props.onToggle) {\n        this.setState({\n          collapsed: false\n        });\n      }\n\n      if (this.props.onExpand) {\n        this.props.onExpand(event);\n      }\n    }\n  }, {\n    key: \"collapse\",\n    value: function collapse(event) {\n      if (!this.props.onToggle) {\n        this.setState({\n          collapsed: true\n        });\n      }\n\n      if (this.props.onCollapse) {\n        this.props.onCollapse(event);\n      }\n    }\n  }, {\n    key: \"isCollapsed\",\n    value: function isCollapsed() {\n      return this.props.toggleable ? this.props.onToggle ? this.props.collapsed : this.state.collapsed : false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.state.id) {\n        this.setState({\n          id: (0, _UniqueComponentId.default)()\n        });\n      }\n    }\n  }, {\n    key: \"renderToggleIcon\",\n    value: function renderToggleIcon(collapsed) {\n      if (this.props.toggleable) {\n        var id = this.state.id + '_label';\n        var ariaControls = this.state.id + '_content';\n        var toggleIcon = collapsed ? this.props.expandIcon : this.props.collapseIcon;\n        return /*#__PURE__*/_react.default.createElement(\"button\", {\n          className: \"p-panel-header-icon p-panel-toggler p-link\",\n          onClick: this.toggle,\n          id: id,\n          \"aria-controls\": ariaControls,\n          \"aria-expanded\": !collapsed,\n          role: \"tab\"\n        }, /*#__PURE__*/_react.default.createElement(\"span\", {\n          className: toggleIcon\n        }), /*#__PURE__*/_react.default.createElement(_Ripple.Ripple, null));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader(collapsed) {\n      var header = _ObjectUtils.default.getJSXElement(this.props.header, this.props);\n\n      var icons = _ObjectUtils.default.getJSXElement(this.props.icons, this.props);\n\n      var togglerElement = this.renderToggleIcon(collapsed);\n\n      var titleElement = /*#__PURE__*/_react.default.createElement(\"span\", {\n        className: \"p-panel-title\",\n        id: this.state.id + '_header'\n      }, header);\n\n      var iconsElement = /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: \"p-panel-icons\"\n      }, icons, togglerElement);\n\n      var content = /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: \"p-panel-header\"\n      }, titleElement, iconsElement);\n\n      if (this.props.headerTemplate) {\n        var defaultContentOptions = {\n          className: 'p-panel-header',\n          titleClassName: 'p-panel-title',\n          iconsClassName: 'p-panel-icons',\n          togglerClassName: 'p-panel-header-icon p-panel-toggler p-link',\n          togglerIconClassName: collapsed ? this.props.expandIcon : this.props.collapseIcon,\n          onTogglerClick: this.toggle,\n          titleElement: titleElement,\n          iconsElement: iconsElement,\n          togglerElement: togglerElement,\n          element: content,\n          props: this.props,\n          collapsed: collapsed\n        };\n        return _ObjectUtils.default.getJSXElement(this.props.headerTemplate, defaultContentOptions);\n      } else if (this.props.header || this.props.toggleable) {\n        return content;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent(collapsed) {\n      var id = this.state.id + '_content';\n      return /*#__PURE__*/_react.default.createElement(_CSSTransition.CSSTransition, {\n        nodeRef: this.contentRef,\n        classNames: \"p-toggleable-content\",\n        timeout: {\n          enter: 1000,\n          exit: 450\n        },\n        in: !collapsed,\n        unmountOnExit: true,\n        options: this.props.transitionOptions\n      }, /*#__PURE__*/_react.default.createElement(\"div\", {\n        ref: this.contentRef,\n        className: \"p-toggleable-content\",\n        \"aria-hidden\": collapsed,\n        role: \"region\",\n        id: id,\n        \"aria-labelledby\": this.state.id + '_header'\n      }, /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: \"p-panel-content\"\n      }, this.props.children)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = (0, _ClassNames.classNames)('p-panel p-component', {\n        'p-panel-toggleable': this.props.toggleable\n      }, this.props.className);\n      var collapsed = this.isCollapsed();\n      var header = this.renderHeader(collapsed);\n      var content = this.renderContent(collapsed);\n      return /*#__PURE__*/_react.default.createElement(\"div\", {\n        id: this.props.id,\n        className: className,\n        style: this.props.style\n      }, header, content);\n    }\n  }]);\n\n  return Panel;\n}(_react.Component);\n\nexports.Panel = Panel;\n\n_defineProperty(Panel, \"defaultProps\", {\n  id: null,\n  header: null,\n  headerTemplate: null,\n  toggleable: null,\n  style: null,\n  className: null,\n  collapsed: null,\n  expandIcon: 'pi pi-plus',\n  collapseIcon: 'pi pi-minus',\n  icons: null,\n  transitionOptions: null,\n  onExpand: null,\n  onCollapse: null,\n  onToggle: null\n});\n\n_defineProperty(Panel, \"propTypes\", {\n  id: _propTypes.default.string,\n  header: _propTypes.default.any,\n  headerTemplate: _propTypes.default.any,\n  toggleable: _propTypes.default.bool,\n  style: _propTypes.default.object,\n  className: _propTypes.default.string,\n  collapsed: _propTypes.default.bool,\n  expandIcon: _propTypes.default.string,\n  collapseIcon: _propTypes.default.string,\n  icons: _propTypes.default.any,\n  transitionOptions: _propTypes.default.object,\n  onExpand: _propTypes.default.func,\n  onCollapse: _propTypes.default.func,\n  onToggle: _propTypes.default.func\n});"],"sourceRoot":""}