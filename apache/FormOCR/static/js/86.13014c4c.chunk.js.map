{"version":3,"sources":["views/Administration/messaging/MessageView.js","assets/form/emptyForm.bpmn.jsx"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","marginLeft","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","withStyles","withTheme","props","React","useState","setMessageId","setNotificationFrom","notificationTo","setNotificationTo","notificationSubject","setNotificationSubject","setNotificationId","notificationSno","setNotificationSno","notificationCc","setNotificationCc","notificationBcc","setNotificationBcc","JSON","parse","localStorage","getItem","domainId","toRoles","setToRoles","userRoles","setUserRoles","notificationData","setNotificationData","domainName","useEffect","message_id","match","params","messageId","console","log","roles_data","method","headers","fetch","USER_SERVICE","then","response","json","data","rolesFromApi","map","role","push","value","roleName","label","catch","error","notification_id","notification_data","body","stringify","id","MESSAGING_SERVICE","Promise","resolve","reject","text","length","err","notification","notification_msg","messaging_msg","toRoles_data","notificationToRoles","tab","messagingBcc","messagingCc","messagingSubject","messagingTo","sno","xs","sm","noValidate","row","className","htmlFor","onChange","e","target","disabled","md","name","placeholder","isMulti","style","backgroundColor","padding","event","editor","getData","color","onClick","history","emptyForm"],"mappings":"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","file":"static/js/86.13014c4c.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardHeader,\n    CCol,\n    CFormGroup,\n    CInput, CSelect,\n    CLabel, CNavbar, CNavbarBrand, CRow, CForm, CInputGroup, CInvalidFeedback, CInputCheckbox, CInputRadio,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { DocsLink } from 'src/reusable'\nimport { Link } from 'react-router-dom'\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport {emptyForm} from \"../../../assets/form/emptyForm.bpmn.jsx\";\nimport CKEditor from 'ckeditor4-react';\nimport {SERVER_URL, USER_SERVICE, MAIL_NOTIFICATION_SERVICE, NORM_SERVICE, MESSAGING_SERVICE} from \"../../../constants\";\n\nimport {Cancel, Save} from \"@material-ui/icons\";\nimport {Chip} from \"@material-ui/core\";\nimport Select from 'react-select';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        marginLeft: 0+'px !important',\n        minWidth: 220,\n        maxWidth: 300,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n    noLabel: {\n        marginTop: theme.spacing(3),\n    },\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst MessageView = (props) => {\n    const [collapsed, setCollapsed] = React.useState(true)\n    const [showElements, setShowElements] = React.useState(true)\n    const [notificationName, setNotificationName] = React.useState('');\n    const [messageId, setMessageId] = React.useState('');\n    const [Alert, setAlert] = React.useState('');\n    const [formId, setFormId] = React.useState('');\n    const [display, setDisplay] = React.useState('');\n    const [notificationFrom, setNotificationFrom] = React.useState('support@isct-group.com');\n    const [notificationTo, setNotificationTo] = React.useState('');\n    const [notificationSubject, setNotificationSubject] = React.useState('');\n    const [notificationId, setNotificationId] = React.useState('');\n    const [notificationSno, setNotificationSno] = React.useState('');\n    const [notificationCc, setNotificationCc] = React.useState('');\n    const [notificationBcc, setNotificationBcc] = React.useState('');\n    const [notificationSite, setNotificationSite] = React.useState('');\n    const [enableEmailNotification, setEnableEmailNotification] = React.useState('');\n    const [notificationVersion, setNotificationVersion] = React.useState('');\n    const [versionState, setVersionState] = React.useState('');\n    const [domainId, setDomainId] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainId);\n    const [roles, setRoles] = React.useState([]);\n    const [toRoles, setToRoles] = React.useState([]);\n    const [components, setComponents] = React.useState([]);\n    const [userRoles, setUserRoles] = React.useState([]);\n    const [versionError, setVersionError] = React.useState('');\n    const [notificationData, setNotificationData] = React.useState('');\n    const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n\n    /* const [norms, setNorms] = React.useState([]);\n     const [selectedNorms, setSelectedNorms] = React.useState([]);*/\n    const classes = useStyles();\n    useEffect(()=> {\n        const message_id = props.match.params.messageId;\n        console.log(message_id)\n        setMessageId(message_id)\n        const roles_data = {\n            method: 'GET',\n            headers: {\n                \"X-Tenant\": domainName,\n                'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n            }\n        };\n        fetch(USER_SERVICE + \"/api/auth/role/getRoles\", roles_data)\n            .then((response) => {\n                return response.json();\n            })\n            .then(data => {\n                console.log(data);\n                var rolesFromApi = [];\n                data.map(role => {\n                    rolesFromApi.push({\n                        value : role.roleName,\n                        label : role.roleName\n                    })})\n                setUserRoles(rolesFromApi);\n                console.log(userRoles);\n            }).catch(error => {\n            console.log(error);\n        });\n        const  notification_id = props.match.params.messageId;\n        console.log(notification_id)\n        setNotificationId(notification_id)\n        const notification_data = {\n            method: 'POST',\n            headers: {\n                \"X-Tenant\": domainName,\n                'Content-Type': 'application/json', \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n            body: JSON.stringify({id : notification_id})\n        };\n        fetch(MESSAGING_SERVICE + '/api/auth/getById',notification_data)\n            .then(response => {\n                return new Promise((resolve, reject) => {\n                    response.text().then(body => {\n                        resolve(\n                            body.length ? JSON.parse(body) : null\n                        );\n                    }).catch(err => {\n                        reject(err);\n                    });\n                });\n            })\n            .then(data => {\n                console.log(data);\n                const notification = JSON.parse(data.notification)\n                const notification_msg = data.messaging_msg\n\n                setNotificationData(notification_msg);\n                //  setComponents(JSON.parse(data.form_json).components)\n\n                const toRoles_data = JSON.parse(data.notificationToRoles)\n               var tab = []\n                toRoles_data.map(role => {\n                    tab.push({value: role.roleName, label: role.roleName})\n                })\n                setToRoles(tab)\n                setNotificationBcc(notification.messagingBcc)\n                setNotificationCc(notification.messagingCc)\n                setNotificationFrom(\"support@isct-group.com\")\n                setNotificationSubject(notification.messagingSubject)\n                setNotificationTo(notification.messagingTo)\n                setNotificationSno(notification.sno)\n\n                // this.props.history.push(\"/admin/formView\");\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    },[]);\n\n\n\n\n    const handleNotificationSubmit =(event ) => {\n        event.preventDefault();\n        console.log(roles);\n        const notification_data = {\n            method: 'POST',\n            headers: {\n                \"X-Tenant\": domainName,\n                'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \"+localStorage.getItem('Authorization')},\n            body: JSON.stringify({\n                // standards: selectedNorms,\n                notificationName: notificationName,\n                notificationRoles:roles, notificationFrom: notificationFrom,\n                notificationTo: notificationTo, notificationCc: notificationCc,\n                notificationBcc: notificationBcc, notificationSubject: notificationSubject,\n                domainId: domainId, notificationToRoles: toRoles, username: localStorage.getItem('username'), notificationData: notificationData})\n        };\n\n        if (versionState === \"\") {\n            setVersionState(\"error\");\n        }\n        if(versionState  === \"success\"){\n            fetch(MAIL_NOTIFICATION_SERVICE + '/api/messaging/send', notification_data)\n                .then(response => {\n                    console.log(response)\n                    props.history.push(\"/admin/messaging/list\");\n\n                })\n        }\n    }\n\n    const verifyLength = (value, length) => {\n        if (value.length >= length) {\n            return true;\n        }\n        return false;\n    };\n\n    const handleDelete = (chipToDelete) =>{\n        console.log(chipToDelete);\n        console.log(roles);\n        console.log(roles.filter((chip) => chip !== chipToDelete))\n        const data = roles.filter((chip) => chip !== chipToDelete);\n        setRoles(data);\n    };\n    const handleToRolesDelete = (chipToDelete) =>{\n        console.log(chipToDelete);\n        console.log(toRoles.filter((chip) => chip !== chipToDelete))\n        const data = toRoles.filter((chip) => chip !== chipToDelete);\n        setToRoles(data);\n    };\n\n    let icon;\n    return (\n        <>\n            <CCol xs=\"12\" sm=\"12\">\n                <CCard>\n                    <CCardHeader>\n                        <h2>Details de message</h2>\n                    </CCardHeader>\n                    <CCardBody>\n                        <CForm  noValidate >\n                            <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"6\">\n                                    <CFormGroup>\n                                        <CLabel htmlFor=\"SNo\">S No</CLabel>\n                                        <CInput id=\"SNo\" onChange={e => setNotificationSno(e.target.value)}\n                              value={notificationSno} disabled />\n                                    </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"6\">\n                                    <CFormGroup>\n                                        <CLabel htmlFor=\"Subject\">Sujet</CLabel>\n                                        <CInput id=\"Subject\" onChange={e => setNotificationSubject(e.target.value) }\n                                                value={notificationSubject} disabled  />\n                                    </CFormGroup>\n                                </CCol>\n\n                            </CFormGroup>\n\n\n                            <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"6\">\n                                    <CFormGroup>\n                                        <CLabel htmlFor=\"To\">À</CLabel>\n                                        <CInput id=\"To\"  disabled onChange={e => setNotificationTo(e.target.value) }\n                                                value={notificationTo} />\n                                    </CFormGroup>\n                                </CCol>\n                                <CCol sm={12} md={6}>\n                                    <CFormGroup>\n                                        <CLabel htmlFor=\"AccessControlUser\">À (Roles)</CLabel>\n\n                                        <Select disabled\n                                            name=\"form-field-name2\"\n                                            placeholder=\"Global\"\n                                            value={toRoles}\n\n                                            isMulti\n                                        />\n                                    </CFormGroup>\n                                </CCol>\n                            </CFormGroup>\n\n                            <CFormGroup row className=\"my-0\">\n\n\n\n\n\n                                <CCol xs=\"6\">\n                                    <CFormGroup>\n                                        <CLabel htmlFor=\"Cc\">Cc</CLabel>\n                                        <CInput id=\"Cc\" disabled  onChange={e => setNotificationCc(e.target.value) }\n                                                value={notificationCc} />\n                                    </CFormGroup>\n                                </CCol>\n\n                                <CCol xs=\"6\">\n                                    <CFormGroup>\n                                        <CLabel htmlFor=\"Bcc\">Cci</CLabel>\n                                        <CInput id=\"Bcc\" disabled onChange={e => setNotificationBcc(e.target.value) }\n                                                value={notificationBcc} />\n                                    </CFormGroup>\n                                </CCol>\n                            </CFormGroup>\n\n\n                            <CCard>\n                                <CCardHeader style={{backgroundColor:\"#F5F5F5\"}}>\n                                    Body\n                                </CCardHeader>\n                                <CCardBody style={{padding:'0px'}}>\n                                    <CKEditor disabled\n                                        data={notificationData}\n                                        onChange={(event) => {\n                                            setNotificationData(event.editor.getData());\n                                        }}\n                                    />\n                                </CCardBody>\n                            </CCard>\n                            <CRow xs=\"4\">\n\n                                <CCol xs=\"4\" className=\"text-md-left\">\n                                    <CButton color=\"danger\" onClick={()=> props.history.push(\"/admin/messaging/list\")}>\n                                        <Cancel />\n                                        Cancel\n                                    </CButton>\n                                </CCol></CRow>\n                        </CForm>\n                    </CCardBody>\n                </CCard>\n            </CCol>\n        </>\n    )\n}\nexport default withStyles({ ...useStyles}, { withTheme: true })(MessageView) ;\n\n","export const emptyForm = `{\"display\":\"form\",\"form\":{\"display\":\"form\",\"components\":[{\"title\":\"Panel\",\"theme\":\"default\",\"tooltip\":\"\",\"customClass\":\"\",\"collapsible\":false,\"hidden\":false,\"hideLabel\":false,\"disabled\":false,\"modalEdit\":false,\"key\":\"panel\",\"tags\":[],\"properties\":{},\"customConditional\":\"\",\"conditional\":{\"json\":\"\",\"show\":null,\"when\":null,\"eq\":\"\"},\"logic\":[],\"attributes\":{},\"overlay\":{\"style\":\"\",\"page\":\"\",\"left\":\"\",\"top\":\"\",\"width\":\"\",\"height\":\"\"},\"type\":\"panel\",\"label\":\"Panel\",\"breadcrumb\":\"default\",\"tabindex\":\"\",\"input\":false,\"placeholder\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"multiple\":false,\"defaultValue\":null,\"protected\":false,\"unique\":false,\"persistent\":false,\"clearOnHide\":false,\"refreshOn\":\"\",\"redrawOn\":\"\",\"tableView\":false,\"labelPosition\":\"top\",\"description\":\"\",\"errorLabel\":\"\",\"autofocus\":false,\"dbIndex\":false,\"customDefaultValue\":\"\",\"calculateValue\":\"\",\"calculateServer\":false,\"widget\":null,\"validateOn\":\"change\",\"validate\":{\"required\":false,\"custom\":\"\",\"customPrivate\":false,\"strictDateValidation\":false,\"multiple\":false,\"unique\":false},\"allowCalculateOverride\":false,\"encrypted\":false,\"showCharCount\":false,\"showWordCount\":false,\"allowMultipleMasks\":false,\"tree\":false,\"components\":[{\"label\":\"Columns\",\"columns\":[{\"components\":[],\"width\":6,\"offset\":0,\"push\":0,\"pull\":0,\"size\":\"md\"},{\"components\":[],\"width\":6,\"offset\":0,\"push\":0,\"pull\":0,\"size\":\"md\"}],\"autoAdjust\":false,\"hideOnChildrenHidden\":false,\"customClass\":\"\",\"hidden\":false,\"hideLabel\":false,\"modalEdit\":false,\"key\":\"columns\",\"tags\":[],\"properties\":{},\"conditional\":{\"show\":null,\"when\":null,\"eq\":\"\",\"json\":\"\"},\"customConditional\":\"\",\"logic\":[],\"attributes\":{},\"overlay\":{\"style\":\"\",\"page\":\"\",\"left\":\"\",\"top\":\"\",\"width\":\"\",\"height\":\"\"},\"type\":\"columns\",\"input\":false,\"placeholder\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"multiple\":false,\"defaultValue\":null,\"protected\":false,\"unique\":false,\"persistent\":false,\"clearOnHide\":false,\"refreshOn\":\"\",\"redrawOn\":\"\",\"tableView\":false,\"labelPosition\":\"top\",\"description\":\"\",\"errorLabel\":\"\",\"tooltip\":\"\",\"tabindex\":\"\",\"disabled\":false,\"autofocus\":false,\"dbIndex\":false,\"customDefaultValue\":\"\",\"calculateValue\":\"\",\"calculateServer\":false,\"widget\":null,\"validateOn\":\"change\",\"validate\":{\"required\":false,\"custom\":\"\",\"customPrivate\":false,\"strictDateValidation\":false,\"multiple\":false,\"unique\":false},\"allowCalculateOverride\":false,\"encrypted\":false,\"showCharCount\":false,\"showWordCount\":false,\"allowMultipleMasks\":false,\"tree\":false,\"id\":\"e7wum4j\"}],\"id\":\"eoa4jqh\"},{\"type\":\"button\",\"label\":\"Submit\",\"key\":\"submit\",\"size\":\"md\",\"block\":false,\"action\":\"submit\",\"disableOnInvalid\":true,\"theme\":\"primary\",\"input\":true,\"placeholder\":\"\",\"prefix\":\"\",\"customClass\":\"\",\"suffix\":\"\",\"multiple\":false,\"defaultValue\":null,\"protected\":false,\"unique\":false,\"persistent\":false,\"hidden\":false,\"clearOnHide\":true,\"refreshOn\":\"\",\"redrawOn\":\"\",\"tableView\":false,\"modalEdit\":false,\"labelPosition\":\"top\",\"description\":\"\",\"errorLabel\":\"\",\"tooltip\":\"\",\"hideLabel\":false,\"tabindex\":\"\",\"disabled\":false,\"autofocus\":false,\"dbIndex\":false,\"customDefaultValue\":\"\",\"calculateValue\":\"\",\"calculateServer\":false,\"widget\":{\"type\":\"input\"},\"attributes\":{},\"validateOn\":\"change\",\"validate\":{\"required\":false,\"custom\":\"\",\"customPrivate\":false,\"strictDateValidation\":false,\"multiple\":false,\"unique\":false},\"conditional\":{\"show\":null,\"when\":null,\"eq\":\"\"},\"overlay\":{\"style\":\"\",\"left\":\"\",\"top\":\"\",\"width\":\"\",\"height\":\"\"},\"allowCalculateOverride\":false,\"encrypted\":false,\"showCharCount\":false,\"showWordCount\":false,\"properties\":{},\"allowMultipleMasks\":false,\"leftIcon\":\"\",\"rightIcon\":\"\",\"dataGridLabel\":true,\"id\":\"eh3b4xu\"}]},\"domainId\":1,\"roles\":[\"Admin\"],\"components\":[{\"title\":\"Panel\",\"theme\":\"default\",\"tooltip\":\"\",\"customClass\":\"\",\"collapsible\":false,\"hidden\":false,\"hideLabel\":false,\"disabled\":false,\"modalEdit\":false,\"key\":\"panel\",\"tags\":[],\"properties\":{},\"customConditional\":\"\",\"conditional\":{\"json\":\"\",\"show\":null,\"when\":null,\"eq\":\"\"},\"logic\":[],\"attributes\":{},\"overlay\":{\"style\":\"\",\"page\":\"\",\"left\":\"\",\"top\":\"\",\"width\":\"\",\"height\":\"\"},\"type\":\"panel\",\"label\":\"Panel\",\"breadcrumb\":\"default\",\"tabindex\":\"\",\"input\":false,\"placeholder\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"multiple\":false,\"defaultValue\":null,\"protected\":false,\"unique\":false,\"persistent\":false,\"clearOnHide\":false,\"refreshOn\":\"\",\"redrawOn\":\"\",\"tableView\":false,\"labelPosition\":\"top\",\"description\":\"\",\"errorLabel\":\"\",\"autofocus\":false,\"dbIndex\":false,\"customDefaultValue\":\"\",\"calculateValue\":\"\",\"calculateServer\":false,\"widget\":null,\"validateOn\":\"change\",\"validate\":{\"required\":false,\"custom\":\"\",\"customPrivate\":false,\"strictDateValidation\":false,\"multiple\":false,\"unique\":false},\"allowCalculateOverride\":false,\"encrypted\":false,\"showCharCount\":false,\"showWordCount\":false,\"allowMultipleMasks\":false,\"tree\":false,\"components\":[{\"label\":\"Columns\",\"columns\":[{\"components\":[],\"width\":6,\"offset\":0,\"push\":0,\"pull\":0,\"size\":\"md\"},{\"components\":[],\"width\":6,\"offset\":0,\"push\":0,\"pull\":0,\"size\":\"md\"}],\"autoAdjust\":false,\"hideOnChildrenHidden\":false,\"customClass\":\"\",\"hidden\":false,\"hideLabel\":false,\"modalEdit\":false,\"key\":\"columns\",\"tags\":[],\"properties\":{},\"conditional\":{\"show\":null,\"when\":null,\"eq\":\"\",\"json\":\"\"},\"customConditional\":\"\",\"logic\":[],\"attributes\":{},\"overlay\":{\"style\":\"\",\"page\":\"\",\"left\":\"\",\"top\":\"\",\"width\":\"\",\"height\":\"\"},\"type\":\"columns\",\"input\":false,\"placeholder\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"multiple\":false,\"defaultValue\":null,\"protected\":false,\"unique\":false,\"persistent\":false,\"clearOnHide\":false,\"refreshOn\":\"\",\"redrawOn\":\"\",\"tableView\":false,\"labelPosition\":\"top\",\"description\":\"\",\"errorLabel\":\"\",\"tooltip\":\"\",\"tabindex\":\"\",\"disabled\":false,\"autofocus\":false,\"dbIndex\":false,\"customDefaultValue\":\"\",\"calculateValue\":\"\",\"calculateServer\":false,\"widget\":null,\"validateOn\":\"change\",\"validate\":{\"required\":false,\"custom\":\"\",\"customPrivate\":false,\"strictDateValidation\":false,\"multiple\":false,\"unique\":false},\"allowCalculateOverride\":false,\"encrypted\":false,\"showCharCount\":false,\"showWordCount\":false,\"allowMultipleMasks\":false,\"tree\":false,\"id\":\"e7wum4j\"}],\"id\":\"eoa4jqh\"},{\"type\":\"button\",\"label\":\"Submit\",\"key\":\"submit\",\"size\":\"md\",\"block\":false,\"action\":\"submit\",\"disableOnInvalid\":true,\"theme\":\"primary\",\"input\":true,\"placeholder\":\"\",\"prefix\":\"\",\"customClass\":\"\",\"suffix\":\"\",\"multiple\":false,\"defaultValue\":null,\"protected\":false,\"unique\":false,\"persistent\":false,\"hidden\":false,\"clearOnHide\":true,\"refreshOn\":\"\",\"redrawOn\":\"\",\"tableView\":false,\"modalEdit\":false,\"labelPosition\":\"top\",\"description\":\"\",\"errorLabel\":\"\",\"tooltip\":\"\",\"hideLabel\":false,\"tabindex\":\"\",\"disabled\":false,\"autofocus\":false,\"dbIndex\":false,\"customDefaultValue\":\"\",\"calculateValue\":\"\",\"calculateServer\":false,\"widget\":{\"type\":\"input\"},\"attributes\":{},\"validateOn\":\"change\",\"validate\":{\"required\":false,\"custom\":\"\",\"customPrivate\":false,\"strictDateValidation\":false,\"multiple\":false,\"unique\":false},\"conditional\":{\"show\":null,\"when\":null,\"eq\":\"\"},\"overlay\":{\"style\":\"\",\"left\":\"\",\"top\":\"\",\"width\":\"\",\"height\":\"\"},\"allowCalculateOverride\":false,\"encrypted\":false,\"showCharCount\":false,\"showWordCount\":false,\"properties\":{},\"allowMultipleMasks\":false,\"leftIcon\":\"\",\"rightIcon\":\"\",\"dataGridLabel\":true,\"id\":\"eh3b4xu\"}]}`;\n"],"sourceRoot":""}