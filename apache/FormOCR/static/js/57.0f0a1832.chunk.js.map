{"version":3,"sources":["views/Administration/users/EditProfile.js","../node_modules/@material-ui/icons/esm/Save.js","../node_modules/@material-ui/icons/esm/Cancel.js"],"names":["EditProfile","props","useState","firstname","setFirstname","lastname","setLastname","email","setEmail","phone","setPhone","usernamee","setUsernamee","lastnameState","setLastnameState","lastnameError","setLastnameError","firstnameError","setFirstnameError","firstnameState","setFirstnameState","emailState","setEmailState","emailError","setEmailError","phoneState","setPhoneState","phoneError","setPhoneError","oldPhoto","setOldPhoto","photo","setPhoto","image","setImage","React","JSON","parse","localStorage","getItem","domainId","domainName","usernameAdmin","useRef","userRoles","setUserRoles","selectedRoles","setSelectedRoles","useEffect","username","match","params","roles_data","method","headers","fetch","USER_SERVICE","then","response","json","data","rolesFromApi","selectedList","map","role","push","name","roleName","key","checked","default","catch","error","console","log","user","img","UserImage","firstName","lastName","roles","onRoleChange","e","_selectedRoles","value","i","length","splice","verifyLength","activeTab","variant","data-tab","noValidate","style","marginTop","row","className","sm","md","htmlFor","fontWeight","id","type","onChange","event","document","getElementById","files","target","exec","src","URL","createObjectURL","alert","loadFile","width","invalid","disabled","margin","inputId","some","item","position","xs","col","xl","block","color","onClick","savedPhoto","fd","FormData","append","setItem","body","url","request","user_data","stringify","history","window","location","reload","createSvgIcon","d"],"mappings":"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","file":"static/js/57.0f0a1832.chunk.js","sourcesContent":["import React, { useEffect,useRef, useState } from 'react';\n// import { Form, Field } from 'react-final-form';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Calendar } from 'primereact/calendar';\nimport { Password } from 'primereact/password';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Dialog } from 'primereact/dialog';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { Toast } from 'primereact/toast';\nimport { FileUpload } from 'primereact/fileupload';\nimport { ProgressBar } from 'primereact/progressbar';\nimport { Tooltip } from 'primereact/tooltip';\nimport { Tag } from 'primereact/tag';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CForm,\n    CFormGroup,\n    CInput,\n    CInvalidFeedback,\n    CLabel, CNav, CNavItem, CNavLink,\n    CRow, CTabContent, CTabPane, CTabs\n} from \"@coreui/react\";\nimport Select from \"@material-ui/core/Select\";\nimport {Cancel, Save} from \"@material-ui/icons\";\nimport {SERVER_URL, USER_SERVICE} from \"../../../constants\";\nimport UserImage from \"./img/user.png\";\nimport './img css/imgStyle.scss';\n// import { CountryService } from '../service/CountryService';\n//import './FormDemo.css';\n\nconst EditProfile = (props) => {\n    // const [countries, setCountries] = useState([]);\n    const [showMessage, setShowMessage] = useState(false);\n    const [checked, setChecked] = useState(false);\n    const [firstname, setFirstname] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [usernamee, setUsernamee] = useState(\"\");\n    const [usernameState, setUsernameState] = useState(\"\");\n    const [usernameError, setUsernameError] = useState(\"\");\n    const [lastnameState, setLastnameState] = useState(\"success\");\n    const [lastnameError, setLastnameError] = useState(\"\");\n    const [firstnameError, setFirstnameError] = useState(\"\");\n    const [firstnameState, setFirstnameState] = useState(\"success\");\n    const [emailState, setEmailState] = useState(\"success\");\n    const [emailError, setEmailError] = useState(\"\");\n    const [phoneState, setPhoneState] = useState(\"success\");\n    const [phoneError, setPhoneError] = useState(\"\");\n    const [passwordState, setPasswordState] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const [repeatPasswordState, setRepeatPasswordState] = useState(\"success\");\n    const [repeatPasswordError, setRepeatPasswordError] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [oldPhoto, setOldPhoto] = useState(null);\n    const [photo, setPhoto] = useState(null);\n    const [image, setImage] = useState(null);\n    const [formData, setFormData] = useState({});\n    const [domainId, setDomainId] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainId);\n    const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n    const [usernameAdmin, setUsernameAdmin] = React.useState(localStorage.getItem('username'));\n    // const countryservice = new CountryService();\n    const [totalSize, setTotalSize] = useState(0);\n    const toast = useRef(null);\n    const fileUploadRef = useRef(null);\n    const [userRoles, setUserRoles] = React.useState([]);\n    const [selectedRoles, setSelectedRoles] = useState();\n\n\n\n    useEffect(() => {\n        const {username} = props.match.params;\n        setUsernamee(username)\n        const roles_data = {\n            method: 'GET',\n            headers: {\n                \"X-Tenant\": domainName,\n                'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n            }\n        };\n        fetch(USER_SERVICE + \"/api/auth/role/getRoles\", roles_data)\n            .then((response) => {\n                return response.json();\n            })\n            .then(data => {\n                var rolesFromApi = [];\n                var selectedList = [];\n                data.map(role => {\n                    rolesFromApi.push({\n                        name : role.roleName,\n                        key : role.roleName,\n                        checked: role.default\n                    })\n                    if(role.default === true ){\n                        selectedList.push({\n                            name : role.roleName,\n                            key : role.roleName,\n                            checked: role.default\n                        })\n                    }\n                })\n\n                setSelectedRoles(selectedList);\n                setUserRoles(rolesFromApi);\n\n            }).catch(error => {\n            console.log(error);\n        })\n        fetch(USER_SERVICE + \"/api/auth/user/getUserByUsername/\"+username, roles_data)\n            .then((response) => {\n                return response.json();\n            })\n            .then(data => {\n\n                const user = JSON.parse(data.user);\n                var img = null\n                if(data.photo){\n                    img = \"data:image/png;base64,\"+data.photo;\n                }else{\n                    img = UserImage;\n                }\n\n                setUsernamee(user.username)\n                setFirstname(user.firstName)\n                setLastname(user.lastName)\n                setPhone(user.phone)\n                setEmail(user.email)\n                setPhoto(img);\n                setOldPhoto(img);\n                setImage(img);\n                const roles = user.roles;\n                var selectedList = []\n                roles.map(role =>{\n                    selectedList.push({\n                        name : role.roleName,\n                        key : role.roleName,\n                        checked: role.default\n                    })\n                })\n                setSelectedRoles(selectedList)\n            })\n        // countryservice.getCountries().then(data => setCountries(data));\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n    const onRoleChange = (e) => {\n        let _selectedRoles = [...selectedRoles];\n\n        if (e.checked) {\n            _selectedRoles.push(e.value);\n        }\n        else {\n            for (let i = 0; i < _selectedRoles.length; i++) {\n                const selectedRoles = _selectedRoles[i];\n\n                if (selectedRoles.key === e.value.key) {\n                    _selectedRoles.splice(i, 1);\n                    break;\n                }\n            }\n        }\n\n        setSelectedRoles(_selectedRoles);\n    }\n    const validate = (data) => {\n        let errors = {};\n\n        if (!data.name) {\n            errors.name = 'Name is required.';\n        }\n\n        if (!data.email) {\n            errors.email = 'Email is required.';\n        }\n        else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\n            errors.email = 'Invalid email address. E.g. example@email.com';\n        }\n\n        if (!data.password) {\n            errors.password = 'Password is required.';\n        }\n\n        if (!data.accept) {\n            errors.accept = 'You need to agree to the terms and conditions.';\n        }\n\n        return errors;\n    };\n\n    const onSubmit = (data, form) => {\n        setFormData(data);\n        setShowMessage(true);\n\n        form.restart();\n    };\n    const handleSubmit = ()=>{\n\n\n\n        var savedPhoto = null\n        if ( firstnameState===\"success\" && lastnameState===\"success\"\n            && phoneState===\"success\" && emailState===\"success\"\n        ) {\n            if (photo !== oldPhoto) {\n                const fd = new FormData();\n                fd.append('image', photo, photo.name);\n                fd.append('domainId', domainId);\n                fd.append('domainName', domainName);\n                fd.append('username', usernameAdmin);\n\n                localStorage.setItem(\"image\", photo)\n                const data = {\n                    method: 'POST',\n                    headers: {\n                        \"X-Tenant\": domainName,\n                        \"Authorization\": \"Bearer \" + localStorage.getItem('Authorization')\n                    },\n                    body: fd\n                };\n\n                fetch(USER_SERVICE+\"/api/auth/user/upload\", data)\n                    .then(response => response.json())\n                    .then(data => {\n                        savedPhoto = data.url\n                        const request = {\n                            domainId: domainId, url: savedPhoto, username: usernamee,\n                            firstname: firstname, lastname: lastname,\n                            email: email, phone: phone,  selectedRoles: selectedRoles\n                        }\n                        const user_data = {\n                            method: 'POST',\n                            headers: {\n                                \"X-Tenant\": domainName,\n                                'Content-Type': 'application/json',\n                                \"Authorization\": \"Bearer \" + localStorage.getItem('Authorization')\n                            },\n                            body: JSON.stringify(request)\n                        };\n                        fetch(USER_SERVICE + \"/api/auth/user/edit\", user_data)\n                            .then(response => {\n                                console.log(response)\n                            })\n\n                        props.history.push(\"/admin/user/list\");\n                        window.location.reload()\n                        //send all data + url to the api to create new user\n                    })\n            } else {\n                const request = {\n                    domainId: domainId, username: usernamee,\n                    firstname: firstname, lastname: lastname,\n                    email: email, phone: phone,selectedRoles: selectedRoles\n                }\n                const user_data = {\n                    method: 'POST',\n                    headers: {\n                        \"X-Tenant\": domainName,\n                        'Content-Type': 'application/json',\n                        \"Authorization\": \"Bearer \" + localStorage.getItem('Authorization')\n                    },\n                    body: JSON.stringify(request)\n                };\n                fetch(USER_SERVICE + \"/api/auth/user/edit\", user_data)\n                    .then(response => {\n                        console.log(response)\n                    })\n\n                props.history.push(\"/user/preview/\"+usernamee);\n                window.location.reload()\n\n                //send all data + url to the api to create new user\n            }\n        }\n    }\n\n\n\n    const onUpload = () => {\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\n    }\n\n\n\n    const verifyLength = (value, length) => {\n        if (value.length >= length) {\n            return true;\n        }\n        return false;\n    };\n\n\n    const verifyUsername = (username) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                \"X-Tenant\": domainName,\n                \"Authorization\": \"Bearer \" + localStorage.getItem('Authorization'),\n                'Content-Type': 'application/json' },\n            body: JSON.stringify({username: username})\n        };\n\n        fetch(USER_SERVICE + '/api/auth/verifyUsername', requestOptions)\n            .then(response => {\n                return new Promise((resolve, reject) => {\n                    response.text().then(body => {\n                        resolve(\n                            body.length ? JSON.parse(body) : null\n                        );\n                    }).catch(err => {\n                        reject(err);\n                    });\n                });\n            })\n            .then(data =>\n            {\n                if (data === null) {\n                    setUsernameState(\"success\");\n                } else {\n                    setUsernameState(\"existe\");\n                    setUsernameError(\"Nom d'utilisateur indisponible!\")\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n\n    var loadFile = function (event) {\n        var image = document.getElementById(\"output\");\n        const files = event.target.files\n        // Allowing file type\n        const allowedExtensions =\n            /(\\.jpg|\\.jpeg|\\.png|\\.gif)$/i;\n\n        /*let reader = new FileReader();\n        reader.readAsDataURL(files[0] )*/\n        if (!allowedExtensions.exec(files[0].name)) {\n            alert( \"Format invalid!\")\n        }\n        else {\n            setPhoto(files[0])\n            image.src = URL.createObjectURL(files[0]);\n\n        }\n    };\n    return (\n        <>\n            <CCard>\n                <CCardHeader>\n                    <h3>Modifier le profile</h3>\n                </CCardHeader>\n\n                <CCardBody>\n                    <CTabs activeTab=\"user\">\n                        <CNav variant=\"tabs\">\n                            <CNavItem>\n                                <CNavLink data-tab=\"user\">\n                                    Information d'utilisateur\n                                </CNavLink>\n                            </CNavItem>\n                            <CNavItem>\n                                <CNavLink data-tab=\"role\">\n                                    Roles\n                                </CNavLink>\n                            </CNavItem>\n                        </CNav>\n                        <CTabContent>\n                            <CTabPane data-tab=\"user\">\n                                <CForm  noValidate style={{marginTop: \"20px\"}}>\n                                    <CFormGroup row className=\"my-0\">\n                                        <CCol sm={12} md={6}>\n                                            <div className=\"profile-pic\" >\n                                                <label className=\"-label\" htmlFor=\"file\" >\n                                                    <i style={{fontWeight:\"bold\"}} className=\"pi pi-camera\"></i>\n                                                    <span style={{fontWeight:\"bold\"}}>Changer l'image</span>\n                                                </label>\n                                                <input id=\"file\" type=\"file\" onChange={event => loadFile(event)} />\n                                                <img src={image} id=\"output\"\n                                                     width=\"200\"/>\n                                            </div>\n                                        </CCol>\n                                        <CCol sm={12} md={6}>\n                                            <div className=\"row\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"lastname\">Nom</CLabel>\n                                                    <CInput  invalid={lastnameState === \"error\" } id=\"lastname\"\n                                                             onChange={e =>\n                                                             {\n                                                                 setLastname(e.target.value)\n                                                                 if(verifyLength(e.target.value, 3) ){\n                                                                     setLastnameState(\"success\");\n\n                                                                 } else {\n                                                                     setLastnameState(\"error\");\n                                                                     setLastnameError(\"Le nom est obligatoire !\")\n                                                                 }\n                                                             }}\n                                                             value={lastname} />\n                                                    <CInvalidFeedback className=\"help-block\">\n                                                        {lastnameError}\n                                                    </CInvalidFeedback>\n                                                </CFormGroup>\n                                            </div>\n                                            <div className=\"row\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"firstname\">Prénom</CLabel>\n                                                    <CInput style={{width:\"100%\"}} id=\"firstname\"\n                                                            invalid={firstnameState === \"error\" }\n                                                            onChange={e =>\n                                                            {\n                                                                setFirstname(e.target.value)\n                                                                if(verifyLength(e.target.value, 3) ){\n                                                                    setFirstnameState(\"success\");\n                                                                } else {\n                                                                    setFirstnameState(\"error\");\n                                                                    setFirstnameError(\"Le prénom est obligatoire !\")\n                                                                }\n                                                            }}\n                                                            value={firstname} />\n                                                    <CInvalidFeedback className=\"help-block\">\n                                                        {firstnameError}\n                                                    </CInvalidFeedback>\n                                                </CFormGroup>\n                                            </div>\n                                        </CCol>\n                                    </CFormGroup>\n\n                                    <CFormGroup row className=\"my-0\">\n                                        <CCol sm={12} md={6}>\n                                            <CFormGroup>\n                                                <CLabel htmlFor=\"username\">Nom d'utilisateur</CLabel>\n                                                <CInput\n                                                    id=\"username\"\n                                                    value={usernamee}\n                                                    disabled\n                                                />\n\n                                            </CFormGroup>\n                                        </CCol>\n                                        <CCol sm={12} md={6}>\n                                            <CFormGroup>\n                                                <CLabel htmlFor=\"email\">Email</CLabel>\n                                                <CInput id=\"email\"\n                                                        invalid={emailState === \"error\" }\n                                                        onChange={e =>\n                                                        {\n                                                            setEmail(e.target.value)\n                                                            if(verifyLength(e.target.value, 3) ){\n                                                                setEmailState(\"success\");\n                                                            } else {\n                                                                setEmailState(\"error\");\n                                                                setEmailError(\"L'adresse email  est obligatoire !\")\n                                                            }\n                                                        }}\n\n                                                        value={email} />\n                                                <CInvalidFeedback className=\"help-block\">\n                                                    {emailError}\n                                                </CInvalidFeedback>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CFormGroup>\n                                    <CFormGroup row className=\"my-0\">\n\n                                        <CCol sm={12} md={6}>\n                                            <CFormGroup>\n                                                <CLabel htmlFor=\"phone\">Téléphone</CLabel>\n                                                <CInput id=\"phone\"\n                                                        invalid={phoneState === \"error\" }\n                                                        onChange={e =>\n                                                        {\n                                                            setPhone(e.target.value)\n                                                            if(verifyLength(e.target.value, 3) ){\n                                                                setPhoneState(\"success\");\n                                                            } else {\n                                                                setPhoneState(\"error\");\n                                                                setPhoneError(\"Le numéro de téléphone email  est obligatoire !\")\n                                                            }\n                                                        }}\n                                                        value={phone}  />\n                                                <CInvalidFeedback className=\"help-block\">\n                                                    {phoneError}\n                                                </CInvalidFeedback>\n                                            </CFormGroup>\n                                        </CCol>\n\n                                        {/*<CCol sm={12} md={6}>\n                        <div className=\"p-field-checkbox\">\n                            <Checkbox inputId=\"default\" name=\"defaut\" value=\"defaut\" onChange={e => setChecked(e.checked)} checked={checked} />\n                            <label htmlFor=\"default\"> Defaut</label>\n\n                        </div>\n                        </CCol>*/}\n\n                                    </CFormGroup>\n                                </CForm>\n\n                            </CTabPane>\n                            <CTabPane data-tab=\"role\">\n                                <CCardBody>\n                                    {\n                                        userRoles.map((role) => {\n                                            return (\n                                                <div key={role.key} className=\"field-checkbox\" style={{margin:\"10px\"}}>\n                                                    <Checkbox  disabled inputId={role.key} name=\"role\" value={role} onChange={onRoleChange} checked={selectedRoles.some((item) => item.key === role.key)} />\n                                                    <label style={{position: \"absolute\"}} htmlFor={role.key}> &nbsp;{role.name}</label>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </CCardBody>\n                            </CTabPane>\n                        </CTabContent>\n                    </CTabs>\n\n\n                    <CRow xs=\"4\" style={{marginTop: \"50px\"}}>\n\n                        <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\n                            <CButton block variant=\"outline\" color=\"info\" id=\"workflowSave\" onClick={handleSubmit}><Save/> Enregister</CButton>\n                        </CCol>\n                        <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\n                            <CButton block variant=\"outline\" color=\"danger\"\n                                     onClick={()=> props.history.push(\"/dashboard\")}><Cancel />\n                                Annuler</CButton>\n                        </CCol>\n\n                    </CRow>\n                </CCardBody>\n            </CCard>\n        </>\n\n    );\n}\n\nexport default EditProfile","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');"],"sourceRoot":""}