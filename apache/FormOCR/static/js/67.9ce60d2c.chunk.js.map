{"version":3,"sources":["views/Administration/dashboard/DashboardList.js","views/users/UsersData.js","../node_modules/@material-ui/icons/esm/Add.js"],"names":["DashboardList","props","React","useState","JSON","parse","localStorage","getItem","domainId","domainName","setUserRoles","dashboardsData","setDashboardsData","useSelector","state","sidebarShow","useRef","useEffect","rolesFromApi","fetch","USER_SERVICE","then","response","json","data","console","log","map","role","push","value","roleName","label","key","roleId","catch","error","users_list","Promise","resolve","reject","text","body","length","err","tab","elem","userId","firstName","lastName","dashboard_data","method","headers","stringify","DASHBOARD_SERVICE","dashboards","user_access","admin_access","access_role","dashboards_list","dash","users_access","users_access_list","admins_access_list","roles_access_list","filter","access","dashboardId","id","val","userRole","user","admins_access","roles_access","name","dashboards_data","dashboard","style","zIndex","backgroundColor","color","fontWeight","className","onClick","history","rel","target","paddingLeft","size","event","dataKey","paginator","rows","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","field","item","padding","to","width","header","sortable","usersData","registered","status","createSvgIcon","d"],"mappings":"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","file":"static/js/67.9ce60d2c.chunk.js","sourcesContent":["import {\n    CBadge, CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CDataTable, CDropdown, CDropdownDivider, CDropdownItem,\n    CDropdownMenu,\n    CDropdownToggle, CHeader,\n    CRow, CSidebar, CToggler, CLink\n} from \"@coreui/react\";\nimport CIcon from '@coreui/icons-react';\nimport usersData from \"../../users/UsersData\";\nimport React, {useEffect, useState, useRef} from \"react\";\nimport Tables from \"../../base/tables/Tables\";\nimport {useSelector} from \"react-redux\";\nimport {Search, Add, Delete, Edit, Update, RemoveRedEye} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\nimport {SERVER_URL, DASHBOARD_SERVICE, USER_SERVICE} from '../../../constants';\n\nimport 'primeicons/primeicons.css';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.css';\nimport 'primeflex/primeflex.css';\n\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Menu } from 'primereact/menu';\nconst getBadge = status => {\n    switch (status) {\n        case 'Active': return 'success'\n        case 'Inactive': return 'secondary'\n        case 'Pending': return 'warning'\n        case 'Banned': return 'danger'\n        default: return 'primary'\n    }\n}\nconst fields = [ 'Action','S No','Nom', 'Code', 'Version']\n\nconst DashboardList = (props) => {\n    const [currentItems, setCurrentItems] = React.useState([]);\n    const [formName, setFormName] = React.useState(\"\");\n    const [formId, setFormId] = React.useState(\"\");\n    const [formCode, setFormCode] = React.useState(\"\");\n    const [forms, setForms] = React.useState([]);\n    const [domainId, setDomainId] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainId);\n    const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n    const [userRoles, setUserRoles] = React.useState([]);\n    const [dashboardsData, setDashboardsData] = React.useState([]);\n\n\n    const show = useSelector(state => state.sidebarShow)\n\n    const menu = useRef(null);\n    useEffect(()=> {\n        var rolesFromApi = [];\n        fetch(USER_SERVICE +\"/api/auth/role/getRoles\")\n            .then((response) => {\n                return response.json();\n            })\n            .then(data => {\n\n                console.log(data)\n                data.map(role => {\n                    rolesFromApi.push({\n                        value : role.roleName,\n                        label : role.roleName,\n                        key: role.roleId\n                    })})\n                setUserRoles(rolesFromApi);\n            }).catch(error => {\n            console.log(error);\n        });\n        var users_list = []\n        fetch(USER_SERVICE + '/api/auth/user/getUsersByDomain/'+domainId)\n            .then(response => {\n                return new Promise((resolve, reject) => {\n                    response.text().then(body => {\n                        resolve(\n                            body.length ? JSON.parse(body) : null\n                        );\n                    }).catch(err => {\n                        reject(err);\n                    });\n                });\n            })\n            .then(data => {\n                var tab = []\n                data.map(elem =>{\n                    tab.push({value: elem.userId, label: elem.firstName + \" \" + elem.lastName})\n                })\n                users_list = tab\n            })\n        const dashboard_data = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\"),\n            \"X-Tenant\": domainName },\n            body: JSON.stringify({domainId: domainId})\n        };\n        fetch(DASHBOARD_SERVICE + '/api/dashboard/getAll',dashboard_data)\n            .then(response => {\n                return new Promise((resolve, reject) => {\n                    response.text().then(body => {\n                        resolve(\n                            body.length ? JSON.parse(body) : null\n                        );\n                    }).catch(err => {\n                        reject(err);\n                    });\n                });\n            })\n            .then(data => {\n                const dashboards = JSON.parse(data.dashboards)\n                const user_access = JSON.parse(data.user_access)\n                const admin_access = JSON.parse(data.admin_access)\n                const access_role = JSON.parse(data.access_role)\n                console.log(user_access)\n                var dashboards_list = []\n                dashboards.map(dash =>{\n                    console.log(dash)\n                    var users_access = []\n                    var users_access_list = \"\"\n                    var admins_access_list = \"\"\n                    var roles_access_list = \"\"\n                    if(user_access.length > 0){\n\n                        users_access = user_access.filter(access =>  {return  access.dashboardId === dash.id})\n                        console.log(users_access)\n                        if( users_access.length > 0){\n\n                            users_access.map(val =>{\n                                var userRole = users_list.filter(user =>  {return user.value === val.userId})\n                                userRole?.map(elem =>{\n                                    users_access_list = users_access_list +  elem.label + '\\n';\n                                })\n                            })\n                        }\n                    }\n                    var admins_access = []\n                    if(admin_access.length> 0){\n                        admins_access = admin_access.filter(access =>  {return  access.dashboardId === dash.id})\n                        if( admins_access.length > 0){\n                            admins_access.map(val =>{\n                                var userRole = rolesFromApi.filter(role =>  {return role.key === val.roleId})\n                                userRole?.map(elem =>{\n                                    admins_access_list+= elem.label + '\\n';\n                                })\n\n                            })\n                        }\n                    }\n                    var roles_access = []\n                    if(access_role.length> 0){\n                        roles_access = access_role.filter(access =>  {return access.dashboardId === dash.id})\n                        if( roles_access.length > 0){\n                            roles_access.map(val =>{\n                                var userRole = rolesFromApi.filter(role =>  {return role.key === val.roleId})\n                                userRole?.map(elem =>{\n                                    roles_access_list += elem.label + '\\n';\n                                })\n                            })\n                        }\n                    }\n\n\n                    dashboards_list.push({\n                        id: dash.id, name: dash.name, users_access: users_access_list,\n                        admins_access: admins_access_list, roles_access: roles_access_list\n                    })\n\n                })\n                console.log(dashboards_list)\n\n                var dashboards_data = []\n                dashboards_list.map(dashboard =>\n                {dashboards_data.push({\"Nom\":dashboard.name, \"Contrôle d'accès (Rôles)\": dashboard.roles_access ,\n                    \"Contrôle d'accès (Admin)\": dashboard.admins_access,\n                    \"Contrôle d'accès (User)\": dashboard.users_access, \"id\":dashboard.id, })\n                })\n                setDashboardsData(dashboards_data)\n                /*data.map(form =>\n                {forms_data.push({\"S No\":form.sno, \"Nom\": form.name ,\n                    \"Code\": form.code,\n                    \"Version\": '1.0', \"id\":form.id, \"formCode\": form.code})\n                })*/\n                /*    data.map(form =>\n                    {forms_data.push({\"formId\":form.formId, \"formName\": form.formName,\n                      \"formCode\": form.formCode,\"formKey\": form.formCode,\n                      \"version\": \"1.0\"})\n                    })*/\n                /* const data_to_ten = data.length%10\n                 if(data_to_ten !== 0 && data_to_ten<=2){\n                   var index = 0;\n                   const rest_data = 10-data_to_ten;\n                   if(rest_data>2){\n                     for (index; index < 2; index++){\n                       forms_data.push({\"S No\":'', \"Nom\":'' ,\n                         \"Code\": '',\n                         \"Version\": '', \"id\":'', \"formCode\": ''})\n\n                     }\n                   }\n                     }*/\n\n\n                //this.props.history.push(\"/admin/formView\");\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    },[])\n    /* const csvContent = Object.values(fields).join(',')+ '\\n' +currentItems.map(item => {\n                                                                        if(item !== \"formCode\" && item !== \"id\" ){\n                                                                        Object.values(item).join(',')}\n                                                                        }).join('\\n')\n   */\n\n    const menuList = (e) => {\n        const items =\n            [\n                {\n                    label: 'Modifier',\n                    icon: 'pi pi-pencil',\n                    command:()=>{ window.location.hash=\"/admin/dashboard/edit/\"+ e.id ;}\n                },\n                {\n                    label: 'Supprimer',\n                    icon: 'pi pi-trash',\n                    //   command:()=>{ window.location.hash=\"/admin/form/edit/\" + rowData.id;\n\n                }\n            ]\n        return (  <div>\n            <Menu model={items} popup ref={menu} id=\"popup_menu\" />\n            <i className=\"pi pi-bars\" onClick={(event) => menu.current.toggle(event)}></i>\n        </div>)\n        //  return <i className=\"pi pi-bars p-toolbar-separator p-mr-2\" onClick={(event) => <Menu model={items} popup ref={menu} />}></i> ;\n    }\n    return (\n        <>\n            <CRow>\n                <CCol>\n                    <CCard style={{zIndex: \"10 !important\"}}>\n                        <CCardHeader style={{backgroundColor: \"#494399\"}}>\n                            <span style={{color: \"#FFFFFF\", fontWeight: \"bold\"}}>Tableau de bord</span>\n\n                            <div className=\"card-header-actions\">\n                                <CLink\n                                    style={{color: \"#FFFFFF\"}}\n                                    onClick={()=> props.history.push(\"/admin/dashboard/create\")}\n                                    rel=\"noreferrer noopener\"\n                                    target=\"_blank\"\n                                    className=\"card-header-action\"\n                                >\n                                    <Add/>Ajouter un nouveau\n                                </CLink>\n                                {/*<CLink style={{color: \"#FFFFFF\", paddingLeft: \"10px\" }} >\n                                    <Search content=\"cil-search\" size=\"2xl\"/>\n                                </CLink>*/}\n\n                                <CLink style={{color: \"#FFFFFF\", paddingLeft: \"10px\" }} >\n                                    <i  size=\"2xl\" className=\"pi pi-bars\" onClick={(event) => console.log(event)}></i>\n                                </CLink>\n                            </div>\n                        </CCardHeader>\n                        <CCardBody>\n                            <div className=\"card\">\n                                <DataTable value={dashboardsData}  dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\n                                           paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                                           currentPageReportTemplate=\"{currentPage} of {totalPages} pages ({totalRecords} items)\"  className=\"p-datatable-sm p-datatable-striped p-datatable-gridlines\">\n                                    <Column field={ item => {return (<td>\n                                        <CDropdown className=\"m-1\">\n                                            <CDropdownToggle style={{padding:'0px'}}>\n                                                <i  size=\"2xl\" className=\"pi pi-bars\"></i>\n                                            </CDropdownToggle>\n                                            <CDropdownMenu className=\"mp-0\">\n\n                                                <CDropdownItem to={\"/admin/dashboard/edit/\" + item.id }>\n                                                    <Edit/> &nbsp;&nbsp; Éditer\n                                                </CDropdownItem>\n\n                                            </CDropdownMenu>\n                                        </CDropdown>\n                                    </td>)}} style={{width:\"50px\"}}></Column>\n                                    <Column field='Nom' header=\"Nom du tableau de board\"  sortable ></Column>\n                                    <Column field=\"Contrôle d'accès (Rôles)\" header=\"Contrôle d'accès (Rôles)\"  sortable></Column>\n                                    <Column field=\"Contrôle d'accès (Admin)\" header=\"Contrôle d'accès (Admin)\"  sortable></Column>\n                                    <Column field=\"Contrôle d'accès (User)\" header=\"Contrôle d'accès (User)\"  sortable ></Column>\n                                </DataTable>\n                            </div>\n                            {/*\n              <CDataTable style={{position:\"absolute\"}}\n                  items={forms}\n                          columnFilter\n                          fields={fields}\n                          hover\n                          striped\n                          bordered\n                          size=\"sm\"\n                          itemsPerPage={10}\n                          pagination\n                          sorter\n                          onFilteredItemsChange={setCurrentItems}\n                scopedSlots = {{\n                  'Action':\n                    (item, index) => {\n                      if (item.formCode !== \"\") {\n                        return (<td>\n                          <CDropdown className=\"m-1\">\n                            <CDropdownToggle>\n                              <Menu/>\n                            </CDropdownToggle>\n                            <CDropdownMenu className=\"mp-0\">\n                              <CDropdownItem to={\"/admin/form/preview/\" + item.formCode}>\n                                  <RemoveRedEye/>&nbsp;&nbsp; Aperçu\n                              </CDropdownItem>\n                              <CDropdownItem to={\"/admin/form/edit/\" + item.formCode + \"/\" + item.id}>\n                                  <Edit/> &nbsp;&nbsp; Éditer\n                              </CDropdownItem>\n                              <CDropdownItem >\n                                <Delete/>&nbsp;&nbsp;Supprimer\n                              </CDropdownItem>\n                            </CDropdownMenu>\n                          </CDropdown>\n                        </td>)\n                      }else{\n                        return (<td className=\"p-4\"> </td>)\n                      }\n                    }\n                }}\n              />\n*/}\n                        </CCardBody>\n                    </CCard>\n                </CCol>\n            </CRow>\n        </>\n    )\n}\nexport default DashboardList\n","const usersData = [\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending'},\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'}\n]\n\nexport default usersData\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');"],"sourceRoot":""}