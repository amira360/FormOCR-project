{"version":3,"sources":["views/Administration/scriptBuilder/CreateScript.js","../node_modules/@material-ui/icons/esm/Save.js","../node_modules/@material-ui/icons/esm/Cancel.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","marginLeft","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","withStyles","withTheme","props","React","useState","scriptName","setScriptName","scriptVersion","setScriptVersion","JSON","parse","localStorage","getItem","domainId","roles","setRoles","script","setScript","userRoles","setUserRoles","username","domainName","useEffect","roles_data","method","headers","fetch","USER_SERVICE","then","response","json","data","console","log","rolesFromApi","map","role","push","value","roleName","label","catch","error","xs","sm","noValidate","row","className","htmlFor","id","disabled","onChange","e","target","md","name","placeholder","options","isMulti","style","backgroundColor","padding","height","defaultLanguage","col","xl","block","variant","color","onClick","scriptRoles","script_data","body","stringify","SCRIPT_SERVICE","Promise","resolve","reject","text","length","err","history","createSvgIcon","d"],"mappings":"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","file":"static/js/74.88340a93.chunk.js","sourcesContent":["\nimport React, {useEffect} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CTabs,\n  CFormGroup,\n  CInput, CSelect,\n  CLabel, CNavbar, CNavbarBrand, CRow, CForm, CInputGroup, CInvalidFeedback,\n} from '@coreui/react'\nimport {SERVER_URL, USER_SERVICE, SCRIPT_SERVICE, NORM_SERVICE} from \"../../../constants\";\n\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport {Cancel, Save} from \"@material-ui/icons\";\nimport {Chip} from \"@material-ui/core\";\nimport Select from 'react-select';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\n\nimport Editor from \"@monaco-editor/react\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    marginLeft: 0+'px !important',\n    minWidth: 220,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst CreateScript = (props) => {\n  const [collapsed, setCollapsed] = React.useState(true)\n  const [showElements, setShowElements] = React.useState(true)\n  const [scriptName, setScriptName] = React.useState('');\n  const [alert, setAlert] = React.useState('');\n  const [scriptVersion, setScriptVersion] = React.useState('');\n  const [display, setDisplay] = React.useState('');\n  const [scriptId, setScriptId] = React.useState('');\n  const [type, setType] = React.useState('script');\n  const [domainId, setDomainId] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainId);\n  const [roles, setRoles] = React.useState([]);\n  const [script, setScript] = React.useState(null);\n  const [userRoles, setUserRoles] = React.useState([]);\n  const [businessObject, setBusinessObject] = React.useState(null);\n  const classes = useStyles();\n  const [username, setUsername] = React.useState(localStorage.getItem('username'));\n  const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n\n  /*const [norms, setNorms] = React.useState([]);\n  const [selectedNorms, setSelectedNorms] = React.useState([]);*/\n  useEffect(()=> {\n    const roles_data = {\n      method: 'GET',\n      headers: {\n        \"X-Tenant\": domainName,\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n      }\n    };\n    fetch(USER_SERVICE + \"/api/auth/role/getRoles\", roles_data)\n      .then((response) => {\n        return response.json();\n      })\n      .then(data => {\n        console.log(data);\n        var rolesFromApi = [];\n\n        data.map(role => {\n          rolesFromApi.push({\n            value : role.roleName,\n            label : role.roleName\n          })})\n        setUserRoles(rolesFromApi);\n\n        console.log(userRoles);\n      }).catch(error => {\n      console.log(error);\n    });\n    /*fetch(NORM_SERVICE + \"/api/auth/norm/getAll\")\n        .then((response) => {\n          return response.json();\n        })\n        .then(data => {\n          console.log(data);\n          var normsFromApi = [];\n          const allNorms = JSON.parse(data.standards)\n          allNorms.map(norm =>{\n            normsFromApi.push({label: norm.name, value: norm.id})\n          })\n          setNorms(normsFromApi)\n        })*/\n\n  },[]);\n\n\n  const handleInputChange  =(event) =>  {\n    console.log(event.target.value);\n  }\n\n  const handleChangeMultiple =(event)=> {\n    const {options} = event.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    setRoles(value);\n  }\n\n  const handleSubmit = () =>  {\n    // const err= null\n    var data = {\n      scriptName: scriptName,\n      scriptVersion: scriptVersion, scriptRoles: roles,\n      script: script,\n      domainId: domainId,\n      username: username\n      // standards: selectedNorms\n    };\n      // log the current xml content to the browser console\n      //data.script = script;\n      const script_data = {\n        method: 'POST',\n        headers: {\n          \"X-Tenant\": domainName,\n          'Content-Type': 'application/json',\n          \"Authorization\": \"Bearer \"+localStorage.getItem('Authorization')},\n        body: JSON.stringify(data)\n      };\n      fetch(SCRIPT_SERVICE + '/api/script/save', script_data)\n          .then(response => {\n            return new Promise((resolve, reject) => {\n              response.text().then(body => {\n                resolve(\n                    body.length ? JSON.parse(body) : null\n                );\n              }).catch(err => {\n                reject(err);\n              });\n            });\n          })\n          .then(data => {\n           // const scriptId = data.scriptId\n            props.history.push(\"/admin/script/list\");\n          })\n\n  }\n\n  const hideAlert = () => {\n    setAlert(null)\n  };\n\n  const verifyLength = (value, length) => {\n    if (value.length >= length) {\n      return true;\n    }\n    return false;\n  };\n  const basicAlert = () =>{\n    /* this.setState({alert:\n         <SweetAlert\n           style={{ display: \"block\", marginTop: \"-100px\" }}\n           title=\"the form code is already used !\"\n           onConfirm={() => this.hideAlert()}\n           onCancel={() => this.hideAlert()}\n         />\n     })*/\n  };\n\n  const handleDelete = (chipToDelete) =>{\n    console.log(chipToDelete);\n    console.log(roles);\n    console.log(roles.filter((chip) => chip !== chipToDelete))\n    const data = roles.filter((chip) => chip !== chipToDelete);\n    setRoles(data);\n\n  };\n  let icon;\n  return (\n    <>\n      <CCol xs=\"12\" sm=\"12\">\n        <CCard>\n          <CCardHeader>\n            <h2>Créer un script</h2>\n          </CCardHeader>\n          <CCardBody>\n            <CForm  noValidate >\n              <CFormGroup row className=\"my-0\">\n                <CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"scriptId\">S No</CLabel>\n                    <CInput id=\"scriptId\" /*onChange={e => setScriptId(e.target.value) }\n                            value={scriptId}*/ disabled />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"scriptName\">Nom du script</CLabel>\n                    <CInput id=\"scriptName\" onChange={e => setScriptName(e.target.value) }\n                            value={scriptName}  />\n                  </CFormGroup>\n                </CCol>\n\n              </CFormGroup>\n              <CFormGroup row className=\"my-0\">\n                <CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"scriptVersion\">Version</CLabel>\n                    <CInput id=\"scriptVersion\" onChange={e => setScriptVersion(e.target.value) }\n                            value={scriptVersion} />\n                  </CFormGroup>\n                </CCol>\n                <CCol sm={12} md={6}>\n                      <CFormGroup>\n                          <CLabel htmlFor=\"AccessControlUser\">Contrôle d'accès</CLabel>\n\n                          <Select\n                            name=\"form-field-name2\"\n                            placeholder=\"Global\"\n                            value={roles}\n                            options={userRoles}\n                            onChange={setRoles}\n                            isMulti\n                          />\n                    </CFormGroup>\n                  </CCol>\n               {/* <CCol sm={12} md={6}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"type\">Norme</CLabel>\n                    <Select\n                        name=\"type\"\n                        value={selectedNorms}\n                        onChange={setSelectedNorms}\n                        placeholder=\"Selectionnez les normes\"\n                        options={norms}\n                        isMulti\n                    />\n                  </CFormGroup>\n                </CCol>*/}\n              </CFormGroup>\n              <CCard>\n              <CCardHeader style={{backgroundColor:\"#F5F5F5\"}}>\n                  Script\n              </CCardHeader>\n                  <CCardBody style={{padding:\"0px\"}}>\n\n                    <Editor\n                        height=\"70vh\"\n                        defaultLanguage=\"javascript\"\n                       // defaultValue=\"// some comment\"\n                        onChange= {(value, e ) => setScript(value)}\n                      />\n                </CCardBody>\n              </CCard>\n               <CRow xs=\"4\">\n\n            <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\n              <CButton block variant=\"outline\" color=\"info\" id=\"workflowSave\" onClick={handleSubmit}><Save/> Enregister</CButton>\n            </CCol>\n            <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\n              <CButton block variant=\"outline\" color=\"danger\"\n                       onClick={()=> props.history.push(\"/admin/script/list\")}><Cancel />\n                                                                                                       Annuler</CButton>\n            </CCol>\n            </CRow>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </>\n  )\n}\nexport default withStyles({ ...useStyles}, { withTheme: true })(CreateScript) ;","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');"],"sourceRoot":""}