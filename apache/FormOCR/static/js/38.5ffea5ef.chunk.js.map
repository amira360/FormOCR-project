{"version":3,"sources":["components/dashboard/VariwideSeries.js","components/dashboard/Bar.js","components/dashboard/Line.js","components/dashboard/Spline.js","components/dashboard/Pie.js","components/dashboard/Column.js","views/charts/MainChartExample.js","components/dashboard/WidgetView.js","views/dashboard/Dashboard.js","components/dashboard/Chart.js"],"names":["require","Highcharts","StyledVariwide","styled","div","addHighchartsMore","addVariwideModule","Variwide","state","height","width","onResizeChart","console","log","setState","Math","floor","data","this","props","colors","workflowMasterName","categories","shown_data","x_val","index","map","value","push","name","length","x","y","z","color","className","backgroundColor","handleWidth","handleHeight","onResize","Component","withHighcharts","StyledBar","Bar","chartData","id","StyledLine","Line","data_show","StyledSpline","Spline","StyledPie","Pie","pieData","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","showInLegend","series","StyledColumn","Column","getStyle","useStyles","makeStyles","root","display","flexDirection","header","alignItems","padding","spacer","flexGrow","body","StyledRoot","StyledContent","StyledMyChart","WidgetView","chart","type","title","workflowMaster","onRemoveItem","component","kpi","useState","setChartData","JSON","parse","localStorage","getItem","domainName","classes","useEffect","undefined","performance","worklow_master_id","performance_indicator_data","method","headers","stringify","workflowMasterId","kpiId","fetch","INDICATOR_SERVICE","then","response","Promise","resolve","reject","text","catch","err","tab","x_list","y_list","val","includes","index_x","indexOf","label","Card","style","Typography","variant","gutterBottom","ReactGridLayout","WidthProvider","RGL","Dashboard","useRef","getLocalToken","React","setDomainName","username","counter","setCounter","dashboardItems","setDashboardItems","setBreakpoint","setCols","setDashboards","layout","setLayout","items","setItems","titles","setTitles","orders","setOrders","selectedTypes","setSelectedTypes","selectedWorkflowMasters","setSelectedWorkflowMasters","selectedPerformanceIndicators","setSelectedPerformanceIndicators","visibleDashboard","setVisibleDashboard","visibleWelcome","setVisibleWelcome","history","useHistory","unique_dashboards","clear","domain_name","saveToLS","show_dashboard","roles_data","roles_names","role","roleName","dashboards_data","roles","dashboards_menu","DASHBOARD_SERVICE","dashboards_access","getUnique","setItem","key","dashboardName","getFromLS","showDashboard","dashboard_id","grid_items","dashboardGridItems","titles_list","selected_types","selected_workflow_masters","selected_performance_indicators","layout_list","items_list","obj","sort","a","b","elem","chartType","performanceIndicatorId","performanceIndicatorName","w","i","h","static","staticLayout","xLayout","yLayout","wLayout","iLayout","hLayout","ls","e","arr","final","filter","dashboard_data","isVisibleDashboard","isVisibleWelcome","zIndex","fontWeight","marginLeft","marginTop","onClick","onBreakpointChange","breakpoint","cols","el","order","selected","data-grid","createElement","MyChart"],"mappings":"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","file":"static/js/38.5ffea5ef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport addHighchartsMore from \"highcharts/highcharts-more\";\nimport addVariwideModule from \"highcharts/modules/variwide\";\nimport {\n  Chart,\n  HighchartsChart,\n  VariwideSeries,\n  withHighcharts,\n  XAxis,\n  ColumnSeries,\n  SplineSeries,\n  YAxis,\n  Legend,\n  Title,\n  PieSeries\n} from \"react-jsx-highcharts\";\n\nimport ReactResizeDetector from \"react-resize-detector\";\nimport styled from \"styled-components\";\nimport \"styled-components\";\nrequire(\"highcharts/modules/exporting\")(Highcharts);\n\nexport const StyledVariwide = styled.div`\n  position: relative;\n  overflow: hidden; // hide the overflowing parts of the chart during resize\n\n  .chart-container {\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n  }\n`;\nconst pieData = [\n                      {\n                        name: \"Argon\",\n                        y: 100.9,\n                        color: \"#3498db\"\n                      },\n                      {\n                        name: \"Nitrogen\",\n                        y: 78.1,\n                        color: \"#9b59b6\"\n                      },\n                      {\n                        name: \"Oxygen\",\n                        y: 20.9,\n\n                        color: \"#2ecc71\"\n                      },\n                      {\n                        name: \"Trace Gases\",\n                        y: 70.1,\n                        x: 20,\n                        color: \"#f1c40f\"\n                      }\n                    ];\n\naddHighchartsMore(Highcharts);\naddVariwideModule(Highcharts);\n\nclass Variwide extends Component {\n  state = {\n    height: 200,\n    width: 0\n  };\n\n  onResizeChart = (width, height) => {\n    console.log(`chart size: ${width}x${height}`);\n    this.setState({ width: Math.floor(width), height: Math.floor(height) });\n  };\n\n  render() {\n      const data =  this.props.data\n      const colors = [\"rgba(0,0,255,0.3)\",\"rgba(0,0,255,0.4)\",\"rgba(0,0,255,0.5)\",\"rgba(0,0,255,0.6)\",\"rgba(0,0,255,0.7)\",\"rgba(0,0,255,0.8)\",\"rgba(0,0,255,0.9)\"]\n      const workflowMasterName =  this.props.workflowMasterName\n      var categories = []\n      var shown_data = []\n      var x_val = 0\n      var index = 0\n      data.map(value =>{\n          categories.push(value.name)\n          if(index > colors.length){\n              index =0\n          }\n          shown_data.push({x: x_val, y:value.data[0], z: 10, name:value.name,  color:colors[index] })\n\n          x_val = x_val +10.1\n          index ++;\n      })\n\n      return (\n      <StyledVariwide>\n        <div className=\"chart-container\">\n          <HighchartsChart>\n            <Chart\n              height={this.state.height}\n              width={this.state.width}\n              backgroundColor={\"transparent\"}\n            />\n              <Title>{workflowMasterName}</Title>\n\n            <Legend />\n            <XAxis>\n\n              {/*<VariwideSeries\n                              data={[\n                                {\n                                  x: 0,\n                                  y: 50,\n                                  z: 5,\n                                  name: \"test 1\",\n                                  color: \"rgba(0,0,255,0.4)\"\n                                },\n                                {\n                                  x: 5,\n                                  y: 40,\n                                  z: 10,\n                                  name: \"test 2\",\n                                  color: \"rgba(0,0,255,0.5)\"\n                                },\n                                {\n                                  x: 15,\n                                  y: 30,\n                                  z: 10,\n                                  name: \"test 3\",\n                                  color: \"rgba(0,0,255,0.6)\"\n                                },\n                                {\n                                  x: 25,\n                                  y: 60,\n                                  z: 5,\n                                  name: \"test 4\",\n                                  color: \"rgba(0,0,255,0.7)\"\n                                }\n                              ]}\n                            />*/}\n                <VariwideSeries  name={categories[0]} data={shown_data}  />\n            </XAxis>\n            <YAxis />\n          </HighchartsChart>\n\n          <ReactResizeDetector\n            handleWidth\n            handleHeight\n            onResize={this.onResizeChart}\n          />\n        </div>\n      </StyledVariwide>\n    );\n  }\n}\n\nexport default withHighcharts(Variwide, Highcharts);\n\n\n","import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport addHighchartsMore from \"highcharts/highcharts-more\";\nimport addVariwideModule from \"highcharts/modules/variwide\";\nimport {\n  Chart,\n  HighchartsChart,\n  VariwideSeries,\n  withHighcharts,\n  XAxis,\n  ColumnSeries,\n  SplineSeries,\n  BarSeries,\n  YAxis,\n  Legend,\n  Title,\n  LineSeries,\n  PieSeries\n} from \"react-jsx-highcharts\";\n\nimport ReactResizeDetector from \"react-resize-detector\";\nimport styled from \"styled-components\";\nrequire(\"highcharts/modules/exporting\")(Highcharts);\n\nexport const StyledBar = styled.div`\n  position: relative;\n  overflow: hidden; // hide the overflowing parts of the chart during resize\n\n  .chart-container {\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n  }\n`;\n\nconst pieData = [\n  0.2,\n  0.8,\n  0.8,\n  0.8,\n  1,\n  1.3,\n  1.5,\n  2.9,\n  1.9,\n  2.6,\n  1.6,\n  3,\n  4,\n  3.6,\n  4.5,\n  4.2,\n  4.5,\n  4.5,\n  4,\n  3.1,\n  2.7,\n  4,\n  2.7,\n  2.3,\n  2.3,\n  4.1,\n  7.7,\n  7.1,\n  5.6,\n  6.1,\n  5.8,\n  8.6,\n  7.2,\n  9,\n  10.9,\n  11.5,\n  11.6,\n  11.1,\n  12,\n  12.3,\n  10.7,\n  9.4,\n  9.8,\n  9.6,\n  9.8,\n  9.5,\n  8.5,\n  7.4,\n  7.6\n];\n\naddHighchartsMore(Highcharts);\naddVariwideModule(Highcharts);\n\nclass Bar extends Component {\n  state = {\n    height: 200,\n    width: 0,\n    chartData:  this.props.data\n  };\n\n  /*constructor(props) {\n\n    super(props);\n    console.log(this.props.data);\n    var tab = []\n    var data = this.props.data;\n    data.map(val =>{\n      tab.push(val.y)\n    })\n    this.setState({chartData: tab})\n    console.log(tab)\n //   this.setState({chartData : this.props.data});\n  }*/\n\n\n  onResizeChart = (width, height) => {\n    console.log(`chart size: ${width}x${height}`);\n    this.setState({ width: Math.floor(width), height: Math.floor(height) });\n  };\n\n  render() {\n    const data =  this.props.data\n    const workflowMasterName =  this.props.workflowMasterName\n    var categories = []\n    data.map(value =>{\n      categories.push(value.name)\n    })\n\n    return (\n      <StyledBar>\n        <div className=\"chart-container\">\n          <HighchartsChart>\n            <Chart\n              height={this.state.height}\n              width={this.state.width}\n              backgroundColor={\"transparent\"}\n            />\n            <Title>{workflowMasterName}</Title>\n\n            <Legend />\n            <YAxis>\n              {data.map(value =>{\n                return ( <BarSeries name={value.name} data={value.data}  />)\n              })}\n\n            </YAxis>\n            <XAxis  id=\"x\" categories={categories}/>\n          </HighchartsChart>\n\n          <ReactResizeDetector\n            handleWidth\n            handleHeight\n            onResize={this.onResizeChart}\n          />\n        </div>\n      </StyledBar>\n    );\n  }\n}\n\nexport default withHighcharts(Bar, Highcharts);\n","import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport addHighchartsMore from \"highcharts/highcharts-more\";\nimport addVariwideModule from \"highcharts/modules/variwide\";\nimport {\n  Chart,\n  LineSeries,\n  HighchartsChart,\n  VariwideSeries,\n  withHighcharts,\n  XAxis,\n  ColumnSeries,\n  SplineSeries,\n  YAxis,\n  Legend,\n  Title,\n  PieSeries\n} from \"react-jsx-highcharts\";\n\nimport ReactResizeDetector from \"react-resize-detector\";\nimport styled from \"styled-components\";\nrequire(\"highcharts/modules/exporting\")(Highcharts);\n\nexport const StyledLine = styled.div`\n  position: relative;\n  overflow: hidden; // hide the overflowing parts of the chart during resize\n\n  .chart-container {\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n  }\n`;\nconst pieData = [\n  0.2,\n  0.8,\n  0.8,\n  0.8,\n  1,\n  1.3,\n  1.5,\n  2.9,\n  1.9,\n  2.6,\n  1.6,\n  3,\n  4,\n  3.6,\n  4.5,\n  4.2,\n  4.5,\n  4.5,\n  4,\n  3.1,\n  2.7,\n  4,\n  2.7,\n  2.3,\n  2.3,\n  4.1,\n  7.7,\n  7.1,\n  5.6,\n  6.1,\n  5.8,\n  8.6,\n  7.2,\n  9,\n  10.9,\n  11.5,\n  11.6,\n  11.1,\n  12,\n  12.3,\n  10.7,\n  9.4,\n  9.8,\n  9.6,\n  9.8,\n  9.5,\n  8.5,\n  7.4,\n  7.6\n];\n\naddHighchartsMore(Highcharts);\naddVariwideModule(Highcharts);\n\nclass Line extends Component {\n  state = {\n    height: 200,\n    width: 0\n  };\n\n  onResizeChart = (width, height) => {\n    console.log(`chart size: ${width}x${height}`);\n    this.setState({ width: Math.floor(width), height: Math.floor(height) });\n  };\n\n  render() {\n    const data =  this.props.data\n    const workflowMasterName =  this.props.workflowMasterName\n    var categories = []\n    var data_show = []\n    data.map(value =>{\n      categories.push(value.name)\n      data_show.push(value.data)\n    })\n\n    return (\n      <StyledLine>\n        <div className=\"chart-container\">\n          <HighchartsChart>\n            <Chart\n              height={this.state.height}\n              width={this.state.width}\n              backgroundColor={\"transparent\"}\n            />\n            <Title>{workflowMasterName}</Title>\n\n            <Legend />\n            <YAxis>\n              {/*} <VariwideSeries\n                data={[\n                  {\n                    x: 0,\n                    y: 50,\n                    z: 5,\n                    name: \"test 1\",\n                    color: \"rgba(0,0,255,0.4)\"\n                  },\n                  {\n                    x: 5,\n                    y: 40,\n                    z: 10,\n                    name: \"test 2\",\n                    color: \"rgba(0,0,255,0.5)\"\n                  },\n                  {\n                    x: 15,\n                    y: 30,\n                    z: 10,\n                    name: \"test 3\",\n                    color: \"rgba(0,0,255,0.6)\"\n                  },\n                  {\n                    x: 25,\n                    y: 60,\n                    z: 5,\n                    name: \"test 4\",\n                    color: \"rgba(0,0,255,0.7)\"\n                  }\n                ]}\n              /> */}\n              {/*}  <ColumnSeries name=\"Jane\" data={[3, 2, 1, 3, 4]} />\n      <ColumnSeries name=\"John\" data={[2, 3, 5, 7, 6]} />\n      <ColumnSeries name=\"Joe\" data={[4, 3, 3, 9, 0]} />\n            */}\n              {/*<LineSeries name=\"Total consumption\" data={pieData} />*/}\n\n                <LineSeries name={categories[0]} data={data_show}  />\n\n            </YAxis>\n            <XAxis />\n          </HighchartsChart>\n\n          <ReactResizeDetector\n            handleWidth\n            handleHeight\n            onResize={this.onResizeChart}\n          />\n        </div>\n      </StyledLine>\n    );\n  }\n}\n\nexport default withHighcharts(Line, Highcharts);\n","//export default Graph;\n//export default Graph;\nimport React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport addHighchartsMore from \"highcharts/highcharts-more\";\nimport addVariwideModule from \"highcharts/modules/variwide\";\nimport {\n  Chart,\n  LineSeries,\n  HighchartsChart,\n  VariwideSeries,\n  withHighcharts,\n  XAxis,\n  ColumnSeries,\n  SplineSeries,\n  YAxis,\n  Legend,\n  Title,\n  PieSeries\n} from \"react-jsx-highcharts\";\n\nimport ReactResizeDetector from \"react-resize-detector\";\nimport styled from \"styled-components\";\nrequire(\"highcharts/modules/exporting\")(Highcharts);\n\nexport const StyledSpline = styled.div`\n  position: relative;\n  overflow: hidden; // hide the overflowing parts of the chart during resize\n\n  .chart-container {\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n  }\n`;\nconst pieData = [\n  0.2,\n  0.8,\n  0.8,\n  0.8,\n  1,\n  1.3,\n  1.5,\n  2.9,\n  1.9,\n  2.6,\n  1.6,\n  3,\n  4,\n  3.6,\n  4.5,\n  4.2,\n  4.5,\n  4.5,\n  4,\n  3.1,\n  2.7,\n  4,\n  2.7,\n  2.3,\n  2.3,\n  4.1,\n  7.7,\n  7.1,\n  5.6,\n  6.1,\n  5.8,\n  8.6,\n  7.2,\n  9,\n  10.9,\n  11.5,\n  11.6,\n  11.1,\n  12,\n  12.3,\n  10.7,\n  9.4,\n  9.8,\n  9.6,\n  9.8,\n  9.5,\n  8.5,\n  7.4,\n  7.6\n];\n\naddHighchartsMore(Highcharts);\naddVariwideModule(Highcharts);\n\nclass Spline extends Component {\n  state = {\n    height: 200,\n    width: 0\n  };\n\n  onResizeChart = (width, height) => {\n    console.log(`chart size: ${width}x${height}`);\n    this.setState({ width: Math.floor(width), height: Math.floor(height) });\n  };\n\n  render() {\n    const data =  this.props.data\n    const workflowMasterName =  this.props.workflowMasterName\n    var categories = []\n    var data_show = []\n    data.map(value =>{\n      categories.push(value.name)\n      data_show.push(value.data)\n    })\n\n    return (\n      <StyledSpline>\n        <div className=\"chart-container\">\n          <HighchartsChart>\n            <Chart\n              height={this.state.height}\n              width={this.state.width}\n              backgroundColor={\"transparent\"}\n            />\n            <Title>{workflowMasterName}</Title>\n\n            <Legend />\n            <YAxis>\n               {/*<SplineSeries\n                            name=\"Total consumption\"\n                            data={pieData}\n                          />*/}\n\n                <SplineSeries  data={data_show}  />\n\n            </YAxis>\n            <XAxis id=\"x\" />\n          </HighchartsChart>\n\n          <ReactResizeDetector\n            handleWidth\n            handleHeight\n            onResize={this.onResizeChart}\n          />\n        </div>\n      </StyledSpline>\n    );\n  }\n}\n\nexport default withHighcharts(Spline, Highcharts);\n","import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport addHighchartsMore from \"highcharts/highcharts-more\";\nimport addVariwideModule from \"highcharts/modules/variwide\";\nimport {\n  Chart,\n  LineSeries,\n  HighchartsChart,\n  VariwideSeries,\n  withHighcharts,\n  XAxis,\n  ColumnSeries,\n  SplineSeries,\n  YAxis,\n  Legend,\n  Title,\n  PieSeries\n} from \"react-jsx-highcharts\";\n\nimport ReactResizeDetector from \"react-resize-detector\";\nimport styled from \"styled-components\";\nrequire(\"highcharts/modules/exporting\")(Highcharts);\n\nexport const StyledPie = styled.div`\n  position: relative;\n  overflow: hidden; // hide the overflowing parts of the chart during resize\n\n  .chart-container {\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n  }\n`;\n\n/*const pieData = [\n  0.2,\n  0.8,\n  0.8,\n  0.8,\n  1,\n  1.3,\n  1.5,\n  2.9,\n  1.9,\n  2.6,\n  1.6,\n  3,\n  4,\n  3.6,\n  4.5,\n  4.2,\n  4.5,\n  4.5,\n  4,\n  3.1,\n  2.7,\n  4,\n  2.7,\n  2.3,\n  2.3,\n  4.1,\n  7.7,\n  7.1,\n  5.6,\n  6.1,\n  5.8,\n  8.6,\n  7.2,\n  9,\n  10.9,\n  11.5,\n  11.6,\n  11.1,\n  12,\n  12.3,\n  10.7,\n  9.4,\n  9.8,\n  9.6,\n  9.8,\n  9.5,\n  8.5,\n  7.4,\n  7.6\n];*/\n\naddHighchartsMore(Highcharts);\naddVariwideModule(Highcharts);\n\nclass Pie extends Component {\n  state = {\n    height: 200,\n    width: 0\n  };\n\n  onResizeChart = (width, height) => {\n    console.log(`chart size: ${width}x${height}`);\n    this.setState({ width: Math.floor(width), height: Math.floor(height) });\n  };\n\n  render() {\n\n    const data =  this.props.data\n    const workflowMasterName =  this.props.workflowMasterName\n    var categories = []\n    var data_show = []\n    console.log(data)\n    data.map(value =>{\n      categories.push(value.name)\n      data_show.push({name: value.name, y: value.data[0] })\n    })\n    const pieData = data_show\n    const plotOptions = {\n      pie: {\n        // size: 120,\n        allowPointSelect: true,\n        cursor: \"pointer\",\n        dataLabels: {\n          enabled: true,\n          format: \"{point.name}: {point.percentage:.1f} %\"\n        },\n        showInLegend: true\n      },\n      series: {\n        dataLabels: {\n          enabled: true\n        }\n\n      }\n    };\n    return (\n      <StyledPie>\n        <div className=\"chart-container\">\n          <HighchartsChart plotOptions={plotOptions}>\n            <Chart\n              height={this.state.height}\n              width={this.state.width}\n              backgroundColor={\"transparent\"}\n            />\n            <Title>{workflowMasterName}</Title>\n\n            <Legend />\n            <YAxis>\n              {/*} <VariwideSeries\n                data={[\n                  {\n                    x: 0,\n                    y: 50,\n                    z: 5,\n                    name: \"test 1\",\n                    color: \"rgba(0,0,255,0.4)\"\n                  },\n                  {\n                    x: 5,\n                    y: 40,\n                    z: 10,\n                    name: \"test 2\",\n                    color: \"rgba(0,0,255,0.5)\"\n                  },\n                  {\n                    x: 15,\n                    y: 30,\n                    z: 10,\n                    name: \"test 3\",\n                    color: \"rgba(0,0,255,0.6)\"\n                  },\n                  {\n                    x: 25,\n                    y: 60,\n                    z: 5,\n                    name: \"test 4\",\n                    color: \"rgba(0,0,255,0.7)\"\n                  }\n                ]}\n              /> */}\n              {/*}  <ColumnSeries name=\"Jane\" data={[3, 2, 1, 3, 4]} />\n      <ColumnSeries name=\"John\" data={[2, 3, 5, 7, 6]} />\n      <ColumnSeries name=\"Joe\" data={[4, 3, 3, 9, 0]} />\n            */}\n             {/* <PieSeries name=\"Total consumption\" data={pieData} />*/}\n              <PieSeries name={categories} data={pieData}  />\n\n            </YAxis>\n            <XAxis />\n          </HighchartsChart>\n\n          <ReactResizeDetector\n            handleWidth\n            handleHeight\n            onResize={this.onResizeChart}\n          />\n        </div>\n      </StyledPie>\n    );\n  }\n}\n\nexport default withHighcharts(Pie, Highcharts);\n","//export default Graph;\nimport React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport addHighchartsMore from \"highcharts/highcharts-more\";\nimport addVariwideModule from \"highcharts/modules/variwide\";\nimport {\n  Chart,\n  LineSeries,\n  HighchartsChart,\n  VariwideSeries,\n  withHighcharts,\n  XAxis,\n  ColumnSeries,\n  SplineSeries,\n  YAxis,\n  Legend,\n  Title,\n  PieSeries\n} from \"react-jsx-highcharts\";\n\nimport ReactResizeDetector from \"react-resize-detector\";\nimport styled from \"styled-components\";\nrequire(\"highcharts/modules/exporting\")(Highcharts);\n\nexport const StyledColumn = styled.div`\n  position: relative;\n  overflow: hidden; // hide the overflowing parts of the chart during resize\n\n  .chart-container {\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n  }\n`;\nconst pieData = [\n  0.2,\n  0.8,\n  0.8,\n  0.8,\n  1,\n  1.3,\n  1.5,\n  2.9,\n  1.9,\n  2.6,\n  1.6,\n  3,\n  4,\n  3.6,\n  4.5,\n  4.2,\n  4.5,\n  4.5,\n  4,\n  3.1,\n  2.7,\n  4,\n  2.7,\n  2.3,\n  2.3,\n  4.1,\n  7.7,\n  7.1,\n  5.6,\n  6.1,\n  5.8,\n  8.6,\n  7.2,\n  9,\n  10.9,\n  11.5,\n  11.6,\n  11.1,\n  12,\n  12.3,\n  10.7,\n  9.4,\n  9.8,\n  9.6,\n  9.8,\n  9.5,\n  8.5,\n  7.4,\n  7.6\n];\n\naddHighchartsMore(Highcharts);\naddVariwideModule(Highcharts);\n\nclass Column extends Component {\n  state = {\n    height: 200,\n    width: 0\n  };\n\n  onResizeChart = (width, height) => {\n    console.log(`chart size: ${width}x${height}`);\n    this.setState({ width: Math.floor(width), height: Math.floor(height) });\n  };\n\n  render() {\n    const data =  this.props.data\n    const workflowMasterName =  this.props.workflowMasterName\n    var categories = []\n    data.map(value =>{\n      categories.push(value.name)\n    })\n\n    return (\n      <StyledColumn>\n        <div className=\"chart-container\">\n          <HighchartsChart>\n            <Chart\n              height={this.state.height}\n              width={this.state.width}\n              backgroundColor={\"transparent\"}\n            />\n            <Title>{workflowMasterName}</Title>\n\n            <Legend />\n            <YAxis>\n              {/*} <VariwideSeries\n                data={[\n                  {\n                    x: 0,\n                    y: 50,\n                    z: 5,\n                    name: \"test 1\",\n                    color: \"rgba(0,0,255,0.4)\"\n                  },\n                  {\n                    x: 5,\n                    y: 40,\n                    z: 10,\n                    name: \"test 2\",\n                    color: \"rgba(0,0,255,0.5)\"\n                  },\n                  {\n                    x: 15,\n                    y: 30,\n                    z: 10,\n                    name: \"test 3\",\n                    color: \"rgba(0,0,255,0.6)\"\n                  },\n                  {\n                    x: 25,\n                    y: 60,\n                    z: 5,\n                    name: \"test 4\",\n                    color: \"rgba(0,0,255,0.7)\"\n                  }\n                ]}\n              /> */}\n              {/*}  <ColumnSeries name=\"Jane\" data={[3, 2, 1, 3, 4]} />\n      <ColumnSeries name=\"John\" data={[2, 3, 5, 7, 6]} />\n      <ColumnSeries name=\"Joe\" data={[4, 3, 3, 9, 0]} />\n            */}\n              {/* <ColumnSeries name=\"Jane\" data={[3, 2, 1, 3, 4]} />\n                          <ColumnSeries name=\"John\" data={[2, 3, 5, 7, 6]} />\n                          <ColumnSeries name=\"Joe\" data={[4, 3, 3, 9, 0]} />*/}\n              {data.map(value =>{\n                return ( <ColumnSeries name={value.name} data={value.data}  />)\n              })}\n            </YAxis>\n            <XAxis />\n          </HighchartsChart>\n\n          <ReactResizeDetector\n            handleWidth\n            handleHeight\n            onResize={this.onResizeChart}\n          />\n        </div>\n      </StyledColumn>\n    );\n  }\n}\n\nexport default withHighcharts(Column, Highcharts);\n","import React from 'react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\n\nconst brandSuccess = getStyle('success') || '#4dbd74'\nconst brandInfo = getStyle('info') || '#20a8d8'\nconst brandDanger = getStyle('danger') || '#f86c6b'\n\nconst MainChartExample = attributes => {\n  const random = (min, max)=>{\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  const defaultDatasets = (()=>{\n    let elements = 27\n    const data1 = []\n    const data2 = []\n    const data3 = []\n    for (let i = 0; i <= elements; i++) {\n      data1.push(random(50, 200))\n      data2.push(random(80, 100))\n      data3.push(65)\n    }\n    return [\n      {\n        label: 'My First dataset',\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: data1\n      },\n      {\n        label: 'My Second dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandSuccess,\n        pointHoverBackgroundColor: brandSuccess,\n        borderWidth: 2,\n        data: data2\n      },\n      {\n        label: 'My Third dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandDanger,\n        pointHoverBackgroundColor: brandDanger,\n        borderWidth: 1,\n        borderDash: [8, 5],\n        data: data3\n      }\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n              max: 250\n            },\n            gridLines: {\n              display: true\n            }\n          }]\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3\n          }\n        }\n      }\n    }\n  )()\n\n  // render\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su']}\n    />\n  )\n}\n\n\nexport default MainChartExample\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CardHeader } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport MyChart, { StyledMyChart } from \"./Chart\";\nimport \"./styles.css\";\nimport Variwide, { StyledVariwide }  from \"./VariwideSeries\";\nimport Bar, { StyledBar }  from \"./Bar\";\nimport Line, { StyledLine }  from \"./Line\";\nimport Spline, { StyledSpline }  from \"./Spline\";\nimport Pie , { StyledPie } from \"./Pie\";\nimport Column , { StyledColumn } from \"./Column\";\nimport {INDICATOR_SERVICE} from \"../../constants\";\nconst useStyles = makeStyles({\n    root: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    header: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: \"0.5rem\"\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    body: {\n        padding: \"0.5rem\",\n        flexGrow: 1\n    }\n});\n\nconst widgetNames = {\n    n0: \"Line Chart\",\n    n1: \"Area Chart\",\n    n3: \"Bar Chart\",\n    n4: \"Scatter Chart\"\n};\n\nconst StyledRoot = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledContent = styled.div`\n  flex: 1 1 0;\n  display: flex;\n  flex-direction: column;\n\n  .text-container {\n    min-height: 50px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: solid 2px black;\n    .text {\n      font-size: 30px;\n    }\n  }\n\n  ${StyledMyChart} {\n    flex: 1;\n  }\n   ${StyledLine} {\n      flex: 1;\n    }\n     ${StyledColumn} {\n        flex: 1;\n      }\n       ${StyledPie} {\n          flex: 1;\n        }\n         ${StyledBar} {\n            flex: 1;\n          }\n           ${StyledSpline} {\n              flex: 1;\n            }\n             ${StyledVariwide} {\n                flex: 1;\n              }\n`;\n\n\nexport default function WidgetView({ id, type, title, onRemoveItem, component: Item, workflowMaster, kpi }) {\n    const [slider, setSlider] = useState(300);\n    const [height, setHeight] = useState(200);\n    const [chartData, setChartData] = useState([]);\n    const [domainName, setDomainName] = useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n\n    const classes = useStyles();\n    let chart;\n    useEffect(() =>{\n        if(kpi !== null && kpi !== undefined){\n\n            console.log(workflowMaster)\n            console.log(kpi)\n\n            var performance = \"\"\n            var worklow_master_id = \"\"\n            if(typeof(kpi) === \"string\"){\n                performance = kpi\n            }else{\n                performance = kpi.value\n            }\n            if(typeof(workflowMaster) === \"string\"){\n                worklow_master_id = workflowMaster\n            }else{\n                worklow_master_id = workflowMaster.value\n            }\n            const performance_indicator_data = {\n                method: 'POST',\n                headers: {\n                    \"X-Tenant\": domainName,\n                    'Content-Type': 'application/json',\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n                body: JSON.stringify({workflowMasterId : worklow_master_id, domainName: domainName, kpiId : performance})\n            };\n            fetch(INDICATOR_SERVICE + '/api/indicator/getById', performance_indicator_data)\n                .then(response => {\n                    return new Promise((resolve, reject) => {\n                        response.text().then(body => {\n                            resolve(\n                                body.length ? JSON.parse(body) : null\n                            );\n                        }).catch(err => {\n                            reject(err);\n                        });\n                    });\n                })\n                .then(data => {\n                    console.log(data)\n                    var tab = []\n                    // const categories = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n                    var x_list = []\n                    var y_list = []\n                    var i = 0;\n                    data.map((val, index) =>{\n                        if(!x_list.includes(val.x)){\n                            x_list.push(val.x)\n                            y_list.push(val.y)\n                            tab.push({data: [val.y], name: val.x})\n                        }else {\n                            const index_x = x_list.indexOf(val.x)\n                            y_list[index_x] = val.y\n                            tab[index_x].data = [val.y]\n                        }\n                    })\n\n                    setChartData(tab)\n                    /* var tab = []\n                     data.map(elem =>{\n                         tab.push({value: elem.id, label: elem.name})\n                     })\n                     this.setState({worklfowMasters: tab})*/\n                })\n        }\n\n    },[])\n    if (type ===\"Line\") {\n        chart = <Line data={chartData} workflowMasterName={workflowMaster.label}/>;\n    } else if (type ===\"Bar\"){\n        chart = <Bar data={chartData} workflowMasterName={workflowMaster.label} />;\n    }\n    else if (type ===\"Spline\"){\n        chart = <Spline  data={chartData} workflowMasterName={workflowMaster.label}/>;\n    }\n    else if (type ===\"Column\"){\n        chart = <Column data={chartData} workflowMasterName={workflowMaster.label}/>;\n    }\n    else if (type ===\"Pie\"){\n        chart = <Pie data={chartData} workflowMasterName={workflowMaster.label}/>;\n    }\n    else if (type ===\"Variwide\"){\n        chart = <Variwide data={chartData} workflowMasterName={workflowMaster.label} />;\n    }\n    return (\n        <Card className={classes.root} key={id} >\n            <div\n                className={classes.header}\n                style={{ backgroundColor: \"#E4E6E8\", height: \"40px\" }}\n            >\n                <Typography variant=\"h6\" gutterBottom>\n                    {title}\n                </Typography>\n                <div className={classes.spacer} />\n\n            </div>\n            <div className={classes.body}>\n                <StyledRoot>\n                    <StyledContent height={height}>\n                        {chart}\n                    </StyledContent>\n                </StyledRoot>\n            </div>\n        </Card>\n    );\n}\n","import React, {lazy, useEffect, useRef, useState} from 'react'\nimport {\n  CBadge,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CCallout, CLink, CDropdown, CDropdownToggle, CDropdownMenu, CDropdownItem\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport MainChartExample from '../charts/MainChartExample.js'\n\nimport { DASHBOARD_SERVICE} from \"../../constants\";\nimport {getAuthed, getLocalToken} from \"../../utils\";\nimport {Add, Edit} from \"@material-ui/icons\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport {Menu} from \"primereact/menu\";\nimport ArrowDown from \"./arrow-down.png\";\nimport WidgetView from \"../../components/dashboard/WidgetView\";\nimport _ from \"lodash\";\nimport RGL, {WidthProvider} from \"react-grid-layout\";\nimport {useHistory} from \"react-router-dom\";\nconst ReactGridLayout = WidthProvider(RGL);\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\n\n\nconst Dashboard = (props) => {\nconst menuExport = useRef(null);\nconst token = getLocalToken();\n\n    const [domainName, setDomainName] = React.useState(\"\");\n    const [username, setUsername] = React.useState(localStorage.getItem('username'));\n    const [counter, setCounter] = React.useState(0);\n    const [dashboardItems, setDashboardItems] = React.useState([]);\n    const [breakpoint, setBreakpoint] = React.useState(null);\n    const [cols, setCols] = React.useState(null);\n    const [dashboardGrid, setDashboardGrid] = React.useState([]);\n    const [dashboards, setDashboards] = React.useState([]);\n    const [layout, setLayout] = React.useState([]);\n    const [items, setItems] = React.useState([]);\n    const [titles, setTitles] = React.useState([]);\n    const [orders, setOrders] = React.useState([]);\n    const [selectedTypes, setSelectedTypes] = React.useState([]);\n    const [selectedWorkflowMasters, setSelectedWorkflowMasters] = React.useState([]);\n    const [selectedPerformanceIndicators, setSelectedPerformanceIndicators] = React.useState([]);\n    const [visibleDashboard, setVisibleDashboard] = useState(false)\n    const [visibleWelcome, setVisibleWelcome] = useState(true)\n    const history = useHistory()\n    var unique_dashboards = []\n    useEffect(()=> {\n\n        if(JSON.parse(localStorage.getItem('domain_data')) === undefined || JSON.parse(localStorage.getItem('domain_data')) === null ){\n            localStorage.clear();\n            history.push(\"/domain\");\n        }else{\n            setDomainName(JSON.parse(localStorage.getItem('domain_data')).domainName)\n            var domain_name = JSON.parse(localStorage.getItem('domain_data')).domainName\n            if(localStorage.getItem(\"dashboardName\") === null) {\n                saveToLS(\"dashboardName\", \"Default\");\n                show_dashboard()\n            }else{\n                var roles_data = [];\n                roles_data = JSON.parse(localStorage.getItem(\"userRoles\"))\n                var roles_names = []\n                roles_data?.map(role=>{\n                    roles_names.push(role.roleName)\n                })\n                const dashboards_data = {\n                    method: 'POST',\n                    headers: {\n                        \"X-Tenant\": domain_name,\n                        'Content-Type': 'application/json',\n                        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n                    },\n                    body: JSON.stringify({username: username, roles: roles_names})\n                };\n                var dashboards_menu = []\n                fetch(DASHBOARD_SERVICE+'/api/dashboard/getByUserRoles',dashboards_data)\n                    .then(response => {\n                        return new Promise((resolve, reject) => {\n                            response.text().then(body => {\n                                resolve(\n                                    body.length ? JSON.parse(body) : null\n                                );\n                            })\n                                .catch(err => {\n                                    reject(err);\n                                });\n                        })\n                    })\n                    .then(data => {\n                        console.log(data)\n                        const dashboards_data = JSON.parse(data.dashboards_access)\n\n                        if(dashboards_data.length > 0){\n                            unique_dashboards = getUnique(dashboards_data, \"name\")\n                            var tab = []\n                            unique_dashboards.map(val =>{\n                                if(val !== null ){\n                                    tab.push(val)\n                                }\n                            })\n                            unique_dashboards = tab\n                            console.log(unique_dashboards)\n                            setDashboards(unique_dashboards)\n\n                            localStorage.setItem(\"dashboard_show\", JSON.stringify(unique_dashboards))\n                            unique_dashboards.map((val, index) => {\n                                dashboards_menu= [... dashboards_menu,  {label: val.name, value:val.id, key: index } ]\n                            })\n                            setDashboardItems(dashboards_menu)\n                        }\n                    })\n                if (JSON.parse(localStorage.getItem(\"dashboardName\")).dashboardName !== \"Default\"){\n                    setLayout(getFromLS(\"layoutViews\") );\n                    setItems(getFromLS(\"itemsViews\") );\n                    setTitles(getFromLS(\"titlesViews\") );\n                    setSelectedTypes(getFromLS(\"selectedTypesViews\"));\n                    setSelectedWorkflowMasters(getFromLS(\"selectedWorkflowMastersViews\"));\n                    setSelectedPerformanceIndicators(getFromLS(\"selectedPerformanceIndicatorsViews\"));\n                    setCounter(getFromLS(\"newCounterViews\"));\n                    setOrders(getFromLS(\"orders\"));\n                    show_dashboard()\n                }\n            }\n\n        }\n\n\n    }, [])\n    const showDashboard = (dashboard_id, index) =>{\n        saveToLS(\"itemsViews\", []);\n        saveToLS(\"dashboard_data\", {});\n        saveToLS(\"titlesViews\", []);\n        saveToLS(\"selectedTypesViews\",  []);\n        saveToLS(\"selectedWorkflowMastersViews\",  []);\n        saveToLS(\"selectedPerformanceIndicatorsViews\", []);\n        saveToLS(\"newCounterViews\",  0);\n        saveToLS(\"layoutViews\", []);\n        saveToLS(\"orders\", []);\n        const dashboards_data = JSON.parse(localStorage.getItem(\"dashboard_show\"));\n\n\n        if(dashboards_data[index] !== undefined  ){\n            const grid_items = dashboards_data[index].dashboardGridItems;\n            var titles_list = []\n            var selected_types = []\n            var selected_workflow_masters = []\n            var selected_performance_indicators = []\n            var layout_list = []\n            var items_list = []\n            var obj = [...grid_items];\n            obj.sort((a,b) => a.orders - b.orders);\n            var orders = []\n            obj.map(elem =>{\n                orders.push(elem.orders)\n                titles_list.push(elem.title)\n                selected_types.push(elem.chartType)\n                selected_workflow_masters.push({label: elem.workflowMasterName, value: elem.workflowMasterId})\n                selected_performance_indicators.push({value: elem.performanceIndicatorId, label: elem.performanceIndicatorName})\n\n                items_list.push({x: elem.x, y: elem.y, w: elem.w, i: elem.i, h: elem.h })\n                layout_list.push({static: elem.staticLayout, x: elem.xLayout, y: elem.yLayout, w: elem.wLayout, i: elem.iLayout, h: elem.hLayout })\n            })\n            saveToLS(\"itemsViews\", items_list);\n            saveToLS(\"orders\", orders);\n            saveToLS(\"dashboardName\", dashboards_data[index].name);\n            dashboards_data[index].key= index;\n            dashboards_data[index].id = dashboard_id;\n            saveToLS(\"dashboard_data\", dashboards_data[index]);\n            saveToLS(\"titlesViews\", [...titles_list]);\n            saveToLS(\"selectedTypesViews\",  [...selected_types]);\n            saveToLS(\"selectedWorkflowMastersViews\",  [...selected_workflow_masters]);\n            saveToLS(\"selectedPerformanceIndicatorsViews\",  [...selected_performance_indicators]);\n            saveToLS(\"newCounterViews\",  counter);\n            saveToLS(\"layoutViews\", layout_list);\n            setLayout(getFromLS(\"layoutViews\") );\n            setItems(getFromLS(\"itemsViews\") );\n            setTitles(getFromLS(\"titlesViews\") );\n            setSelectedTypes(getFromLS(\"selectedTypesViews\"));\n            setSelectedWorkflowMasters(getFromLS(\"selectedWorkflowMastersViews\"));\n            setSelectedPerformanceIndicators(getFromLS(\"selectedPerformanceIndicatorsViews\"));\n            setCounter(getFromLS(\"newCounterViews\"));\n            setOrders(orders)\n            //setLayout(layout_list)\n            setVisibleWelcome(false)\n            setVisibleDashboard(true)\n        }else{\n            saveToLS(\"dashboardName\", \"Default\");\n            saveToLS(\"itemsViews\", []);\n            saveToLS(\"dashboard_data\", {});\n            saveToLS(\"titlesViews\", []);\n            saveToLS(\"selectedTypesViews\",  []);\n            saveToLS(\"selectedWorkflowMastersViews\",  []);\n            saveToLS(\"selectedPerformanceIndicatorsViews\", []);\n            saveToLS(\"newCounterViews\",  0);\n            saveToLS(\"layoutViews\", []);\n            saveToLS(\"orders\", []);\n            setVisibleWelcome(true)\n            setVisibleDashboard(false)\n        }\n\n    }\n    const getFromLS = (key) => {\n        let ls = {};\n        if (localStorage) {\n            try {\n                ls = JSON.parse(localStorage.getItem(key)) || {};\n            } catch (e) {\n                /*Ignore*/\n            }\n        }\n        return ls[key];\n    }\n\n    const saveToLS = (key, value) => {\n        if (localStorage) {\n            localStorage.setItem(\n                key,\n                JSON.stringify({\n                    [key]: value\n                })\n            );\n        }\n    }\n    const getUnique = (arr, index) =>{\n\n        const unique = arr\n            .map(e => e !== null ? e[index] : null)\n\n            // store the keys of the unique objects\n            .map((e, i, final) => final.indexOf(e) === i && i)\n\n            // eliminate the dead keys & store unique objects\n            .filter(e => arr[e]).map(e => arr[e]);\n        return unique;\n    }\n/*  useEffect(()=> {\nasync function fetchData() {\nconsole.log(token)\n if (token !== undefined) {\n      const domainId = JSON.parse(localStorage.getItem('domain_data')).domainId;\n      let result = await getAuthed(SERVER_URL + '/api/form/getAll', domainId);\n      console.log(result)\n      if(result !== 200){\n       localStorage.clear();\n       props.history.push(\"/domain\");\n    }\n\n    }\n    else{\n    localStorage.clear();\n      props.history.push(\"/domain\");\n    }\n    }\n    fetchData();\n    if(localStorage.getItem('domain_data') === null){\n      props.history.push(\"/domain\");\n    }else {\n      const workflow_data = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n        },\n        body: JSON.stringify({domainId: JSON.parse(localStorage.getItem('domain_data')).domainId})\n      };\n      fetch(SERVER_URL+'/api/workflow/getAll', workflow_data)\n        .then(response => {\n          return new Promise((resolve, reject) => {\n            response.text().then(body => {\n              resolve(\n                body.length ? JSON.parse(body) : null\n              );\n            }).catch(err => {\n              reject(err);\n            });\n          });\n        })\n        .then(data => {\n          console.log(data);\n          localStorage.setItem(\"workflows\", JSON.stringify(data));\n          //this.props.history.push(\"/admin/formView\");\n        })\n        .catch(error => {\n          console.log(error);\n        });\n\n      const webToken = localStorage.getItem(\"webToken\");\n      const user = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n        },\n        body: JSON.stringify({username: localStorage.getItem(\"username\")})\n      };\n\n      const token = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n        },\n        body: JSON.stringify({webToken: localStorage.getItem(\"webToken\"), username: localStorage.getItem(\"username\")})\n      };\n      fetch(SERVER_URL + '/api/save-web-token', token)\n        .then(response => {\n          console.log(response)\n          return new Promise((resolve, reject) => {\n            response.text().then(body => {\n              console.log(body);\n            }).catch(err => {\n              reject(err);\n            });\n          });\n        }).then(data => {\n        console.log(data);\n        // this.props.history.push(\"/admin/formView\");\n      })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  },[token]);*/\n    const createElement= (el, key) => {\n        const removeStyle = {\n            position: \"absolute\",\n            right: \"2px\",\n            top: 0,\n            cursor: \"pointer\"\n        };\n        const i =  el.i;\n        /* console.log(this.state.selectedTypes)\n         console.log( this.state.items)\n         console.log(this.state.layout)\n           console.log(i)\n           console.log( this.state.selectedWorkflowMasters)\n           console.log( this.state.selectedPerformanceIndicators)*/\n        const order = orders[key]\n        let selected = selectedTypes[order]\n        let title = titles[order];\n        let workflowMaster = selectedWorkflowMasters[order];\n        /*console.log(selected)\n        console.log(workflowMaster)\n        console.log(selectedPerformanceIndicators)*/\n        let kpi = selectedPerformanceIndicators[order];\n        if(kpi !== null ){\n            return (\n                <div key={order+\"\"} data-grid={el}>\n                        <WidgetView\n                            id={order+\"\"}\n                            workflowMaster={workflowMaster}\n                            kpi={kpi}\n                            type={selected}\n                            title={title}\n\n                            // component={Widget}\n                        />\n                </div>\n            );\n        }\n\n    }\n    const show_dashboard = () =>{\n        if(localStorage.getItem(\"dashboard_data\") !== null ){\n            console.log(JSON.parse(localStorage.getItem(\"dashboard_data\")))\n            const dashboard_data = JSON.parse(localStorage.getItem(\"dashboard_data\")).dashboard_data\n            console.log(dashboard_data)\n            showDashboard(dashboard_data.id, dashboard_data.key)\n            setVisibleWelcome(false)\n            setVisibleDashboard(true)\n\n\n\n        }else{\n            setVisibleWelcome(true)\n            setVisibleDashboard(false)\n        }\n    }\n    const isVisibleDashboard = visibleDashboard;\n    const isVisibleWelcome = visibleWelcome;\n    const onBreakpointChange = (breakpoint, cols) => {\n            setBreakpoint(breakpoint)\n            setCols(cols)\n    }\n  return (\n      <>\n        <CRow>\n          <CCol>\n            <CCard style={{zIndex: \"10 !important\"}}>\n              <CCardHeader style={{backgroundColor: \"#494399\", height: \"50px\"}}>\n                <span style={{color: \"#FFFFFF\", fontWeight: \"bold\"}}>Dashboard |\n\n                    <CDropdown>\n                      <CDropdownToggle  style={{ backgroundColor: \"#494399\", color: \"#FFFFFF\", marginLeft:\"90px\", marginTop: \"-40px\"}}>\n                          {localStorage.getItem(\"dashboardName\")!== null ? JSON.parse(localStorage.getItem(\"dashboardName\")).dashboardName : \"Default\"}\n                          {/*<img src={ArrowDown} id=\"output\" width=\"15\"/>*/}\n                      </CDropdownToggle>\n                      <CDropdownMenu>\n                          {dashboardItems?.map((elem, index) =>{\n                              return ( <CDropdownItem onClick={e => showDashboard(elem.value, elem.key)}>{elem.label}</CDropdownItem>)\n                          })}\n\n\n                      </CDropdownMenu>\n                    </CDropdown>\n               {/* <Menu model={dashboardItems} popup ref={menuExport}  />\n\n                  <CLink style={{color: \"#FFFFFF\", paddingLeft: \"10px\" }} >\n\n                    <span  onClick={(event) => {\n\n                        menuExport\n                            .current.toggle(event)\n                        console.log(menuExport\n                            .current)\n\n\n                       // showDashboard(val.id, index)\n\n                    }\n                    }> {localStorage.getItem(\"dashboardName\")!== null ? JSON.parse(localStorage.getItem(\"dashboardName\")).dashboardName : \"Default\"}\n                      <img src={ArrowDown} id=\"output\" width=\"15\"/></span>\n                  </CLink>*/}\n                </span>\n                {/*<div className=\"card-header-actions\">\n                  <CLink\n                      style={{color: \"#FFFFFF\"}}\n                      onClick={()=> props.history.push(\"/admin/dashboard/create\")}\n                      rel=\"noreferrer noopener\"\n                      target=\"_blank\"\n                      className=\"card-header-action\"\n                  >\n                    <Add/>Ajouter un nouveau\n                  </CLink>\n                  <CLink style={{color: \"#FFFFFF\", paddingLeft: \"10px\" }} >\n                                    <Search content=\"cil-search\" size=\"2xl\"/>\n                                </CLink>\n                  <CLink style={{color: \"#FFFFFF\", paddingLeft: \"10px\" }} >\n                    <i  size=\"2xl\" className=\"pi pi-bars\" onClick={(event) => console.log(event)}></i>\n                  </CLink>\n                </div>*/}\n              </CCardHeader>\n                {isVisibleWelcome &&\n                <CCardBody>\n                    <h4> Bienvenue sur la plateforme ISCT-GROUP !</h4>\n                </CCardBody> }\n                {isVisibleDashboard &&\n                <CCardBody>\n                    <div>\n                        <ReactGridLayout\n                            layout={layout}\n                            onBreakpointChange={onBreakpointChange}\n                        >\n                            {items?.map( (el, key) => createElement(el, key))}\n                        </ReactGridLayout>\n                    </div>\n                </CCardBody> }\n            </CCard>\n          </CCol>\n        </CRow>\n      </>\n  )\n}\n\nexport default Dashboard\n","import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport addHighchartsMore from \"highcharts/highcharts-more\";\nimport addVariwideModule from \"highcharts/modules/variwide\";\nimport {\n  Chart,\n  LineSeries,\n  HighchartsChart,\n  VariwideSeries,\n  withHighcharts,\n  XAxis,\n  ColumnSeries,\n  SplineSeries,\n  YAxis,\n  Legend,\n  Title,\n  PieSeries, BarSeries\n} from \"react-jsx-highcharts\";\n\nimport ReactResizeDetector from \"react-resize-detector\";\nimport styled from \"styled-components\";\nrequire(\"highcharts/modules/exporting\")(Highcharts);\n\nexport const StyledMyChart = styled.div`\n  position: relative;\n  overflow: hidden; // hide the overflowing parts of the chart during resize\n\n  .chart-container {\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n  }\n`;\nconst pieData = [\n  0.2,\n  0.8,\n  0.8,\n  0.8,\n  1,\n  1.3,\n  1.5,\n  2.9,\n  1.9,\n  2.6,\n  1.6,\n  3,\n  4,\n  3.6,\n  4.5,\n  4.2,\n  4.5,\n  4.5,\n  4,\n  3.1,\n  2.7,\n  4,\n  2.7,\n  2.3,\n  2.3,\n  4.1,\n  7.7,\n  7.1,\n  5.6,\n  6.1,\n  5.8,\n  8.6,\n  7.2,\n  9,\n  10.9,\n  11.5,\n  11.6,\n  11.1,\n  12,\n  12.3,\n  10.7,\n  9.4,\n  9.8,\n  9.6,\n  9.8,\n  9.5,\n  8.5,\n  7.4,\n  7.6\n];\n\naddHighchartsMore(Highcharts);\naddVariwideModule(Highcharts);\n\nclass MyChart extends Component {\n  state = {\n    height: 200,\n    width: 0\n  };\n\n  onResizeChart = (width, height) => {\n    console.log(`chart size: ${width}x${height}`);\n    this.setState({ width: Math.floor(width), height: Math.floor(height) });\n  };\n\n  render() {\n    const data =  this.props.data\n    const workflowMasterName =  this.props.workflowMasterName\n    var categories = []\n    data.map(value =>{\n      categories.push(value.name)\n    })\n\n    return (\n      <StyledMyChart>\n        <div className=\"chart-container\">\n          <HighchartsChart>\n            <Chart\n              height={this.state.height}\n              width={this.state.width}\n              backgroundColor={\"transparent\"}\n            />\n            <Title>{workflowMasterName}</Title>\n\n            <Legend />\n            <YAxis>\n              {/*} <VariwideSeries\n                data={[\n                  {\n                    x: 0,\n                    y: 50,\n                    z: 5,\n                    name: \"test 1\",\n                    color: \"rgba(0,0,255,0.4)\"\n                  },\n                  {\n                    x: 5,\n                    y: 40,\n                    z: 10,\n                    name: \"test 2\",\n                    color: \"rgba(0,0,255,0.5)\"\n                  },\n                  {\n                    x: 15,\n                    y: 30,\n                    z: 10,\n                    name: \"test 3\",\n                    color: \"rgba(0,0,255,0.6)\"\n                  },\n                  {\n                    x: 25,\n                    y: 60,\n                    z: 5,\n                    name: \"test 4\",\n                    color: \"rgba(0,0,255,0.7)\"\n                  }\n                ]}\n              /> */}\n              {/*}  <ColumnSeries name=\"Jane\" data={[3, 2, 1, 3, 4]} />\n      <ColumnSeries name=\"John\" data={[2, 3, 5, 7, 6]} />\n      <ColumnSeries name=\"Joe\" data={[4, 3, 3, 9, 0]} />\n            */}\n              {data.map(value =>{\n                return ( <LineSeries name={value.name} data={value.data}  />)\n              })}\n              {/*<LineSeries name=\"Total consumption\" data={pieData} />*/}\n            </YAxis>\n            <XAxis />\n          </HighchartsChart>\n\n          <ReactResizeDetector\n            handleWidth\n            handleHeight\n            onResize={this.onResizeChart}\n          />\n        </div>\n      </StyledMyChart>\n    );\n  }\n}\n\nexport default withHighcharts(MyChart, Highcharts);\n"],"sourceRoot":""}