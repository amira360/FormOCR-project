{"version":3,"sources":["views/Administration/masterBuilder/IndexView.js","../node_modules/@material-ui/icons/esm/Add.js"],"names":["IndexView","props","useState","showLeafIcon","showLine","setSelectedMenu","expandedKeys","setExpandedKeys","checkedKeys","setCheckedKeys","selectedKeys","setSelectedKeys","autoExpandParent","setAutoExpandParent","showIcon","masterKey","setMasterKey","setMenuLevel","React","JSON","parse","localStorage","getItem","domainName","menu","setMenu","onSelect","selectedKeysValue","info","console","log","node","sub_menu_id","menu_id","masters_submenu_id","key","indexOf","substr","length","useHistory","useEffect","masters_tab","menu_data","method","headers","fetch","MASTER_MENU_SERVICE","then","response","Promise","resolve","reject","text","body","catch","err","masters_data","masters_menu","masters_item","map","masters_val","title","name","id","push","_tag","to","masters_child","_children","sub_masters_tab","sub_masters_item","child","children","MENU_SERVICE","data","tab","navTab","navItem","filter","d","nav","childNavTab","childNavItem","checkable","onExpand","expandedKeysValue","onCheck","checkedKeysValue","treeData","defaultExpandedKeys","onClick","alert","color","className","active","tabIndex","style","textAlign","createSvgIcon"],"mappings":"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","file":"static/js/87.262db0eb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Tree, Switch } from 'antd';\nimport { CarryOutOutlined, FormOutlined } from '@ant-design/icons';\nimport {SERVER_URL, MASTER_MENU_SERVICE, IMS_MENU_SERVICE, MENU_SERVICE} from \"../../../constants\";\nimport CIcon from \"@coreui/icons-react\";\nimport {useHistory} from \"react-router-dom\";\nimport {CButton, CCardHeader, CCol, CRow, CCardBody, CCard, CCardFooter} from \"@coreui/react\";\nimport {Add} from \"@material-ui/icons\";\n\nconst IndexView = (props) => {\n    const [showLine, setShowLine] = useState({\n        showLeafIcon: false,\n    });\n  const [selectedMenu, setSelectedMenu] = useState({})\n  const [expandedKeys, setExpandedKeys] = useState(['3','3-17']);\n  const [checkedKeys, setCheckedKeys] = useState([]);\n  const [selectedKeys, setSelectedKeys] = useState([]);\n  const [autoExpandParent, setAutoExpandParent] = useState(true);\n\n  const [showIcon, setShowIcon] = useState(true);\n  const [masterKey, setMasterKey] = useState(null);\n  const [menuLevel, setMenuLevel] = useState(null);\n  const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n\n  const [menu, setMenu] = React.useState([]);\n\n const onExpand = (expandedKeysValue) => {\n    console.log('onExpand', expandedKeysValue); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n    // or, you can remove all expanded children keys.\n\n    setExpandedKeys(expandedKeysValue);\n    setAutoExpandParent(false);\n  };\n\n  const onCheck = (checkedKeysValue) => {\n    console.log('onCheck', checkedKeysValue);\n    setCheckedKeys(checkedKeysValue);\n  };\n\n\n   const onSelect = (selectedKeysValue, info) => {\n          console.log('selected', selectedKeysValue, info);\n          setSelectedMenu(info.node);\n          setSelectedKeys(selectedKeysValue);\n          var master_selected_key = 0;\n          var sub_menu_id = '';\n          var menu_id = '';\n          var masters_submenu_id = '';\n          var ims_submenu_id = '';\n          var key = info.node.key;\n          if(key.indexOf(\"-\") !== -1){\n              menu_id = key.substr(0, key.indexOf(\"-\"));\n              console.log(menu_id)\n              key = key.substr(key.indexOf(\"-\")+1,key.length-1)\n              /*if(menu_id === \"3\"){\n                  if(key.indexOf(\"-\") !== -1){\n                      const sub_menu_id = key.substr(0, key.indexOf(\"-\"));\n                      key = key.substr(key.indexOf(\"-\")+1, key.length-1)\n                      console.log(sub_menu_id)\n                      if(key.indexOf(\"-\") !== -1){\n                          ims_submenu_id = key.substr(0, key.indexOf(\"-\"));\n                          console.log(ims_submenu_id)\n                          key = key.substr(key.indexOf(\"-\")+1, key.length-1)\n                          console.log(\"master sub menu \")\n                          master_selected_key = master_submenu_id\n                          setMasterKey(master_selected_key)\n                         // setMenuLevel(\"IMSSubmenu\")\n                      }else{\n                          master_submenu_id = key\n                          console.log(master_submenu_id)\n                          console.log(\"master menu\")\n                          master_selected_key = master_submenu_id\n                          setMasterKey(master_selected_key)\n                          setMenuLevel(\"MasterMenu\")\n                      }\n                  }else{\n                      sub_menu_id = key\n                      console.log(sub_menu_id)\n                      console.log(\"sub menu  \")\n                      master_selected_key = sub_menu_id\n                      setMasterKey(master_selected_key)\n                      setMenuLevel(\"Submenu\")\n\n                  }\n              }else*/ if (menu_id === \"4\"){\n                  if(key.indexOf(\"-\") !== -1){\n                      sub_menu_id = key.substr(0, key.indexOf(\"-\"));\n                      console.log(sub_menu_id)\n                      key = key.substr(key.indexOf(\"-\")+1,key.length-1)\n                      if(key.indexOf(\"-\") !== -1){\n                          masters_submenu_id = key.substr(0, key.indexOf(\"-\"));\n                          console.log(masters_submenu_id)\n                          key = key.substr(key.indexOf(\"-\")+1,key.length-1)\n                          console.log(\"masters sub menu \")\n                          master_selected_key = masters_submenu_id\n                          setMasterKey(master_selected_key)\n                         // setMenuLevel(\"MastersSubmenu\")\n                      }else{\n                          masters_submenu_id = key\n                          console.log(masters_submenu_id)\n                          console.log(\"masters menu\")\n                          master_selected_key = masters_submenu_id\n                          setMasterKey(master_selected_key)\n                          //setMenuLevel(\"MastersMenu\")\n\n                      }\n                  }else{\n                      sub_menu_id = key;\n                      console.log(sub_menu_id)\n                      console.log(\"sub menu qms masters\")\n                      master_selected_key = sub_menu_id\n                      setMasterKey(master_selected_key)\n                      //setMenuLevel(\"Submenu\")\n\n                  }\n              }else{\n                  sub_menu_id = key;\n                  console.log(sub_menu_id)\n                  console.log(\"sub menu other than ims qnd masters \")\n                  master_selected_key = sub_menu_id\n                  setMasterKey(master_selected_key)\n                 // setMenuLevel(\"IMSSubmenu\")\n\n              }\n          }else{\n              menu_id = key\n              console.log(menu_id)\n              console.log(\"menu \")\n              master_selected_key = menu_id\n              setMasterKey(master_selected_key)\n              setMenuLevel(\"Menu\")\n          }\n\n      };\n\n    const history = useHistory()\n    useEffect(()=>{\n        /*  const token = getLocalToken();\n          console.log(token)\n          if(token === 'undefined'){\n            history.push(\"/domain\");\n          }*/\n        var masters_tab = [];\n\n        const menu_data = {\n            method: 'GET',\n            headers: {\n                \"X-Tenant\": domainName,\n                'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n            }\n        };\n        fetch(MASTER_MENU_SERVICE + '/api/menu/auth/allMastersMenu', menu_data)\n            .then(response => {\n                    return new Promise((resolve, reject) => {\n                        response.text().then(body => {\n                            resolve(\n                                body.length ? JSON.parse(body) : null\n                            );\n                        }).catch(err => {\n                            reject(err);\n                        });\n                    });\n                }\n                //     console.log(response.json())\n                //  console.log(response)\n            )\n            .then(masters_data => {\n                const masters_menu = JSON.parse(masters_data.menu);\n                var masters_item = {};\n\n                masters_menu.map(masters_val => {\n                    masters_item.title = masters_val.name;\n                    masters_item.key = \"4-18-\"+masters_val.id;\n                  //  masters_item.icon = <CIcon name={masters_val.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                    masters_tab.push(masters_item);\n                    masters_item = {};\n\n                 if(masters_val._tag === \"CSidebarNavItem\"){\n                            masters_item.to = masters_val.to;\n                            masters_tab.push(masters_item);\n                            masters_item = {};\n                        }else{\n                            const masters_child = masters_val._children;\n                            var sub_masters_tab = []\n                            var sub_masters_item = {}\n                            masters_child.map(child =>{\n                                sub_masters_item.title = child.name;\n                                sub_masters_item.key = \"-18-\"+masters_val.id+\"-\"+child.id;\n                                //sub_masters_item.icon = <CIcon name={child.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                                sub_masters_item.to = child.to\n                                sub_masters_tab.push(sub_masters_item)\n                                sub_masters_item = {}\n                            })\n                            masters_item.children = sub_masters_item\n                        }\n                        masters_tab.push(masters_item);\n                        masters_item = {};\n})\n                // console.log(childNavItem)\n            })\n        fetch(MENU_SERVICE + '/api/menu/auth/allMenu', menu_data)\n            .then(response => {\n                    return new Promise((resolve, reject) => {\n                        response.text().then(body => {\n                            resolve(\n                                body.length ? JSON.parse(body) : null\n                            );\n                        }).catch(err => {\n                            reject(err);\n                        });\n                    });\n                }\n                //     console.log(response.json())\n                //  console.log(response)\n            )\n            .then(data => {\n                // alert(data)\n                var tab = JSON.parse(data.menu);\n                var navTab = [];\n                var navItem ={};\n\n                var newTab = tab.filter(d => d.name === \"Masters\")\n                newTab.map(nav =>{\n                    navItem.key = nav.id;\n                    navItem.title = nav.name;\n                  //  navItem.icon = <CIcon name={nav.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                    if(nav._tag !== \"CSidebarNavItem\"){\n                        const children = nav._children;\n                        var childNavTab = [];\n                        var childNavItem ={};\n                        children.map(child =>{\n                            childNavItem.key = nav.id+child.id;\n                            childNavItem.title = child.name;\n                          //  childNavItem.icon = <CIcon name={child.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                            if(child._tag === \"CSidebarNavItem\"){\n                                //  childNavItem.to = child.to;\n                                childNavTab.push(childNavItem)\n                                childNavItem = {};\n                            }else {\n\n                                if (nav.name === \"Masters\" && child.name === \"QMS\") {\n                                    childNavItem.children = masters_tab;\n                                }\n                                childNavTab.push(childNavItem)\n                                childNavItem = {};\n                            }\n                        })\n                        navItem.children = childNavTab;\n                    }\n                    navTab.push(navItem)\n                    navItem = {};\n                })\n                //console.log(navTab)\n                // menu = navTab;\n                setMenu(navTab)\n                console.log(navTab)\n            })\n    },[])\n\nconst treeData = [\n  {\n    title: '0-0',\n    key: '0-0',\n    children: [\n      {\n        title: '0-0-0',\n        key: '0-0-0',\n        children: [\n          {\n            title: '0-0-0-0',\n            key: '0-0-0-0',\n          },\n          {\n            title: '0-0-0-1',\n            key: '0-0-0-1',\n          },\n          {\n            title: '0-0-0-2',\n            key: '0-0-0-2',\n          },\n        ],\n      },\n      {\n        title: '0-0-1',\n        key: '0-0-1',\n        children: [\n          {\n            title: '0-0-1-0',\n            key: '0-0-1-0',\n          },\n          {\n            title: '0-0-1-1',\n            key: '0-0-1-1',\n          },\n          {\n            title: '0-0-1-2',\n            key: '0-0-1-2',\n          },\n        ],\n      },\n      {\n        title: '0-0-2',\n        key: '0-0-2',\n      },\n    ],\n  },\n  {\n    title: '0-1',\n    key: '0-1',\n    children: [\n      {\n        title: '0-1-0-0',\n        key: '0-1-0-0',\n      },\n      {\n        title: '0-1-0-1',\n        key: '0-1-0-1',\n      },\n      {\n        title: '0-1-0-2',\n        key: '0-1-0-2',\n      },\n    ],\n  },\n  {\n    title: '0-2',\n    key: '0-2',\n  },\n];\n\n const handleSubmit = ()=>{\n        console.log(masterKey)\n        alert(masterKey)\n      /*  console.log(menuLevel)\n        const masterId = props.match.params.masterId;\n        const master_data = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n            body: JSON.stringify({id : masterId})\n        };\n        fetch(SERVER_URL + '/api/master/getByMasterId',master_data)\n            .then(response => {\n                return new Promise((resolve, reject) => {\n                    response.text().then(body => {\n                        resolve(\n                            body.length ? JSON.parse(body) : null\n                        );\n                    }).catch(err => {\n                        reject(err);\n                    });\n                });\n            })\n            .then(data => {\n            console.log(data)\n            const master_data = JSON.parse(data.master)\n                var menu_object = {name : master_data.name, _tag: 'CSidebarNavItem',\n                    icon: 'cil-border-all',\n                    to: '/master/'+master_data.id, mastersqmsmenuid: masterKey, menuLevel: menuLevel }\n                const menu_data = {\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/json',\n                        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n                    body: JSON.stringify(menu_object)\n                };\n                fetch(SERVER_URL + '/api/masterSubMenu/addMenu',menu_data)\n                    .then(response => {\n                        return new Promise((resolve, reject) => {\n                            response.text().then(body => {\n                                console.log(body)\n                                resolve(\n                                    body.length ? JSON.parse(body) : null\n                                );\n                            }).catch(err => {\n                                reject(err);\n                            });\n                        });\n                    })\n                    .then(data =>{\n\n                        if(data.insertId === \"\"){\n                            alert(\"please select a repository\")\n\n                        }else{\n                            props.history.push(\"/admin/master/list\");\n                           // props.history.push(\"/workflow\")\n                        }\n                    })\n            })*/\n    }\n\n    return (\n        <div>\n          <div>\n<Tree\n      checkable\n      onExpand={onExpand}\n      expandedKeys={expandedKeys}\n      autoExpandParent={autoExpandParent}\n      onCheck={onCheck}\n      checkedKeys={checkedKeys}\n      onSelect={onSelect}\n      selectedKeys={selectedKeys}\n      treeData={menu}\n    />\n    <Tree\n                    showLine={showLine}\n                    showIcon={showIcon}\n                    defaultExpandedKeys={['3','3-17']}\n                    onSelect={onSelect}\n                    treeData={menu}\n                />\n        </div>\n         <CCardFooter>\n                            <CButton onClick={()=> handleSubmit()}  color=\"success\" className=\"mt-3 -item-right\" active tabIndex={-1} style={{textAlign: \"right\"}}><Add/>Submit</CButton>\n                        </CCardFooter>\n                        </div>\n    );\n};\nexport default IndexView;\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');"],"sourceRoot":""}