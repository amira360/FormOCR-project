{"version":3,"sources":["views/Administration/masterBuilder/EditMaster.js","../node_modules/@material-ui/icons/esm/Save.js","../node_modules/@material-ui/icons/esm/Cancel.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","marginLeft","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","withStyles","withTheme","props","React","useState","masterId","setMasterId","JSON","parse","localStorage","getItem","domainId","components","setComponents","userRoles","setUserRoles","masterData","setMasterData","master","setMaster","masterCode","setMasterCode","masterName","setMasterName","disableAddNewButton","setDisableAddNewButton","rolesAdmin","setRolesAdmin","rolesUser","setRolesUser","domainName","useEffect","roles_data","method","headers","match","params","rolesFromApi","fetch","USER_SERVICE","then","response","json","data","console","log","map","role","push","value","roleName","label","id","roleId","master_data","body","stringify","MASTER_SERVICE","Promise","resolve","reject","text","length","catch","err","master_user_role","user_roles","master_admin_role","admin_roles","name","code","tab_admin","tab_user","selected_role","role_val","filter","error","xs","sm","noValidate","row","className","htmlFor","sno","disabled","onChange","e","target","md","placeholder","options","isMulti","variant","inline","style","marginBottom","custom","backgroundColor","form","schema","col","xl","block","color","onClick","event","preventDefault","master_post","history","createSvgIcon","d"],"mappings":"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","file":"static/js/73.6986f2b2.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CFormGroup,\n  CInput, CSelect,\n  CLabel, CNavbar, CNavbarBrand, CRow, CForm, CInputGroup, CInvalidFeedback, CInputCheckbox,\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\nimport { DocsLink } from 'src/reusable'\nimport { Link } from 'react-router-dom'\nimport {FormBuilder, form} from 'react-formio';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\n\nimport 'formiojs/dist/formio.full.min';\nimport 'formiojs/dist/formio.full.min.css';\nimport {Cancel, Save} from \"@material-ui/icons\";\nimport {Chip} from \"@material-ui/core\";\nimport Select from 'react-select';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\nimport {SERVER_URL, USER_SERVICE, MASTER_SERVICE} from \"../../../constants\";\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    marginLeft: 0+'px !important',\n    minWidth: 220,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst EditMaster = (props) => {\n  const [collapsed, setCollapsed] = React.useState(true)\n  const [showElements, setShowElements] = React.useState(true)\n  const [Alert, setAlert] = React.useState('');\n  const [masterId, setMasterId] = React.useState('');\n  const [display, setDisplay] = React.useState('');\n  const [type, setType] = React.useState('form');\n  const [domainId, setDomainId] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainId);\n  const [roles, setRoles] = React.useState([]);\n  const [components, setComponents] = React.useState([]);\n  const [userRoles, setUserRoles] = React.useState([]);\n  const [adminRoles, setadminRoles] = React.useState([]);\n\n  const [masterData, setMasterData] = React.useState({});\n  const [master, setMaster] = React.useState({});\n  const [masterCode, setMasterCode] = React.useState('');\n  const [masterName, setMasterName] = React.useState('');\n  const [disableAddNewButton, setDisableAddNewButton] = React.useState('');\n  const [rolesAdmin, setRolesAdmin] = React.useState([]);\n  const [rolesUser, setRolesUser] = React.useState([]);\n  const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n  const classes = useStyles();\n\n  useEffect(()=> {\n      const roles_data = {\n          method: 'GET',\n          headers: {\n              \"X-Tenant\": domainName,\n              'Content-Type': 'application/json',\n              \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n          }\n      };\n      const  masterId = props.match.params.masterId;\n      setMasterId(masterId)\n      var rolesFromApi = [];\n     fetch(USER_SERVICE + \"/api/auth/role/getRoles\", roles_data)\n          .then((response) => {\n            return response.json();\n          })\n          .then(data => {\n            console.log(data);\n\n            data.map(role => {\n              rolesFromApi.push({\n                value : role.roleName,\n                label : role.roleName,\n                id: role.roleId\n              })})\n            setUserRoles(rolesFromApi);\n\n\n              const master_data = {\n                  method: 'POST',\n                  headers: {\n                      \"X-Tenant\": domainName,\n                      'Content-Type': 'application/json',\n                      \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n                  body: JSON.stringify({id : masterId})\n              };\n              fetch(MASTER_SERVICE + '/api/master/getByMasterId',master_data)\n                  .then(response => {\n                      return new Promise((resolve, reject) => {\n                          response.text().then(body => {\n                              resolve(\n                                  body.length ? JSON.parse(body) : null\n                              );\n                          }).catch(err => {\n                              reject(err);\n                          });\n                      });\n                  })\n                  .then(data => {\n                      console.log(data)\n                      //  setComponents(JSON.parse(data.form_json).components)\n                      const master_data = JSON.parse(data.master);\n                      const master_user_role = JSON.parse(data.user_roles);\n                      const master_admin_role = JSON.parse(data.admin_roles);\n\n                      setMasterName(master_data.name)\n                      setMasterCode(master_data.code)\n                      setMasterData(master_data)\n                      //setSelectedRoles(master_data.roles)\n                      // console.log(master_data.roles)\n                      // setSelectedRoles(form_data.roles)\n                      setMaster(JSON.parse(data.json))\n\n                      var tab_admin = []\n                      var tab_user = []\n                      console.log(master_user_role)\n                      /************** user roles **************/\n                      master_user_role.map(selected_role => {\n\n                          var role_val = rolesFromApi.filter(role => role.id === selected_role.roleId)\n                          tab_user.push(role_val[0])\n                      })\n                      console.log(tab_user)\n                      setRolesUser([...tab_user]);\n\n                      //   setRoles([...tab])\n\n                      /***************** admin role *******************/\n                      master_admin_role.map(selected_role => {\n\n                          var role_val = rolesFromApi.filter(role => role.id === selected_role.roleId)\n                          tab_admin.push(role_val[0])\n                      })\n                      console.log(tab_admin)\n                      setRolesAdmin([...tab_admin]);\n                      //    setRoles([...tab])\n                      // this.props.history.push(\"/admin/formView\");\n                  })\n                  .catch(error => {\n                      console.log(error);\n                  })\n\n          }).catch(error => {\n          console.log(error);\n        });\n\n\n  //  alert(formCode)\n\n\n  },[]);\n\n\n  const handleMasterSubmit =(event ) => {\n    event.preventDefault();\n\n    const master_data ={display:'form', components:components};\n    const master_post = {\n      method: 'POST',\n      headers: {\n        \"X-Tenant\": domainName,\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \"+localStorage.getItem('Authorization')\n      },\n      body: JSON.stringify({masterName: masterName, masterId: masterId,\n          disableAddNewButton: disableAddNewButton,\n        form:master_data, domainId: domainId, rolesAdmin:rolesAdmin, rolesUser:rolesUser})\n    };\n\n\n      fetch(MASTER_SERVICE + '/api/master/edit', master_post)\n        .then(response => {\n          console.log(response)\n          //toaser\n          props.history.push(\"/admin/master/list\");\n        })\n  }\n\n\n  const handleAdminDelete = (chipToDelete) =>{\n    console.log(chipToDelete);\n    console.log(rolesAdmin);\n    console.log(rolesAdmin.filter((chip) => chip !== chipToDelete))\n    const data = rolesAdmin.filter((chip) => chip !== chipToDelete);\n    setRolesAdmin(data);\n  };\n  const handleUserDelete = (chipToDelete) =>{\n    console.log(chipToDelete);\n    console.log(rolesUser);\n    console.log(rolesUser.filter((chip) => chip !== chipToDelete))\n    const data = rolesUser.filter((chip) => chip !== chipToDelete);\n    setRolesUser(data);\n  };\n  let icon;\n  return (\n    <>\n      <CCol xs=\"12\" sm=\"12\">\n        <CCard>\n          <CCardHeader>\n            <h4>Edit  -  {masterData.name}</h4>\n          </CCardHeader>\n          <CCardBody>\n\n            <CForm  noValidate>\n              <CFormGroup row className=\"my-0\">\n                <CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"SNo\">S No</CLabel>\n                    <CInput id=\"SNo\" /*onChange={e => setFormId(e.target.value)}*/\n                              value={masterData.sno} disabled />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"masterName\">Nom du maître</CLabel>\n                    <CInput id=\"masterName\" onChange={e => setMasterName(e.target.value) }\n                            value={masterName}  />\n                  </CFormGroup>\n                </CCol>\n\n              </CFormGroup>\n              <CFormGroup row className=\"my-0\">\n                  <CCol sm={12} md={6}>\n                      <CFormGroup>\n                          <CLabel htmlFor=\"masterCode\">Code du maître</CLabel>\n                          <CInput id=\"masterCode\" value={masterCode} disabled\n                          />\n\n                      </CFormGroup>\n                  </CCol>\n                <CCol sm={12} md={6}>\n                                       <CFormGroup>\n                                        <CLabel htmlFor=\"AccessControlAdmin\">Contrôle d'accès (Admin)</CLabel>\n                                         <Select\n                                           name=\"form-field-name2\"\n                                           placeholder=\"Global\"\n                                           value={rolesAdmin}\n                                           options={userRoles}\n                                           onChange={setRolesAdmin}\n                                           isMulti\n                                         />\n                                     </CFormGroup>\n                                  </CCol>\n                <CCol sm={12} md={6}>\n                                      <CFormGroup>\n                                          <CLabel htmlFor=\"AccessControlUser\">Contrôle d'accès (Utilisateur)</CLabel>\n                                          <Select\n                                            name=\"form-field-name2\"\n                                            placeholder=\"Global\"\n                                            value={rolesUser}\n                                            options={userRoles}\n                                            onChange={setRolesUser}\n                                            isMulti\n                                          />\n                                    </CFormGroup>\n                                  </CCol>\n              </CFormGroup>\n              <CFormGroup row className=\"my-0\">\n                <CCol xs=\"12\">\n                  <CFormGroup variant=\"custom-checkbox\" inline style={{marginBottom:\"20px\"}}>\n                    <CInputCheckbox custom id=\"inline-checkbox2\" name=\"inline-checkbox2\"  onChange={e => setDisableAddNewButton(e.target.value) }\n                                                                                                                     value={disableAddNewButton} />\n                    <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox2\">Désactiver bouton Ajouter un nouveau</CLabel>\n                  </CFormGroup>\n                </CCol>\n              </CFormGroup>\n<CCard>\n                   <CCardHeader style={{backgroundColor:\"#F5F5F5\"}}>\n                                  Générateur de maître\n                               </CCardHeader>\n\n                              <CCardBody>\n                              <FormBuilder form={master} onChange={(schema) => { setComponents(schema.components)}}/>\n                              </CCardBody>\n\n                                </CCard>\n                                 <CRow xs=\"4\">\n\n                                                    <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\n                                                      <CButton block variant=\"outline\" color=\"info\" id=\"formSave\" onClick={handleMasterSubmit}><Save/> Enregister</CButton>\n                                                    </CCol>\n                                                    <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\n                                                      <CButton block variant=\"outline\" color=\"danger\" onClick={()=> props.history.push(\"/admin/master/list\")}><Cancel />Annuler</CButton>\n                                                    </CCol>\n\n                                                    </CRow>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </>\n  )\n}\nexport default withStyles({ ...useStyles}, { withTheme: true })(EditMaster) ;\n\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');"],"sourceRoot":""}