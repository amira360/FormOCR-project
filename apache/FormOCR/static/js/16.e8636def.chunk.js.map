{"version":3,"sources":["assets/form/submitForm.bpmn.jsx","views/IMS/QMS/process/DefaultPrint.js","views/IMS/QMS/process/History.js","views/IMS/QMS/Execute.js","views/IMS/QMS/CreateNewInstance.js","routes.js","views/notification/UserNotification.js","views/notification/GroupNotification.js","containers/TheContent.js","containers/TheFooter.js","assets/img/ISCT-Group.png","containers/TheHeader.js","containers/TheHeaderDropdownNotif.js","containers/TheHeaderDropdownTasks.js","assets/jss/material-dashboard-pro-react.js","containers/_nav.js","containers/TheSidebar.js","containers/TheLayout.js","containers/TheHeaderDropdown.js","views/Administration/masterBuilder/MenuMapping/AllMenu.js","reusable/DocsLink.js","views/Administration/users/img/user.png"],"names":["submitForm","addHighchartsMore","Highcharts","addVariwideModule","DefaultPrint","props","state","height","width","printPage","bind","createFieldsNamesTree","console","log","localStorage","getItem","userData","domainName","JSON","parse","workflowMasterId","processInstanceId","formIds","nodeDataTable","processKey","historics","formDataHistoric","formsData","chartFig","chartOptions","series","data","chart","type","xAxis","labels","useHTML","formatter","name","y","color","workflowMaster_id","user_data","method","headers","username_data","fetch","USER_SERVICE","then","response","Promise","resolve","reject","text","body","length","catch","err","setState","user","error","setItem","process_data","stringify","PROCESS_SERVICE","historicVariableInstances","historicTaskInstances","processDefinitionKey","taskForms","ids","formDataHistorics","map","instance_data","value","push","formCode","variableName","nodeDataTab","forms_json","formVal","index","undefined","nodeData","components","isSub","lev","children","component","level0","label","title","id","fieldKey","key","datagridComp","level1","columns","col","sub_comp","level3","datagridComps","level4","comp","level5","level6","e","pdf1","input","document","getElementById","html2canvas","useCORS","canvas","imgHeight","imgData","toDataURL","pdf","jsPDF","addImage","output","style","display","src","verif_dataGrid","workflowMasterName","currentdate","Date","toLocaleString","className","minHeight","this","firstName","lastName","formData","i","panelData","textAlign","backgroundColor","scope","colSpan","elem","val","Array","isArray","child","count","childVal","step","position","right","Component","HistoricProcess","makeStyles","theme","formControl","margin","spacing","marginLeft","minWidth","maxWidth","chips","flexWrap","chip","noLabel","marginTop","menu","useRef","React","useState","setFormIds","setFormDataHistoric","setProcessKey","setProcessInstanceId","setData","setHistorics","forms","setForms","setComponentsData","displayMaximizable","setDisplayMaximizable","setPosition","setWorkflowMasterId","visible","setVisible","items","icon","command","onClick","window","print","dialogFuncMap","onHide","useEffect","match","params","taskForm","toUpperCase","form_data","formCodes","FORM_SERVICE","forms_data","tab","isVisible","model","popup","ref","paddingLeft","paddingRight","size","event","current","toggle","mode","form","options","readOnly","submission","maximizable","modal","footer","heightLeft","doc","addPage","autoFocus","Execute","showSuccess","username","formName","historicFormsIds","submitFormFields","accessControl","formId","editabeFormsIds","formFields","user_roles","roles","role","newComponents","HistoricFormsData","formKey","autoriteDapprobation","statutApprouve","commentaireDeLapprivoiseur","domainId","taskId","handleFormSubmit","toast","show","severity","summary","detail","life","process_data1","historic","form_historic_tab","historic_obj","Object","keys","validationConstraints","array_taskForms","idsTab","item","validationTab","array_contraints","validation_verif_tab","constraint","filter","code","editableforms","validation","getFormsByFormCodes","alert","target","l","selected","dataVal","list","componentsData","localData","onChange","formsDataVal","formDataValues","data_val","is_complete","history","chipToDelete","el","counter","onSubmit","NewInstance","codesTab","formField","find","includes","formFunction","FormList","lazy","CreateForm","CreateNotification","EditNotification","NotificationList","WorkflowList","WorkflowMasterList","CreateWorkflow","EditWorkflow","CreateWorkflowMaster","NotificationSettings","Dashboard","DashboardList","EditDashboard","CreateDashboard","CreateNorm","EditNorm","ViewNorm","NormList","EditSubscription","ViewSubscription","SubscriptionRequests","SubscriptionOrganization","EditForm","PreviewForm","Instances","WorkflowMenuMapping","CreateMaster","EditMaster","PreviewMaster","MasterList","TreeExample","Menu","Demo","MasterMapping","IndexView","WorkflowMasterIndexViews","MasterView","addNewMasterInstance","MasterInstancesList","ReportView","DemoCheckbox","AdvancedTables","AllMenu","DomainPage","RegisterPage","PrintList","CreatePrint","EditPrint","CreateScript","EditScript","ScriptList","UserList","CreateUser","EditUser","ViewUser","ChangePassword","EditProfile","ViewProfile","EditCompanyProfile","ViewCompanyProfile","UserOrgChart","RoleList","CreateRole","EditRole","ViewRole","Calendar","routes","path","exact","CreateNewInstance","setUserTask","setTaskId","setProcessDefinitionKey","setWorkflowMasterName","taskName","setTaskName","textField","setTextField","useParams","textFields","get_header","xs","fontSize","completeTask","setGroupTask","Alert","preventDefault","task_data","loading","TheContent","onLoad","fluid","fallback","route","idx","render","from","to","memo","TheFooter","fixed","withRouter","useHistory","token","getLocalToken","setDomainName","clear","fetchData","a","socket","socketIOClient","ENDPOINT","reconnect","status","emit","group_tasks","group_historic","user_historic","groupProcessDefinitionKeys","groupProcessInstanceIds","user_tasks","userProcessDefinitionKeys","userProcessInstanceIds","refreshToken","dispatch","useDispatch","sidebarShow","useSelector","withSubheader","inHeader","Image","TheHeaderDropdown","expiration_date","expiration_year","Number","substr","expiration_month","expiration_day","today_year","getFullYear","today_month","month","today_day","day","fontWeight","href","alt","demoExpiration","TheHeaderDropdownNotif","setUserTasks","setGroupProcessDefinitionKeys","setUserProcessDefinitionKeys","processInstanceIds","setProcessInstanceIds","groupTasks","setGroupTasks","fieldsValuesList","setFieldsValuesList","setTextValue","on","message","tasks","allFields","tasks_list_text","task","fieldValuesList","fieldList","field","verif_field","text_values","aux","processDefinitionsKeys","processInstances","itemsCount","inNav","caret","Group","shape","placement","header","tag","small","Edit","TheHeaderDropdownTasks","userTasks","user_process_definintionKeys","hexToRgb","replace","test","Error","first","second","last","parseInt","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","blackColor","whiteColor","primaryBoxShadow","boxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","background","paddingTop","borderTop","fontFamily","lineHeight","textDecoration","marginBottom","TheSidebar","setMenu","workflowMasterAdded","image","setImage","getAllMenu","domain_name","MENU_SERVICE","ims","menu_ims","ims_menu","ims_sub_menu","submenu","ims_item","ims_val","_tag","customClasses","childNavTab","childNavItem","_children","ims_tab","masters_menu","menu_master","masters_submenu","masters_item","masters_val","childrenMaster","childMasterNavTab","childMasterNavItem","masters_tab","navTab","navItem","permissions","permissionTab","rolePermissions","permission","nav","img","domain_image","onShowChange","whiteSpace","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","TheLayout","setUsername","userImage","setUserImage","header_data","json","photo","direction","global","menu_data","DocsLink","rest","rel"],"mappings":"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","file":"static/js/16.e8636def.chunk.js","sourcesContent":["export const submitForm = `{\n               \"components\":  [\n                 { \"type\": \"button\",\n                \"theme\": \"primary\",\n                \"disableOnInvalid\": true,\n                \"action\": \"submit\",\n                \"block\": false,\n                \"rightIcon\": \"\",\n                \"leftIcon\": \"\",\n                \"size\": \"md\",\n                \"key\": \"submit\",\n                \"tableView\": false,\n                \"label\": \"soumettre\",\n                \"input\": true,\n                \"autofocus\": false,\n                \"tags\": [\n                ],\n                \"conditional\": {\n                \"show\": \"\",\n                \"when\": null,\n                \"eq\": \"\"\n                },\n                \"properties\": {\n                }\n                }],\n               \"display\": \"form\"\n               }`;","import React, {Component, PropTypes, useEffect} from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\n//import Pie from \"./Pie.js\";\nimport Highcharts from \"highcharts/highcharts.src.js\";\nimport addHighchartsMore from \"highcharts/highcharts-more\";\nimport addVariwideModule from \"highcharts/modules/variwide\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CFormGroup,\n  CInput, CSelect,\n  CLabel, CNavbar, CNavbarBrand, CRow, CForm, CInputGroup, CInvalidFeedback, CLink\n} from '@coreui/react'\nimport {SERVER_URL, USER_SERVICE, PROCESS_SERVICE} from \"../../../../constants\";\n\naddHighchartsMore(Highcharts);\naddVariwideModule(Highcharts);\n\nclass DefaultPrint extends Component {\n  constructor(props) {\n    super(props);\n\n    //   pdf.addImage(Logo, \"PNG\", 0, 0, \"300px\", \"300px\");\n   // forms.map((formData, index) =>}\n    this.printPage = this.printPage.bind(this);\n    this.createFieldsNamesTree = this.createFieldsNamesTree.bind(this);\n\n    // this.getLineFromData =  this.getLineFromData.bind(this);\n    console.log(localStorage.getItem(\"processHistory\"))\n    this.state = {\n      userData:{},\n      domainName : JSON.parse(localStorage.getItem(\"domain_data\")).domainName,\n      workflowMasterId: '',\n      processInstanceId: '',\n      formIds: [],\n      nodeDataTable:[],\n      processKey: '',\n      historics:[],\n      formDataHistoric: [],\n      formsData: localStorage.getItem(\"processHistory\"),\n      chartFig: null,\n      chartOptions: {\n        series: [\n          {\n            data: [1, 2, 3]\n          }\n        ],\n        chart: {\n          height: 400,\n          type: \"column\"\n        },\n        xAxis: {\n          labels: {\n            useHTML: true,\n            formatter: function () {\n              return \"\";\n            }\n          }\n        }\n      },\n      series: [\n        {\n          name: \"Gases\",\n          data: [\n            {\n              name: \"Argon\",\n              y: 0.9,\n              color: \"#3498db\"\n            },\n            {\n              name: \"Nitrogen\",\n              y: 78.1,\n              color: \"#9b59b6\"\n            },\n            {\n              name: \"Oxygen\",\n              y: 20.9,\n              color: \"#2ecc71\"\n            },\n            {\n              name: \"Trace Gases\",\n              y: 0.1,\n              color: \"#f1c40f\"\n            }\n          ]\n        }\n      ]\n    }\n      const processInstanceId = props.processInstanceId;\n      const workflowMaster_id = props.workflowMasterId;\n    const user_data = {\n      method: 'GET',\n      headers: {\n        \"X-Tenant\": this.state.domainName,\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n    };\n    const username_data = localStorage.getItem(\"username\");\n    fetch(USER_SERVICE +'/api/auth/user/getUserByUsername/'+username_data, user_data)\n        .then(response =>{\n          return new Promise((resolve, reject) => {\n            response.text().then(body => {\n              resolve(\n                  body.length ? JSON.parse(body) : null\n              );\n            }).catch(err => {\n              reject(err);\n            });\n          });\n        })\n        .then(data=>{\n          this.setState({userData : JSON.parse(data.user)})\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      this.setState({workflowMasterId: workflowMaster_id})\n      console.log(processInstanceId)\n      console.log(workflowMaster_id)\n      this.setState({processInstanceId: processInstanceId})\n      //  this.setState({processKey: processKey})\n      const username = localStorage.getItem(\"username\");\n      localStorage.setItem(\"processInstanceId\",processInstanceId)\n      const process_data = {\n        method: 'POST',\n        headers: {\n          \"X-Tenant\": this.state.domainName,\n          'Content-Type': 'application/json',\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n        body: JSON.stringify({processInstanceId: processInstanceId})\n      };\n      fetch(PROCESS_SERVICE +\"/api/process/auth/historic\", process_data)\n          .then(response => {\n            return new Promise((resolve, reject) => {\n              response.text().then(body => {\n                resolve(\n                    body.length ? JSON.parse(body) : null\n                );\n              })\n                  .catch(err => {\n                    reject(err);\n                  });\n            });\n          })\n          .then(data => {\n            console.log(data)\n            console.log(JSON.parse(data.historicVariableInstances))\n            //    console.log( data.historicTaskInstances);\n            //console.log(JSON.parse(data.processDefinitionId))\n            const historicVariableInstances = JSON.parse(data.historicVariableInstances);\n            const historicTaskInstances = JSON.parse(data.historicTaskInstances);\n            this.setState({processKey: historicVariableInstances[0].processDefinitionKey})\n            this.setState({historics: historicVariableInstances});\n            var taskForms = []\n            var ids = [];\n            var formDataHistorics = []\n            historicVariableInstances.map(instance_data =>{\n              if(typeof (instance_data.value) === \"object\"){\n                ids.push({formCode: instance_data.variableName})\n\n                taskForms.push(instance_data.value)\n                /*let formCodes = []\n                formCodes = Object.keys(instance_data.value);\n                console.log(formCodes)\n                console.log(instance_data.value)\n\n                formCodes.map(id =>{\n                  ids.push({formCode: id})\n                  const taskForm = instance_data.value;\n                  taskForms.push(taskForm.[id])\n                  /!*\n                  var taskFormFields = Object.keys(taskForm)\n                  taskFormFields.map(formFieldVal =>{\n                    taskForms.push(taskForm.[formFieldVal])\n                    ids.push({formCode: formCodeVal})\n                  })*!/\n\n                })*/\n              }\n            })\n\n\n            console.log(taskForms)\n            console.log(ids)\n            var nodeDataTab = []\n            var forms_json = JSON.parse(localStorage.getItem(\"formsJson\"));\n            console.log(forms_json)\n            taskForms.map((formVal, index) =>{\n\n              if(formVal !== null && forms_json[index] !== undefined ){\n                formDataHistorics.push(formVal)\n                const nodeData = this.createFieldsNamesTree(forms_json[index].components,true, 0 )\n                nodeDataTab.push(nodeData)\n              }\n\n              /*   if(!Array.isArray(formVal.[item])){\n                     formDataHistoric.push(formVal.[item])\n                 }else{\n                     formDataHistoric.push(...formVal.[item])\n                 }*/\n            })\n            this.setState({formDataHistoric: formDataHistorics})\n\n            console.log(nodeDataTab)\n            console.log(formDataHistorics)\n            this.setState({nodeDataTable: nodeDataTab})\n            this.setState({formIds: ids })\n            console.log(ids)\n  })\n  }\n   createFieldsNamesTree (data, isSub,lev) {\n    var children = [];\n    var count = 0;\n    console.log(data)\n    data.map((component, level0) =>{\n      if (typeof(component.components) === 'object') { // Sub array found, build structure\n        //   children.push({label: component.title, key: component.key, children: createTree(component.components, true, level)})\n        if (component.type !== \"datagrid\"){\n          children.push({\n            label: component.title,\n            id: component.id,\n            fieldKey: component.key,\n            children: this.createFieldsNamesTree(component.components, true, count)\n          })\n        }else{\n          component.components.map((datagridComp, level1) => {\n            if (typeof(datagridComp.components) === 'object')  {\n              children.push({\n                label: datagridComp.label,\n                id: datagridComp.id,\n                fieldKey: datagridComp.key,\n                children: this.createFieldsNamesTree(datagridComp.components, true, count)\n              })\n            } else  if(typeof(datagridComp.columns) === 'object')\n            {\n              datagridComp.columns.map((col) =>{\n                if (typeof(col.components) === 'object') { // Sub array found, build structure\n                  col.components.map((sub_comp, level3) =>{\n                    if (typeof(sub_comp.components) === 'object') {\n                      if (sub_comp.type !== \"datagrid\"){\n                        children.push({\n                          label: sub_comp.label,\n                          id: sub_comp.id,\n                          fieldKey: sub_comp.key,\n                          children: this.createFieldsNamesTree(sub_comp.components, true, count)\n                        })\n                      }else{\n                        sub_comp.components.map((datagridComps, level4) => {\n                          if (typeof(datagridComps.components) === 'object')  {\n                            children.push({\n                              label: datagridComps.label,\n                              id: datagridComps.id,\n                              fieldKey: datagridComps.key,\n                              children: this.createFieldsNamesTree(datagridComps.components, true, count)\n                            })\n                          } else {\n                            children.push({\n                              label: datagridComps.label,\n                              id: datagridComps.id,\n                              fieldKey: datagridComps.key,\n                            })\n                          }\n                        })\n                      }\n                    } else{\n                      children.push(\n                          {label: sub_comp.label,\n                            id: sub_comp.id,\n                            fieldKey: sub_comp.key,\n                          }\n                      );\n                    }\n                  })\n                }\n              })\n            }else{\n              children.push({\n                label: datagridComp.label,\n                id: datagridComp.id,\n                fieldKey: datagridComp.key,\n              })\n            }\n          })\n        }\n      }else if (typeof(component.columns) === 'object') {\n        component.columns.map((col) =>{\n          if (typeof(col.components) === 'object') { // Sub array found, build structure\n            col.components.map((comp, level5) =>{\n              if (typeof(comp.components) === 'object') {\n                if (comp.type !== \"datagrid\"){\n                  children.push({\n                    label: comp.label,\n                    id: comp.id,\n                    fieldKey: comp.key,\n                    children: this.createFieldsNamesTree(comp.components, true, count)\n                  })\n                }else{\n                  comp.components.map((datagridComp, level6) => {\n                    if (typeof(datagridComp.components) === 'object')  {\n                      children.push({\n                        label: datagridComp.label,\n                        id: datagridComp.id,\n                        fieldKey: datagridComp.key,\n                        children: this.createFieldsNamesTree(datagridComp.components, true, count)\n                      })\n                    } else {\n                      children.push({\n                        label: datagridComp.label,\n                        id: datagridComp.id,\n                        fieldKey: datagridComp.key,\n                      })\n                    }\n                  })\n                }\n              } else{\n                children.push(\n                    {label: comp.label,\n                      id: comp.id,\n                      fieldKey: comp.key,\n                    }\n                );\n              }\n            })\n          }\n        })\n      }else { // No submenu, bottom of tree\n        children.push(\n            {label: component.label,\n              id: component.id,\n              fieldKey: component.key,\n            }\n        );\n      }\n    })\n\n    //  setExpandedKeys(keys)\n    /* console.log(keys)*/\n\n    return children;\n    //return <div className='filter-body open'>{children}</div>;\n\n  }\n  printPage(e) {\n    //  e.preventdefault();\n      var pdf1 = null;\n      const input = document.getElementById(\"divToPrint\");\n      /////setTimeout(() => input, 2000);\n      html2canvas(input, { useCORS: true }).then((canvas) => {\n        let imgWidth = 190;\n        let imgHeight = (canvas.height * imgWidth) / canvas.width + 300;\n        const imgData = canvas.toDataURL(\"img/png\");\n        const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n        pdf.addImage(imgData, \"PNG\", 10, 10, imgWidth, imgHeight);\n        //   pdf.text(\"Octonyan loves jsPDF\", 35, 25);\n        pdf1 = pdf.output(\"bloburl\");\n        // this.setState({ file: pdf1 });\n      //  document.getElementById(\"test\").src = pdf1;\n       document.getElementById(\"tab\").style.display = \"none\";\n       document.getElementById(\"test\").style.display = \"block\";\n\n       document.getElementById(\"test\").src = pdf1;\n\n        //   pdf.text(\"Octonyan loves jsPDF\", 35, 25);\n\n        //   pdf.addImage(Logo, \"PNG\", 0, 0, \"300px\", \"300px\");\n        // this.setState({ file: pdf.output(\"bloburl\") });\n\n        //  pdf.output(\"dataurlnewwindow\");\n        // pdf.save(\"download.pdf\");\n        // return pdf;\n      });\n\n  }\n\n  state = {\n    height: 200,\n    width: 200\n  };\n\n\n/*    return (\n        <tr key={elem.id}>\n          <td style={{width: \"35%\"}}>{elem.label}</td>\n          <td>{val[\"dataGrid\"]}</td>)\n\n  }\n}*/\n  render() {\n    const data = [\n      {\n        name: \"Argon\",\n        y: 0.9,\n        color: \"#3498db\"\n      },\n      {\n        name: \"Nitrogen\",\n        y: 78.1,\n        color: \"#9b59b6\"\n      },\n      {\n        name: \"Oxygen\",\n        y: 20.9,\n        color: \"#2ecc71\"\n      },\n      {\n        name: \"Trace Gases\",\n        y: 0.1,\n        color: \"#f1c40f\"\n      }\n    ];\n\n    const customLabels = [];\n    var counter = 0;\n    var countChild = 0;\n    var verif_dataGrid = true;\n    const workflowMasterName = localStorage.getItem(\"workflowMasterName\");\n    // const domainName = JSON.parse(localStorage.getItem(\"domain_data\")).domainName;\n\n    const currentdate = new Date().toLocaleString();\n    /*const currentDateTime = currentdate.getDate() + \"/\" + (currentdate.getMonth()+1)\n        + \"/\" + currentdate.getFullYear() + \" @ \"\n        + currentdate.getHours() + \":\"\n        + currentdate.getMinutes() + \":\" + currentdate.getSeconds();*/\n    // const currentDateTime = new Date().today() + \" @ \" + new Date().timeNow()\n    return (\n    <div>\n    <CCard>\n            <CCardHeader>\n              <div className=\"m-subheader\">\n                <div className=\"d-flex align-items-center\">\n                  <div className=\"mr-auto col-xs-6 \"><h4\n                    className=\"m-subheader__title m-subheader__title--separator\"><span className=\"ng-tns-c2-0\">{workflowMasterName} </span>\n                  </h4>\n\n                  </div>\n                  <div className=\"card-header-actions\">\n                                                                         {/*  <CLink\n                                                                              style={{color: \"#716ACA\"}}\n                                                                              onClick={(e)=> this.printPage(e)}\n                                                                              rel=\"noreferrer noopener\"\n                                                                              target=\"_blank\"\n                                                                              className=\"c-subheader-nav-link\"\n                                                                            >\n                                                                                      <i  size=\"2xl\" className=\"pi pi-print\" onClick={(event) => console.log(event)}></i>\n\n                                                                            </CLink>*/}\n</div>\n           </div>\n           </div>\n        </CCardHeader>\n        <CCardBody style={{minHeight:\"300px\"}}>\n      <div>\n              <div\n                id=\"tab\"\n                // style={{ height: 0, overflow: \"hidden\" }}\n              >\n                <div className=\"container\" id=\"divToPrint\">\n                  <div className=\"text-center\">\n                    <div className=\"row py-3\">\n                      <div className=\"col-12 mb-3\">\n                      <h3>{this.state.domainName}</h3>\n                      </div>\n                      <div className=\"col-12 mb-3\">\n                        Téléchargé par {this.state.userData.firstName} {this.state.userData.lastName} le {currentdate}\n                      </div>\n                    </div>\n                    {/* <img src={Img} height=\"400px\" width=\"400px\" />\n\n                                <Pie />*/}\n                  </div>\n<div >\n  {this.state.nodeDataTable?.map((formData, i) =>{\n    return (\n        <div className=\"row\" >\n          {formData?.map(panelData =>{\n\n            return (\n                <table\n                    style={{ textAlign: \"left\" , width:\"100%\"}}\n                    className=\"table table-striped table-bordered\"\n                >\n                  <thead>\n                    <tr\n                        style={{\n                          backgroundColor: \"#4a7bc4\",\n                          color: \"#fff\"\n                        }}\n                    >\n                      <th scope=\"col\" colSpan=\"8\">\n                          {panelData.label}\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {\n                    panelData.children?.map(elem => {\n\n                      const val = this.state.formDataHistoric[i]\n                      console.log(elem)\n                      console.log(val)\n                      if (val[elem.fieldKey] && typeof (val[elem.fieldKey]) !== \"object\") {\n                        //  console.log(val[elem.fieldKey])\n\n                        return (<tr key={elem.id}>\n                          <td style={{width: \"35%\"}}>{elem.label}</td>\n                          <td style={{width: \"65%\"}}>{val[elem.fieldKey] !== null ? val[elem.fieldKey] : null}</td>\n                        </tr>)\n                      } else if (val[elem.fieldKey] && typeof (val[elem.fieldKey]) === \"object\" && !Array.isArray(val[elem.fieldKey])) {\n                        console.log(val[elem.fieldKey])\n                        return (<tr key={elem.id}>\n                          {elem.children.map((child, count) => {\n                            return (<td>{child.label}</td>)\n                          })}\n                          {\n                            val[elem.fieldKey].map((childVal, count) => {\n                              elem.children.map((child, count) => {\n                                return (<td>{childVal[child.fieldKey] !== null ? val[elem.fieldKey] : null}</td>)\n                              })\n                            })\n                          }\n                        </tr>)\n                      } else if ( elem.fieldKey === \"dataGrid\" && val[\"dataGrid\"] && verif_dataGrid && typeof (val[\"dataGrid\"]) === \"object\") {\n                          console.log(val[\"dataGrid\"])\n                          verif_dataGrid = false\n                          return (<><tr key={panelData.id}>\n                            {\n                              panelData.children.map(child => {\n                                return (<th scope=\"col\" >\n                                  {child.label}\n                                </th>)\n                              })\n                            } </tr>\n                            {\n                                  val[\"dataGrid\"].map((childVal, count) => {\n\n                                   return (<tr> {panelData.children.map((child, step) => {\n                                      return (<td>{childVal[child.fieldKey]  !== null ? val[elem.fieldKey] : null}</td>)\n                                    })}</tr>)\n                            })\n                          }\n                          </>)\n                      }\n                    })\n                  }\n                  </tbody>\n                </table>\n            )\n          })}\n        </div>\n        )\n  })}\n</div>\n\n                </div>\n              </div>\n\n                    <iframe\n                      id=\"test\"\n                      style={{ position: \"absolute\", right: 0, display:\"none\", height:\"300px\" }}\n                      // src={pdf1}\n                      //  onLoad={this.printDocument}\n                      width=\"100%\"\n                    />\n                  </div>\n                  </CCardBody>\n                      </CCard>\n                      </div>\n    );\n  }\n}\n\nexport default DefaultPrint;\n","\n\nimport React, {useEffect, useRef} from 'react'\nimport { Dialog } from 'primereact/dialog';\nimport { Button } from 'primereact/button';\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CFormGroup,\n  CInput, CSelect,\n  CLabel, CNavbar, CNavbarBrand, CRow, CForm, CInputGroup, CInvalidFeedback, CLink\n} from '@coreui/react'\nimport 'primeicons/primeicons.css';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.css';\nimport 'primeflex/primeflex.css';\nimport { Menu } from 'primereact/menu';\nimport CIcon from '@coreui/icons-react'\nimport { DocsLink } from 'src/reusable'\nimport { Link } from 'react-router-dom'\nimport {FormBuilder} from 'react-formio';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport {Form} from 'react-formio';\n\nimport 'formiojs/dist/formio.full.min';\nimport 'formiojs/dist/formio.full.min.css';\nimport {Cancel, Save} from \"@material-ui/icons\";\nimport {Chip} from \"@material-ui/core\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\nimport {array} from \"prop-types\";\nimport {SERVER_URL, FORM_SERVICE, PROCESS_SERVICE} from \"../../../../constants\";\nimport  DefaultPrint  from './DefaultPrint';\nimport $ from \"jquery\";\nimport {ProgressBar} from \"primereact/progressbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    marginLeft: 0+'px !important',\n    minWidth: 220,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst HistoricProcess = (props) => {\nconst menu = useRef(null);\n    const [formName, setFormName] = React.useState(\"\");\n    const [formCode, setFormCode] = React.useState(\"\");\n    const [formCodes, setFormCodes] = React.useState(\"\");\n    const [formId, setFormId] = React.useState(\"\");\n    const [formIds, setFormIds] = React.useState([]);\n    const [formDataHistoric, setFormDataHistoric] = React.useState([]);\n    const [formKey, setFormKey] = React.useState(\"\");\n    const [tasksFormKeys, setTasksFormKeys] = React.useState([]);\n    const [processKey, setProcessKey] = React.useState(\"\");\n    const [processInstanceId, setProcessInstanceId] = React.useState(\"\");\n    const [taskId, setTaskId] = React.useState(\"\");\n    const [accessControl, setAccessControl] = React.useState([]);\n    const [data, setData] = React.useState([]);\n    const [historics, setHistorics] = React.useState([]);\n    const [forms, setForms] = React.useState([]);\n    const [roles, setRoles] = React.useState([]);\n    const [componentsData, setComponentsData] = React.useState([]);\n    const [newComponents, setNewComponents] = React.useState([]);\n    const [form, setForm] = React.useState({});\n    const [formList, setFormList] = React.useState([]);\n    const [codes, setCodes] = React.useState([]);\n    const [displayMaximizable, setDisplayMaximizable] = React.useState(false);\n    const [position, setPosition] = React.useState('center');\n    const [workflowMasterId, setWorkflowMasterId] = React.useState('');\n    const [workflowMasterName, setWorkflowMasterName] = React.useState(localStorage.getItem(\"workflowMasterName\"));\n    const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n    const [visible, setVisible] = React.useState(true);\n\n    const items = [\n        {label: 'Imprimer', icon: 'pi pi-print', command: () => {onClick()}},\n        {label: 'Imprimer (Navigateur)', icon: 'pi pi-print',\n         command: () => {\n         window.print()\n                            }}\n    ];\n\n    const dialogFuncMap = {\n\n        'displayMaximizable': setDisplayMaximizable,\n\n    }\n    const printPage = (e) => {\n            //  e.preventdefault();\n            var pdf1 = null;\n            const input = document.getElementById(\"divToPrint\");\n            /////setTimeout(() => input, 2000);\n            html2canvas(input, { useCORS: true }).then((canvas) => {\n                // let imgWidth = 210;\n                // let imgHeight = (canvas.height * imgWidth) / canvas.width ;\n                const imgData = canvas.toDataURL(\"img/png\");\n                /*\n      Here are the numbers (paper width and height) that I found to work.\n      It still creates a little overlap part between the pages, but good enough for me.\n      if you can find an official number from jsPDF, use them.\n      */\n                var imgWidth = 190;\n                var pageHeight = 295;\n                var imgHeight = canvas.height * imgWidth / canvas.width;\n                var heightLeft = imgHeight;\n\n                var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n                var position = 0;\n\n                doc.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);\n                heightLeft -= pageHeight;\n\n                while (heightLeft >= 5) {\n                    position = heightLeft - imgHeight;\n                    doc.addPage();\n                    doc.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);\n                    heightLeft -= pageHeight;\n                }\n                pdf1 = doc.output(\"bloburl\");\n                // this.setState({ file: pdf1 });\n                //  document.getElementById(\"test\").src = pdf1;\n                document.getElementById(\"tab\").style.display = \"none\";\n                document.getElementById(\"test\").style.display = \"block\";\n\n                document.getElementById(\"test\").src = pdf1;\n\n                //   pdf.text(\"Octonyan loves jsPDF\", 35, 25);\n\n                //   pdf.addImage(Logo, \"PNG\", 0, 0, \"300px\", \"300px\");\n                // this.setState({ file: pdf.output(\"bloburl\") });\n\n                //  pdf.output(\"dataurlnewwindow\");\n                // pdf.save(\"download.pdf\");\n                // return pdf;\n            });\n\n\n\n      }\n\n      const onClick = ( position) => {\n            dialogFuncMap['displayMaximizable'](true);\n            localStorage.setItem(\"processHistory\", forms)\n            if (position) {\n                setPosition(position);\n            }\n        }\n\n        const onHide = (name) => {\n            dialogFuncMap[`${name}`](false);\n        }\n\n         const  renderFooter = (name)=> {\n                return (\n                    <div>\n                         <Button label=\"Imprimer\" icon=\"pi pi-check\" onClick={() => printPage(name)} autoFocus />\n                        <Button label=\"Annuler\" icon=\"pi pi-times\" onClick={() => onHide(name)} className=\"p-button-text\" />\n                    </div>\n                );\n            }\n\n\n  useEffect(()=>{\n    const processInstanceId = props.match.params.processInstanceId;\n    const workflowMaster_id = props.match.params.workflowMasterId;\n\n\n      setWorkflowMasterId(workflowMaster_id);\n    setProcessInstanceId(processInstanceId)\n    //  this.setState({processKey: processKey})\n    const domainName = JSON.parse(localStorage.getItem(\"domain_data\")).domainName;\n    const username = localStorage.getItem(\"username\");\n      localStorage.setItem(\"processInstanceId\",processInstanceId)\n    const process_data = {\n      method: 'POST',\n      headers: {\n          \"X-Tenant\": domainName,\n          'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n      body: JSON.stringify({processInstanceId: processInstanceId})\n    };\n    fetch(PROCESS_SERVICE +\"/api/process/auth/historic\", process_data)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          })\n              .catch(err => {\n            reject(err);\n          });\n        });\n      })\n      .then(data => {\n\n        //   console.log( data.historicTaskInstances);\n        //console.log(JSON.parse(data.processDefinitionId))\n        const historicVariableInstances = JSON.parse(data.historicVariableInstances);\n        const historicTaskInstances = JSON.parse(data.historicTaskInstances);\n        console.log(historicVariableInstances)\n        setProcessKey(historicVariableInstances[0].processDefinitionKey)\n        setHistorics(historicVariableInstances);\n          var taskForms = []\n          var ids = [];\n          var formDataHistoric = []\n          historicVariableInstances.map(taskForm => {\n              if (typeof (taskForm.value) === \"object\") {\n                  var formCode = taskForm.variableName;\n                  /* let taskId = []\n                   taskId = Object.keys(instance_data.value);\n                   console.log(taskId)\n                   console.log(instance_data.value)*/\n                  /*\n                                    instance_data.map(id =>{\n                                        const taskForm = instance_data.value.[id];\n                                       var taskFormCodes = Object.keys(taskForm)*/\n                   //   taskForms.push(taskForm.value)\n                  if(taskForm.variableName.toUpperCase() === taskForm.variableName){\n                      ids.push({formCode: taskForm.variableName})\n                  }\n\n\n                  formDataHistoric.push(taskForm.value)\n              }\n\n\n\n\n\n\n           /* taskForm.map(formVal =>{\n\n             /!*   if(!Array.isArray(formVal.[item])){\n                    formDataHistoric.push(formVal.[item])\n                }else{\n                    formDataHistoric.push(...formVal.[item])\n                }*!/\n            })*/\n\n          })\n\n        setFormIds(ids)\n        setFormDataHistoric(formDataHistoric)\n       /* taskForms.map( item =>{\n            idsTab.push({formId: Object.keys(item)})\n        })*/\n          /*      console.log(taskForms_string)\n        var string_executions = taskForms_string.substring(1, taskForms_string.length -2)\n                  var array_executions = string_executions.split(',')\n                  console.log(array_executions)\n                  const taskForms = array_executions;\n\n        const taskFormsList = JSON.parse(data.taskForms);\n        console.log(taskFormsList)\n*/\n\n        const form_data = {\n          method: 'POST',\n          headers: {\n              \"X-Tenant\": domainName,\n              'Content-Type': 'application/json',\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n          body: JSON.stringify({formCodes : ids})\n        };\n        console.log(ids)\n\n        fetch(FORM_SERVICE +'/api/form/getByFormCodes',form_data)\n          .then(response => {\n            return new Promise((resolve, reject) => {\n              response.text().then(body => {\n                resolve(\n                  body.length ? JSON.parse(body) : null\n                );\n              }).catch(err => {\n                reject(err);\n              });\n            });\n          })\n          .then(data => {\n              console.log(data)\n              if(data !== null){\n                  localStorage.setItem(\"formsJson\",data.forms_json );\n                  var table = []\n                  const forms_data =JSON.parse(data.forms_json);\n                  var tab = [];\n                  var list = [];\n                  var listCodes = []\n                  // tab.push(...forms_data[1].form.components)\n                  //  setFormCode(forms_data[1].formCode)\n                  forms_data.map((formData, index) =>{\n                      tab.push(...formData.components)\n                  })\n                  console.log(tab)\n                  setComponentsData(tab)\n                  console.log(forms_data);\n                  setForms(forms_data);\n              }\n\n          })\n          .catch(error => {\n            console.log(error);\n          });\n        setData(JSON.parse(data.historicVariableInstances));\n        console.log(JSON.parse(data.historicVariableInstances))\n          setVisible(false)\n\n      }).catch(error => {\n        console.log(error);\n    });\n  }, [])\n\n\nconst formFunction = () => {\n\n  // forms.map((formData, i) =>\n//{display:'form', components: componentsData}\nreturn(\n\n//  formList.map((formData, index) =>\n  <Form form={{display:'form', components: componentsData}}   submission={e => {\n\n      var form_data = e.data;\n      console.log(form_data)\n         var datas = data.find(val => val.name.includes(formCode))\n\n         console.log(datas)\n         //console.log( Object.keys(form_data))\n  /*       const keys = Object.keys(datas.value)\n         var variables = datas.value;*/\n\n\n    e.data =datas.value;\n       /*  keys.map(key =>\n           e.data[key] = variables[key]\n         )*/\n    console.log(e.data)\n       }}\n\n           options={{\n      readOnly: true\n    }}/>\n\n    //}\n  )\n\n}\n\n  // )\nconst isVisible = visible\n\n  return (\n    <div>\n      <CCard>\n        <CCardHeader>\n          <div className=\"m-subheader\">\n            <div className=\"d-flex align-items-center\">\n              <div className=\"mr-auto col-xs-6 \"><h4\n                className=\"m-subheader__title m-subheader__title--separator\"><span className=\"ng-tns-c2-0\">Aperçu  -  {workflowMasterName}</span>\n              </h4>              </div>\n             <div className=\"card-header-actions\">\n                  {/*<CLink\n                    style={{color: \"#716ACA\"}}\n                    onClick={()=> props.history.push(\"/process/instances/10ef4af6-e9e3-48a6-8319-0f0758f12bd9_Plan Processus/\"+workflowMasterId)}\n                    rel=\"noreferrer noopener\"\n                    target=\"_blank\"\n                    className=\"c-subheader-nav-link\"\n                  >\n                            <i  size=\"2xl\" className=\"pi pi-arrow-left\" onClick={(event) => console.log(event)}></i>\n                  </CLink>*/}\n\n                    <Menu model={items} popup ref={menu} />\n                  <CLink className=\"c-subheader-nav-link\" style={{paddingLeft: \"15px\", paddingRight: \"20px\"}} >\n                       <i  size=\"2xl\" className=\"pi pi-bars\" onClick={(event) => menu.current.toggle(event)}></i>\n                        </CLink>\n                </div>\n          </div>\n           </div>\n        </CCardHeader>\n        <CCardBody>\n            {isVisible && <ProgressBar  mode=\"indeterminate\" style={{ height: '6px' }}></ProgressBar>}\n\n\n          { forms.map((formData, index) =>\n              <Form form={forms[forms.length - 1 - index]}\n                    options={{\n                          readOnly: true\n                        }}\n              submission={{data: formDataHistoric[forms.length - 1 - index]\n            /*  find((val, index)=> {\n                const taskIds = Object.keys(val);\n                      console.log(val)\n//                      console.log(data[0].value)\n                      var tasksFormKeys = [];\n                      var tasksFormsData = []\n                      taskIds.map(taskId =>{\n                      var taskFormKeys = Object.keys(val.[taskId]);\n                      tasksFormKeys.push(...taskFormKeys)\n                      tasksFormsData.push(val.[taskId])*/\n                      /*formKeys.map(key =>{\n                        taskFormKeys.push(val.[taskId])\n                      })\n*/\n\n//                      })\n                   /*   const taskForms = val.[taskIds[index]];\n                      var ids = [];\n                      console.log(idsTab)\n                      var formDataHistoric = []\n                      idsTab.map(item =>{\n                          ids.push({formId: item})\n                          formDataHistoric.push(taskForms.[item])\n                      })\n                var taskId = Object.keys(val.value[0])\n                var taskFormsKeys = []\n                taskFormsKeys = Object.keys(val.value[0].[taskId]);\n                console.log(\"task forms\" +taskFormsKeys)*/\n//                return tasksFormKeys.includes(tasksFormsData[index]).value})\n                }\n              }\n             />\n          )\n          }\n        </CCardBody>\n      </CCard>\n      <Dialog visible={displayMaximizable} maximizable modal  style={{ width: '70vw'}} footer={renderFooter('displayMaximizable')} onHide={() => onHide('displayMaximizable')}>\n          <DefaultPrint processInstanceId={processInstanceId} workflowMasterId={workflowMasterId} />\n     </Dialog>\n    </div>\n  )\n}\nexport default HistoricProcess;\n\n","import React, { Component, useState }  from 'react';\n\nimport 'formiojs/dist/formio.full.min';\nimport 'formiojs/dist/formio.full.min.css';\nimport {Form} from 'react-formio';\nimport {CCard, CCardBody, CCardHeader} from \"@coreui/react\";\nimport {SERVER_URL, FORM_SERVICE, PROCESS_SERVICE} from \"../../../constants\";\nimport {submitForm} from \"../../../assets/form/submitForm.bpmn.jsx\";\nimport { Toast } from 'primereact/toast';\nimport {ProgressBar} from \"primereact/progressbar\";\n\nclass Execute extends Component{\n\n  constructor(props) {\n    super(props);\n      this.showSuccess = this.showSuccess.bind(this);\n    this.state = {\n        visible:true,\n        username: localStorage.getItem(\"username\"),\n      formName: \"\",\n      formCode:\"\",\n      historicFormsIds:  [],\n      submitFormFields: {},\n      accessControl:[],\n      formId:\"\",\n      formIds:[],\n        editabeFormsIds:[],\n      formDataHistoric: [],\n      data: [],\n      formFields: [],\n      taskForms: [],\n      form:{},\n      forms:[],\n      user_roles:[],\n      roles:[],\n      role:{label:\"\", value:\"\"},\n      components: [],\n      component:{},\n      newComponents:[],\n      HistoricFormsData: [],\n      formKey:\"\",\n      formsData:  [{autoriteDapprobation: localStorage.getItem(\"username\"),statutApprouve: \"\", commentaireDeLapprivoiseur: \"\"}],\n      historics: null,\n      processKey:\"\",\n      processInstanceId:\"\",\n        domainName: JSON.parse(localStorage.getItem('domain_data')).domainName,\n        domainId: JSON.parse(localStorage.getItem('domain_data')).domainId,\n      taskId:\"\"};\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    // this.handleDelete = this.handleDelete.bind(this);\n  }\n    showSuccess() {\n        this.toast.show({severity:'success', summary: 'La fin du processus', detail:'Le processus est terminé avec succès', life: 3000});\n    }\n\n  componentDidMount() {\n    const taskId = this.props.match.params.taskId;\n    this.setState({submitFormFields: JSON.parse(submitForm)});\n    const processDefinitionKey = this.props.match.params.processDefinitionKey;\n   this.setState({processKey: processDefinitionKey})\n    const processInstanceId = this.props.match.params.processInstanceId;\n    this.setState({taskId: taskId})\n    //  this.setState({processKey: processKey})\n    const domainName = JSON.parse(localStorage.getItem(\"domain_data\")).domainName;\n    const username = localStorage.getItem(\"username\");\n    /*const task_data = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n      body: JSON.stringify({taskId: taskId})\n    };*/\n  /*  fetch('http://localhost:8080/api/process/auth/formVariables',task_data)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        });\n      })\n      .then(data => {\n        console.log( data.formVariables);\n        this.setState({formVariables: JSON.parse(data.formVariables)})\n\n\n        // this.props.history.push(\"/admin/formView\");\n      })\n      .catch(error => {\n        console.log(error);\n      });*/\n      var historicForms_ids =[];\n       const process_data1 = {\n                method: 'POST',\n                headers: {\n                    \"X-Tenant\": this.state.domainName,\n                    'Content-Type': 'application/json',\n                  \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n                body: JSON.stringify({processInstanceId: processInstanceId})\n              };\n              fetch(PROCESS_SERVICE +\"/api/process/auth/historic\", process_data1)\n                .then(response => {\n                  return new Promise((resolve, reject) => {\n                    response.text().then(body => {\n                      resolve(\n                        body.length ? JSON.parse(body) : null\n                      );\n                    })\n                        .catch(err => {\n                      reject(err);\n                    });\n                  });\n                })\n                .then(data => {\n\n                    // console.log( data.historicTaskInstances);\n                  //console.log(JSON.parse(data.processDefinitionId))\n                  const historic = JSON.parse(data.historicVariableInstances);\n                  const historicTaskInstances = JSON.parse(data.historicTaskInstances);\n                 // console.log(historic[0].value)\n                    var form_historic_tab = [];\n                    var previousTaskId = []\n                    var ids = [];\n                    var formDataHistoric = []\n                    historic.map(historic_obj =>{\n                        if( typeof (historic_obj.value) !== \"string\"){\n\n                            if(historic_obj.value !== undefined){\n                                var historicForms_ids = Object.keys(historic_obj.value);\n\n                                form_historic_tab.push({formCode: historic_obj.variableName})\n\n\n                                // historicForms_ids = form_historic_tab\n                            }\n                       //     previousTaskId = Object.keys(historic_obj.value);\n                            const taskForms = historic_obj.value;\n                         //   console.log(previousTaskId)\n                            var ids_Tab =  Object.keys(taskForms)\n\n\n                            formDataHistoric.push(taskForms)\n                            /*ids_Tab.map(item =>{\n                                ids.push({formCode: item})\n                                if(taskForms.[item][0] === undefined){\n                                    formDataHistoric.push(taskForms.[item])\n                                }else{\n                                    formDataHistoric.push(...taskForms.[item])\n                                }\n                            })*/\n\n                            this.setState({ formDataHistoric: formDataHistoric})\n                            this.setState({historicFormsIds: form_historic_tab })\n\n\n                            this.setState({historics :historic});\n\n                            const taskForms_string = JSON.parse(data.taskForms);\n\n                        }\n                    })\n\n\n\n\n                 /* var string_executions = taskForms_string.substring(1, taskForms_string.length -2)\n                            var array_executions = string_executions.split(',')\n                            console.log(array_executions)\n                            const taskForms = array_executions;\n      */\n                  const taskFormsList = JSON.parse(data.taskForms);\n                  this.setState({data: JSON.parse(data.historicVariableInstances)});\n\n                }).catch(error => {\n                console.log(error);\n              });\n\n\n    const process_data = {\n      method: 'POST',\n      headers: {\n          \"X-Tenant\": this.state.domainName,\n          'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n      body: JSON.stringify({domainName: domainName, username: username,processDefinitionKey:processDefinitionKey, processInstanceId:processInstanceId})\n    };\n\n    fetch(PROCESS_SERVICE+\"/api/process/getTaskForm\", process_data)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        });\n      })\n      .then(data => {\n\n\n        this.setState({processInstanceId: processInstanceId})\n        if(data.taskForms != null){\n            var taskForms = data.taskForms\n            var validationConstraints = data.validationConstraints;\n        //    var string_taskForms = taskForms.substring(1, taskForms.length -1)\n            var array_taskForms = JSON.parse(taskForms)\n\n            var idsTab = [];\n            array_taskForms.map( item =>{\n            idsTab.push({formCode: item})\n            })\n            this.setState({form: idsTab});\n\n            var validationTab = [];\n            var array_contraints = JSON.parse(validationConstraints)\n\n            var validation_verif_tab = []\n                            this.state.historicFormsIds.map((item, index) =>{\n                                validationTab.push({id:  item.formCode, constraint: \"readonly\"})\n                                validation_verif_tab.push(item.formCode)\n                            })\n\n                            array_contraints.map( (item, index) =>{\n                               // console.log(validation_verif_tab)\n                               // console.log(idsTab[index].formCode)\n                                const valid_exist = validation_verif_tab.filter(code =>{ return code === idsTab[index].formCode})\n                                if(valid_exist.length === 0){\n                                    validationTab.push({id:  idsTab[index].formCode, constraint: item})\n                                }\n                          /*  if(item !== \"readonly\"){\n                                           ir validationTab.push({id:  idsTab[index].formId, constraint: \"requed\"})\n                                    }else{\n                            }*/\n                                        })\n                                        this.setState({formFields: validationTab})\n                                      //  console.log(this.state.formFields);\n            var editableforms = []\n            validationTab.map((validation, index) =>{\n                if(validation.constraint !== \"readonly\" )\n                editableforms.push({formCode: validation.id})\n            })\n            this.setState({editabeFormsIds: editableforms})\n                                     /*   console.log(this.state.historicFormsIds)\n                                        console.log(editableforms)\n*/\n                     var all_form_ids = [...this.state.historicFormsIds, ...idsTab]\n\n                     this.getFormsByFormCodes(idsTab);\n                     this.setState({visible: false})\n\n\n        }else{\n          alert ('No task To do ! ');\n        }\n\n      }).catch(error => {\n      console.log(error);\n    });\n\n\n\n\n  }\n\n\n  handleInputChange (event)  {\n    //console.log(event.target.value);\n  }\n\n  handleFormBuilderChange (event)  {\n    this.setState({\"formBuilder\": event.target.value.components});\n    // console.log(event.target.value.components);\n  }\n\n  handleChangeMultiple (event) {\n    const {options} = event.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    this.setState({'accessControl': value});\n  }\n\n  /*getFormByFormCode (data) {\n    const formCode  = data;\n    console.log(formCode);\n    const form_data = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n      body: JSON.stringify({formCode : formCode})\n    };\n\n    fetch(SERVER_URL+'/api/form/getByFormCode',form_data)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        });\n      })\n      .then(datas => {\n        this.setState({components: JSON.parse(datas.form_json).components});\n        const form = JSON.parse(datas.form_json).form;\n        form.components.map(comp =>{\n          if(comp.key === \"roles\"){\n            fetch(SERVER_URL+\"/api/auth/getRoles\")\n              .then((response) => {\n                return response.json();\n              })\n              .then(data => {\n                console.log(data);\n                let rolesFromApi = data.map(role => {\n                  return {\n                    key: role.roleId,\n                    value : role.roleName,\n                    display : role.roleName\n                  }})\n                this.setState({ user_roles :[].concat(rolesFromApi)});\n                console.log(this.state.user_roles);\n              }).catch(error => {\n              console.log(error);\n            });\n            comp.data.values = [].concat(this.state.user_roles.map(role=> {\n              var values = {\"value\":role, \"label\": role}\n              return values;\n            }));\n            console.log(comp.data.values)\n\n\n          }else if (comp.components !== undefined){\n            comp.components.map(comp1 => {\n              if (comp1.key === \"roles\") {\n                fetch(SERVER_URL+\"/api/auth/getRoles\")\n                  .then(response => {\n                    console.log(response)\n                    return new Promise((resolve, reject) => {\n                      response.text().then(body => {\n                        resolve(\n                          body.length ? JSON.parse(body) : null\n                        );\n                      }).catch(err => {\n                        reject(err);\n                      });\n                    });\n                  })\n                  .then(data => {\n                    console.log(data);\n                    this.setState({user_roles: data});\n                    console.log(this.state.user_roles);\n                    this.state.user_roles.map(role => {\n                      this.setState({role: {label: role.roleName, value: role.roleName}});\n                      this.setState({roles: [...this.state.roles, this.state.role]})\n                    });\n                    console.log(this.state.roles);\n                    comp1.dataSrc = \"values\";\n                    comp1.data.values = this.state.roles;\n\n                    this.setState({form: form});\n                    console.log(this.state.form)\n\n                  }).catch(error => {\n                  console.log(error);\n                });\n              }\n            })\n\n          }\n        })\n        //console.log(this.state.form.components)\n          this.setState({form: form});\n          console.log(this.state.form)\n        // this.props.history.push(\"/admin/formView\");\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }*/\n\n getFormsByFormCodes (data) {\n\n    const form_data = {\n      method: 'POST',\n      headers: {\n          \"X-Tenant\": this.state.domainName,\n          'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n      body: JSON.stringify({formCodes : data})\n    };\n\n    fetch(FORM_SERVICE+'/api/form/getByFormCodes',form_data)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        });\n      })\n      .then(dataVal => {\n\n                  var table = []\n                  const forms_data =JSON.parse(dataVal.forms_json);\n                  var tab = [];\n                  var list = [];\n                 // tab.push(...forms_data[1].form.components)\n                //  setFormCode(forms_data[1].formCode)\n                  forms_data.map((formData, index) =>{\n                  list.push(formData.components)\n                   tab.push(formData.components)\n                  })\n                  this.setState({componentsData: tab})\n//                  setForms(forms_data);\n                 this.setState({forms: forms_data})\n\n        //console.log(dataVal)\n//        this.setState({formName: JSON.parse(datas.form_data).name})\n//        this.setState({components: JSON.parse(datas.form_json).components});\n//        this.setState({form: JSON.parse(datas.form_json)});\n//        const form = JSON.parse(dataVal.form_json);\n\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\nformFunction (formData, index){\n//console.log(this.state.formFields)\n\n if(this.state.formFields[index].constraint === \"readonly\"){\n\n     return(\n       <Form form={formData}\n         options={{\n               readOnly: true\n             }}\n             submission={{data: this.state.formDataHistoric[index] }}\n               /*onChange={e => {\n                     var form_data = e.data;*/\n                  /*      var datas = this.state.data.find(val => val.name.includes(this.state.formIds[index]))\n\n                        console.log(datas)\n                        console.log(form_data)*/\n                        //console.log( Object.keys(form_data))\n                 /*       const keys = Object.keys(datas.value)\n                        var variables = datas.value;*/\n\n\n//                   e.data =datas.value;\n                      /*  keys.map(key =>\n                          e.data[key] = variables[key]\n                        )*/\n                   /*console.log(e.data)\n                      }}*/\n\n               />\n     )\n     }else{\n    /* var editableForms = [...this.state.editabeFormsIds]\n     editableForms.push(this.state.formIds[index]);*/\n     if(this.state.formFields[index].id === \"FORAPP\"){\n         var localData = this.state.formsData\n         return(  <Form form={formData} options={{\n                 readOnly: false\n             }}\n                        submission={{data: localData}}\n                        onChange={event => {\n                            var formsDataVal = [...this.state.formsData]\n                            formsDataVal[index] = event.data;\n                            localData = [...this.state.formsData]\n                            this.setState({formsData: formsDataVal})\n                            /*var formsData = this.state.formsData;\n                             formsData[index] = event;\n                             this.setState({formsData: formsData})*/\n                        } } />\n         )\n     }else{\n         return(  <Form form={formData} options={{\n                 readOnly: false\n             }}\n                        onChange={event => {\n                            var formsDataVal = [...this.state.formsData]\n                            formsDataVal[index] = event.data;\n                            this.setState({formsData: formsDataVal})\n                            /*var formsData = this.state.formsData;\n                             formsData[index] = event;\n                             this.setState({formsData: formsData})*/\n                        } } />\n         )\n     }\n    }\n            }\n\n  handleFormSubmit (event) {\n    // event.preventDefault();\n   // const formKey = this.state.formKey;\n    var data = event.data;\n\n\n      const domainName = JSON.parse(localStorage.getItem(\"domain_data\")).domainName;\n    const username = localStorage.getItem(\"username\");\n    const ids = this.state.editabeFormsIds;\n      var formDataValues = this.state.formsData.filter( data_val =>{\n          return data_val !== undefined\n      })\n    //  console.log(formDataValues)\n    const form_data = {\n      method: 'POST',\n      headers: {\n          \"X-Tenant\": this.state.domainName,\n          'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem('Authorization')},\n      body: JSON.stringify({formCodes: ids, taskId: this.state.taskId, username: username, domainId: this.state.domainId, domainName: domainName, [this.state.taskId]: formDataValues, processDefinitionKey : this.state.processKey, processInstanceId: this.state.processInstanceId})\n    };\n   // console.log(JSON.stringify({data: data, formKey: formKey}))\n    fetch(PROCESS_SERVICE+'/api/process/executeProcess', form_data)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        });\n      }).then(data => {\n      if(data.is_complete === true){\n        //alert (data.is_complete)\n        // alert(\"the end of the process is reached !\");\n        this.showSuccess()\n\n        this.props.history.push(\"/dashboard\");\n        //   this.getFormByFormCode(data.taskFormKey);\n      }\n      //else{\n        // alert ('the process is completed')\n    //    this.props.history.push(\"/admin/instances/\"+localStorage.getItem(\"processName\"));\n    //  }\n      // this.props.history.push(\"/admin/formView\");\n    })\n      .catch(error => {\n        console.log(error);\n      });\n\n  }\n  handleDelete (chipToDelete) {\n\n    const data = this.state.accessControl.filter((chip) => chip !== chipToDelete);\n    this.setState({\"accessControl\": data});\n  };\n\n  render() {\n      const isVisible = this.state.visible\n      var localData = this.state.formsData[0]\n      return (\n      <div>\n          <Toast ref={(el) => this.toast = el} />\n        <CCard>\n          <CCardHeader>\n            <div className=\"m-subheader\">\n              <div className=\"d-flex align-items-center\">\n                <div className=\"mr-auto col-xs-6 \"><h4\n                  className=\"m-subheader__title m-subheader__title--separator\"><span className=\"ng-tns-c2-0\">{this.state.formName}</span>\n                </h4></div>\n              </div>\n            </div>\n          </CCardHeader>\n          <CCardBody>\n              {isVisible && <ProgressBar  mode=\"indeterminate\" style={{ height: '6px' }}></ProgressBar>}\n\n              { this.state.forms.map((formData, index) => {\n\n                     //console.log(this.state.formFields[index].constraint)\n\n\n\n                     if(this.state.formFields[index].constraint === \"readonly\" ){\n                         var counter = this.state.formDataHistoric.length - 1 - index\n                         return(\n                             <Form form={formData}\n                                   options={{\n                                       readOnly: true\n                                   }}\n                                   submission={{data: this.state.formDataHistoric[counter] }}\n                                  /* onChange={e => {\n                                       if( Object.keys(e.data).includes(Object.keys(this.state.formFields[index]))){\n                                           counter = this.state.forms.length - 1 - index\n                                       }\n\n                                   }}*/\n                                 /*onChange={e => {\n                                       var form_data = e.data;*/\n                                 /*      var datas = this.state.data.find(val => val.name.includes(this.state.formIds[index]))\n\n                                       console.log(datas)\n                                       console.log(form_data)*/\n                                 //console.log( Object.keys(form_data))\n                                 /*       const keys = Object.keys(datas.value)\n                                        var variables = datas.value;*/\n\n\n                                 //                   e.data =datas.value;\n                                 /*  keys.map(key =>\n                                     e.data[key] = variables[key]\n                                   )*/\n                                 /*console.log(e.data)\n                                    }}*/\n\n                             />\n                         )\n                     }else{\n\n                             return(  <Form form={formData} options={{\n                                     readOnly: false\n                                 }}\n                                            submission={{data: this.state.formsData[0]}}\n                                            onChange={event => {\n\n                                                var formsDataVal = [...this.state.formsData]\n                                                formsDataVal[0] = event.data;\n                                                formsDataVal[0].autoriteDapprobation = localStorage.getItem(\"username\")\n\n                                                localData = formsDataVal[0]\n                                                this.setState({formsData: formsDataVal})\n                                                /*var formsData = this.state.formsData;\n                                                 formsData[index] = event;\n                                                 this.setState({formsData: formsData})*/\n                                            }}\n                                 />\n                             )\n\n                             /* var editableForms = [...this.state.editabeFormsIds]\n                              editableForms.push(this.state.formIds[index]);*/\n                          }\n                     }) }\n              {!isVisible && <Form form={this.state.submitFormFields} onSubmit={(e)=>this.handleFormSubmit(e)}  />}\n\n\n\n          </CCardBody>\n        </CCard>\n      </div>\n\n    )\n  };\n}\n\nexport default Execute;\n","import React, { Component, useState }  from 'react';\n\n\nimport 'formiojs/dist/formio.full.min';\nimport 'formiojs/dist/formio.full.min.css';\n\nimport {Form} from 'react-formio';\nimport {CCard, CCardBody, CCardHeader} from \"@coreui/react\";\nimport {SERVER_URL, PROCESS_SERVICE, FORM_SERVICE} from \"../../../constants\";\nimport {submitForm} from \"../../../assets/form/submitForm.bpmn.jsx\";\nimport {ProgressBar} from \"primereact/progressbar\";\n\n\nclass NewInstance extends Component{\n\n  constructor() {\n    super();\n    this.state = {\n        visible: true,\n      formName: \"\",\n      formFields:[],\n      submitFormFields: {},\n      formCode:\"\",\n      accessControl:[],\n      formCodes:[],\n      forms:[],\n      user_roles:[],\n      roles:[],\n      role:{label:\"\", value:\"\"},\n      components: [],\n      componentsData: [],\n      component:{},\n      formsData: [],\n      newComponents:[],\n      formKey:\"\",\n      processKey:\"\",\n      processInstanceId:\"\",\n      domainName: JSON.parse(localStorage.getItem('domain_data')).domainName\n    };\n    // this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    // this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    const processDefinitionKey = this.props.match.params.processKey;\n    this.setState({submitFormFields: JSON.parse(submitForm)});\n    this.setState({processKey: processDefinitionKey})\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n      const domainName = JSON.parse(localStorage.getItem(\"domain_data\")).domainName;\n\n    const process_data = {\n      method: 'POST',\n      headers: {\n          \"X-Tenant\": domainName,\n          'Content-Type': 'application/json',\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n          },\n      body: JSON.stringify({processKey:processDefinitionKey, domainName: domainName })\n    };\n    fetch(PROCESS_SERVICE+\"/api/process/createNewInstance\", process_data)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        });\n      })\n      .then(data => {\n          if(data.length){\n              this.setState({formId: data[0].id})\n          }\n\n//      console.log(data[0].validationConstraints[0].name)\n      var tab = [];\n      var codesTab = [];\n\n      data.map((formField, index) =>{\n          codesTab.push({formCode: formField.id})\n        if(formField.validationConstraints[0] === undefined){\n                tab.push({id: formField.id, label: formField.label, constraint: null})\n\n        }else{\n                tab.push({id: formField.id, label: formField.label, constraint: formField.validationConstraints[0].name})\n}\n      })\n      this.setState({formCodes: codesTab})\n      this.setState({formFields : tab});\n        if(this.state.formCodes[0] !== undefined ){\n         // this.setState({formKey: data.startFormKey});\n          this.getFormsByFormCodes(codesTab);\n          this.setState({visible:false})\n        }else{\n            this.props.history.push(\"/dashboard\");\n\n        }\n      }).catch(error => {\n      console.log(error);\n    });\n\n  }\n\n  handleInputChange (event)  {\n  //  console.log(event.target.value);\n  }\n\n  handleFormBuilderChange (event)  {\n    this.setState({\"formBuilder\": event.target.value.components});\n //   console.log(event.target.value.components);\n  }\n\n  /* handleChange (event)  {\n       setPersonName(event.target.value);\n   }*/\n\n  handleChangeMultiple (event) {\n    const {options} = event.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    this.setState({'accessControl': value});\n  }\n\n\n  getFormsByFormCodes (data) {\n\n    const form_data = {\n      method: 'POST',\n      headers: {\n          \"X-Tenant\": this.state.domainName,\n          'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n      body: JSON.stringify({formCodes : data})\n    };\n\n    fetch(FORM_SERVICE+'/api/form/getByFormCodes',form_data)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        });\n      })\n      .then(dataVal => {\n                //  console.log(dataVal.forms_json);\n                  var table = []\n                  const forms_data =JSON.parse(dataVal.forms_json);\n                  var tab = [];\n                  var list = [];\n                 // tab.push(...forms_data[1].form.components)\n                //  setFormCode(forms_data[1].formCode)\n                  forms_data.map((formData, index) =>{\n                  list.push(formData.components)\n                   tab.push(formData.components)\n                  })\n                  this.setState({componentsData: tab})\n//                  setForms(forms_data);\n                  this.setState({forms: forms_data})\n\n\n//        this.setState({formName: JSON.parse(datas.form_data).name})\n//        this.setState({components: JSON.parse(datas.form_json).components});\n//        this.setState({form: JSON.parse(datas.form_json)});\n//        const form = JSON.parse(dataVal.form_json);\n\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n /* handleFormSubmit (event) {\n    // event.preventDefault();\n    const formKey = this.state.formKey;\n    console.log(this.state);\n    console.log( this.state.processKey);\n    var data = event.data;\n    const domainName = JSON.parse(localStorage.getItem(\"domain_data\")).domainName;\n    const username = localStorage.getItem(\"username\");\n    const form_data = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \"+localStorage.getItem('Authorization')},\n\n      body: JSON.stringify({ formKey: formKey, [formKey]: data, processDefinitionKey : this.state.processKey, domainName: domainName,username: username})\n    };\n    console.log(JSON.stringify({data: data, formKey: formKey}))\n    fetch(SERVER_URL+'/api/process/startProcess', form_data)\n      .then(response => {\n        console.log(response)\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        })\n      }).then(data => {\n      console.log(data);\n      this.setState({processInstanceId: data.processInstanceId})\n\n      this.props.history.push(\"/instances/\"+localStorage.getItem(\"processName\"));\n    })\n      .catch(error => {\n        console.log(error);\n      });\n  }*/\n\n  handleDelete (chipToDelete) {\n\n    const data = this.state.accessControl.filter((chip) => chip !== chipToDelete);\n    this.setState({\"accessControl\": data});\n  };\n\nformFunction (formData, index){\n\n if(this.state.formFields[index].constraint === \"readonly\"){\n       return(\n       <Form form={formData}\n         options={{\n               readOnly: true\n             }}\n               onChange={e => {\n\n                   console.log(e.data)\n                     var form_data = e.data;\n                        var datas = this.state.data.find(val => val.name.includes(this.state.formCodes[index]))\n\n                        //console.log( Object.keys(form_data))\n                 /*       const keys = Object.keys(datas.value)\n                        var variables = datas.value;*/\n\n\n//                   e.data =datas.value;\n                      /*  keys.map(key =>\n                          e.data[key] = variables[key]\n                        )*/\n                      }}\n               />\n     )\n     }else{\n   return(  <Form form={formData} options={{\n                                         readOnly: false\n                                       }}\n                                       onChange={event => {\n\n                                       var formsDataVal = [...this.state.formsData]\n                                       formsDataVal[index] = event.data;\n                                       this.setState({formsData: formsDataVal})\n                                          /*var formsData = this.state.formsData;\n                                           formsData[index] = event;\n                                           this.setState({formsData: formsData})*/\n                                                  } } />\n               )  }\n            }\n\n handleFormSubmit (event ) {\n    // event.preventDefault();\n    const formKey = this.state.formKey;\n    var data = this.state.formsData;\n    const domainName = JSON.parse(localStorage.getItem(\"domain_data\")).domainName;\n    const domainId = JSON.parse(localStorage.getItem(\"domain_data\")).domainId;\n    const username = localStorage.getItem(\"username\");\n    const form_data = {\n      method: 'POST',\n      headers: {\n          \"X-Tenant\": domainName,\n          'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \"+localStorage.getItem('Authorization')},\n      body: JSON.stringify({ username: username,domainId: domainId, domainName: domainName, \"startEvent\": data, formCodes: this.state.formCodes, processDefinitionKey : this.state.processKey})\n    };\n     fetch(PROCESS_SERVICE+'/api/process/startProcess', form_data)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        });\n      }).then(data => {\n            this.setState({processInstanceId: data.processInstanceId})\n           this.props.history.push(\"/process/instances/\"+localStorage.getItem(\"processName\"));\n      // this.props.history.push(\"/admin/formView\");\n    })\n      .catch(error => {\n        console.log(error);\n      });\n\n  }\n\n  render() {\n\n    const isVisible = this.state.visible\n    return (\n      <div>\n        <CCard>\n          <CCardHeader>\n               {this.state.formName}\n          </CCardHeader>\n          <CCardBody>\n          {/* { this.state.forms.map((formData, index) => {\n           console.log(formData)\n            <Form form={formData} options={{readOnly: true}}\n                          />\n           if(this.state.formFields[index].constraint === \"readonly\"){\n              <Form form={formData} options={{readOnly: true}}\n               />\n           }else{\n             <Form form={formData}  onAttach={e=> console.log(e)}  onChange={e=> console.log(e)} onSubmit={(e)=>this.handleFormSubmit(e)}  />\n           }\n           })\n           }*/}\n              {isVisible && <ProgressBar  mode=\"indeterminate\" style={{ height: '6px' }}></ProgressBar>}\n\n              { this.state.forms.map((formData, index) =>\n                               this.formFunction(formData, index)) }\n              {!isVisible && <Form form={this.state.submitFormFields}\n\n                  onSubmit={(e)=>this.handleFormSubmit(e)}  />}\n\n\n\n\n        </CCardBody>\n        </CCard>\n      </div>\n    )\n  };\n}\n\nexport default NewInstance;\n","import React from 'react';\nimport UserNotification from \"./views/notification/UserNotification\";\nimport GroupNotification from \"./views/notification/GroupNotification\";\nimport HistoricProcess from \"./views/IMS/QMS/process/History\";\nimport Execute from \"./views/IMS/QMS/Execute\";\nimport CreateNewInstance from \"./views/IMS/QMS/CreateNewInstance\";\n\n\n/*const Toaster = React.lazy(() => import('./views/notifications/toaster/Toaster'));\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'));\n\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'));\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'));\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'));\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'));\nconst BasicForms = React.lazy(() => import('./views/base/forms/BasicForms'));\n\nconst Jumbotrons = React.lazy(() => import('./views/base/jumbotrons/Jumbotrons'));\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'));\nconst Navbars = React.lazy(() => import('./views/base/navbars/Navbars'));\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'));\nconst Paginations = React.lazy(() => import('./views/base/paginations/Pagnations'));\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'));\nconst ProgressBar = React.lazy(() => import('./views/base/progress-bar/ProgressBar'));\nconst Switches = React.lazy(() => import('./views/base/switches/Switches'));\n\nconst Tabs = React.lazy(() => import('./views/base/tabs/Tabs'));\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'));\nconst BrandButtons = React.lazy(() => import('./views/buttons/brand-buttons/BrandButtons'));\nconst ButtonDropdowns = React.lazy(() => import('./views/buttons/button-dropdowns/ButtonDropdowns'));\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'));\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'));\nconst Charts = React.lazy(() => import('./views/charts/Charts'));\n\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'));\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'));\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'));\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'));\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'));\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'));\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'));\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'));\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'));\nconst Users = React.lazy(() => import('./views/users/Users'));\nconst User = React.lazy(() => import('./views/users/User'));*/\nconst FormList = React.lazy(() => import('./views/Administration/formBuilder/FormList'));\nconst CreateForm = React.lazy(() => import('./views/Administration/formBuilder/CreateForm'));\nconst CreateNotification = React.lazy(() => import('./views/Administration/notificationBuilder/CreateNotification'));\nconst EditNotification = React.lazy(() => import('./views/Administration/notificationBuilder/EditNotification'));\nconst NotificationList = React.lazy(() => import('./views/Administration/notificationBuilder/NotificationList'));\nconst WorkflowList = React.lazy(() => import('./views/Administration/workflowBuilder/WorkflowList'));\nconst WorkflowMasterList = React.lazy(() => import('./views/Administration/workflowMaster/WorkflowMasterList'));\nconst CreateWorkflow = React.lazy(() => import('./views/Administration/workflowBuilder/CreateWorkflow'));\nconst EditWorkflow = React.lazy(() => import('./views/Administration/workflowBuilder/EditWorkflow'));\n\nconst CreateWorkflowMaster = React.lazy(() => import('./views/Administration/workflowMaster/CreateWorkflowMaster'));\nconst NotificationSettings = React.lazy(() => import('./views/Administration/workflowMaster/NotificationSettings'));\n\n\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'));\nconst DashboardList = React.lazy(() => import('./views/Administration/dashboard/DashboardList'));\nconst EditDashboard = React.lazy(() => import('./views/Administration/dashboard/Edit'));\nconst CreateDashboard = React.lazy(() => import('./views/Administration/dashboard/Create'));\n\nconst CreateNorm = React.lazy(() => import('./views/Administration/norm/CreateNorm'));\nconst EditNorm = React.lazy(() => import('./views/Administration/norm/EditNorm'));\nconst ViewNorm = React.lazy(() => import('./views/Administration/norm/ViewNorm'));\nconst NormList = React.lazy(() => import('./views/Administration/norm/NormList'));\n\nconst EditSubscription = React.lazy(() => import('./views/Administration/subscription/EditSubscription'));\nconst ViewSubscription = React.lazy(() => import('./views/Administration/subscription/ViewSubscription'));\nconst SubscriptionRequests = React.lazy(() => import('./views/Administration/subscription/SubscriptionRequests'));\nconst SubscriptionOrganization = React.lazy(() => import('./views/Administration/subscription/SubscriptionOrganization'));\n\n\n\nconst EditForm = React.lazy(() => import('./views/Administration/formBuilder/EditForm'));\nconst PreviewForm = React.lazy(() => import('./views/Administration/formBuilder/PreviewForm'));\nconst Instances = React.lazy(() => import('./views/IMS/QMS/Instances'));\nconst WorkflowMenuMapping = React.lazy(() => import('./views/Administration/workflowMaster/MenuMapping'));\nconst CreateMaster = React.lazy(() => import('./views/Administration/masterBuilder/CreateMaster'));\nconst EditMaster = React.lazy(() => import('./views/Administration/masterBuilder/EditMaster'));\nconst PreviewMaster = React.lazy(() => import('./views/Administration/masterBuilder/PreviewMaster'));\nconst MasterList = React.lazy(() => import('./views/Administration/masterBuilder/MasterList'));\nconst TreeExample = React.lazy(() => import('./views/Administration/TreeExample/Employee'));\nconst Menu = React.lazy(() => import('./views/Administration/menuBuilder/Menu'));\nconst Demo = React.lazy(() => import('./views/Administration/menuBuilder/Demo'));\nconst MasterMapping = React.lazy(() => import('./views/Administration/masterBuilder/MenuMapping/MasterMapping'));\nconst IndexView = React.lazy(() => import('./views/Administration/masterBuilder/IndexView'));\nconst WorkflowMasterIndexViews = React.lazy(() => import('./views/Administration/workflowMaster/IndexViews'));\n\nconst MasterView = React.lazy(() => import('./views/Masters/View'));\nconst addNewMasterInstance = React.lazy(() => import('./views/Masters/AddNew'));\nconst MasterInstancesList = React.lazy(() => import('./views/Masters/InstancesList'));\nconst ReportView = React.lazy(() => import('./views/reports/ReportView'));\n\n\n\nconst DemoCheckbox = React.lazy(() => import('./views/Administration/menuBuilder/DemoCheckbox'));\nconst AdvancedTables = React.lazy(() => import('./views/Administration/tables/AdvancedTables'));\nconst AllMenu = React.lazy(()=> import('./views/Administration/masterBuilder/MenuMapping/AllMenu'))\nconst DomainPage = React.lazy(()=> import('./views/Authentication/sign-in/Domain'))\nconst RegisterPage = React.lazy(()=> import('./views/Authentication/sign-up/Register'))\nconst PrintList = React.lazy(()=> import('./views/Administration/printBuilder/PrintList'))\nconst CreatePrint = React.lazy(()=> import('./views/Administration/printBuilder/CreatePrint'))\nconst EditPrint = React.lazy(()=> import('./views/Administration/printBuilder/EditPrint'))\n\nconst CreateScript = React.lazy(()=> import('./views/Administration/scriptBuilder/CreateScript'))\nconst EditScript = React.lazy(()=> import('./views/Administration/scriptBuilder/EditScript'))\nconst ScriptList = React.lazy(()=> import('./views/Administration/scriptBuilder/ScriptList'))\n\nconst UserList = React.lazy(()=> import('./views/Administration/users/UserList'))\nconst CreateUser = React.lazy(()=> import('./views/Administration/users/CreateUser'))\nconst EditUser = React.lazy(()=> import('./views/Administration/users/EditUser'))\nconst ViewUser = React.lazy(()=> import('./views/Administration/users/ViewUser'))\nconst ChangePassword = React.lazy(()=> import('./views/Administration/users/ChangePassword'))\n\nconst EditProfile = React.lazy(()=> import('./views/Administration/users/EditProfile'))\nconst ViewProfile = React.lazy(()=> import('./views/Administration/users/ViewProfile'))\nconst EditCompanyProfile = React.lazy(()=> import('./views/Administration/settings/EditCompanyProfile'))\nconst ViewCompanyProfile = React.lazy(()=> import('./views/Administration/settings/CompanyProfile'))\n\nconst UserOrgChart = React.lazy(()=> import('./views/Administration/users/UserOrgChart'))\nconst RoleList = React.lazy(()=> import('./views/Administration/roles/RoleList'))\nconst CreateRole = React.lazy(()=> import('./views/Administration/roles/CreateRole'))\nconst EditRole = React.lazy(()=> import('./views/Administration/roles/EditRole'))\nconst ViewRole = React.lazy(()=> import('./views/Administration/roles/ViewRole'))\nconst Calendar = React.lazy(()=> import('./views/IMS/calendar/Calendar'))\n\nconst MessagingList = React.lazy(()=> import('./views/Administration/messaging/MessageList'))\nconst MessagingSend = React.lazy(()=> import('./views/Administration/messaging/MessageSend'))\nconst MessagingView = React.lazy(()=> import('./views/Administration/messaging/MessageView'))\nconst CartographyList = React.lazy(()=> import('./views/Administration/cartography/CartographyList'))\nconst MatrixDependencyList = React.lazy(()=> import('./views/Administration/processDependenciesMatrix/DependencyList'))\nconst CreateDependencyMatrix = React.lazy(()=> import('./views/Administration/processDependenciesMatrix/CreateDependencyMatrix'))\nconst ViewDependencyMatrix = React.lazy(()=> import('./views/Administration/processDependenciesMatrix/ViewDependencyMatrix'))\nconst ReportList = React.lazy(()=> import('./views/Administration/reportBuilder/ReportList'))\nconst CreateAdditionalWorkflow = React.lazy(()=> import('./views/IMS/QMS/CreateAdditionalWorkflow'))\nconst routes = [\n // { path: '/', exact: true, name: 'Home' },\n  { path: '/admin/messaging/list', name: 'Liste de messagerie', component: MessagingList },\n  { path: '/admin/messaging/send', name: 'Envoyer un message', component: MessagingSend },\n  { path: '/admin/messaging/preview/:messageId', name: 'Apperçu de message', component: MessagingView },\n\n  { path: '/admin/subscription', exact:true, name: 'Abonnement', component: SubscriptionRequests },\n  { path: '/admin/organization/subscription', name: 'Abonnement', component: SubscriptionOrganization },\n  { path: '/admin/subscription/edit/:tenant',  name: 'Modifier', component: EditSubscription },\n  { path: '/admin/subscription/preview/:tenant',  name: 'Apperçu', component: ViewSubscription },\n\n  { path: '/admin/cartography/list', name: 'Liste de cartographie', component: CartographyList },\n  { path: '/admin/dependencies/list', name: 'Liste de matrice de dépendance', component: MatrixDependencyList },\n  { path: '/admin/dependencies/create', name: 'Créer une matrice de dépendance', component: CreateDependencyMatrix },\n  { path: '/admin/dependencies/preview/:dependencyId', name: 'Apperçu de matrice de dépendance', component: ViewDependencyMatrix },\n  { path: '/admin/report/list', name: 'Liste des rapports', component: ReportList },\n\n\n  { path: '/admin/settings', name: 'Profile de l\\'entreprise', component: ViewCompanyProfile },\n  { path: '/admin/company/profile/edit', name: 'Modifier le profile de l\\'entreprise', component: EditCompanyProfile },\n\n  { path: '/domain/:token', name: 'Domaine', component: DomainPage },\n  { path: '/register/:token', name: \"S'inscrire\", component: RegisterPage },\n\n  { path: '/dashboard',exact: true, name: 'Tableau de bord', component: Dashboard },\n  { path: '/admin/dashboard/create', name: 'Créer un tableau de board', component: CreateDashboard },\n  { path: '/admin/dashboard/list', name: 'tableaux de board', component: DashboardList },\n  { path: '/admin/dashboard/edit/:dashboardId', name: 'Modifier le tableau de board', component: EditDashboard },\n\n  { path: '/tree', name: 'Tree', component: TreeExample },\n  { path: '/calendar', name: 'Calendar', component: Calendar },\n  { path: '/orgchart', name: 'Users OrgChart', component: UserOrgChart },\n  { path: '/allmenu', name: 'Tree', component: AllMenu },\n  { path: '/menu', name: 'Menu', component: Menu },\n  { path: '/demo', name: 'Demo', component: Demo },\n  { path: '/demoCheck', name: 'DemoChekbox', component: DemoCheckbox },\n  { path: '/advancedTables', name: 'Advanced Tables', component: AdvancedTables },\n\n/*  { path: '/theme', name: 'Theme', component: Colors, exact: true },\n  { path: '/theme/colors', name: 'Colors', component: Colors },\n  { path: '/theme/typography', name: 'Typography', component: Typography },*/\n\n  { path: '/admin/form/list', name: 'Générateur de formulaires', component: FormList },\n  { path: '/admin/form/create', name: 'Créer un formulaire', component: CreateForm },\n  { path: '/admin/form/edit/:formCode/:formId', name: 'Modifier le formulaire', component: EditForm },\n  { path: '/admin/indexView/edit/:workflowMasterId', name: \"Vue d'index\", component: WorkflowMasterIndexViews },\n  { path: '/admin/form/preview/:formCode', name: 'Aperçu du formulaire', component: PreviewForm },\n\n  { path: '/admin/master/create', name: 'Créer un maître', component: CreateMaster },\n  { path: '/admin/master/list', name: 'Constructeur de maître', component: MasterList },\n  { path: '/admin/master/edit/:masterId', name: 'Modifier le maître', component: EditMaster },\n  { path: '/admin/master/preview/:masterId', name: 'Aperçu du maître', component: PreviewMaster },\n  { path: '/admin/master/menuMapping/:masterId', name: 'Mappage du menu', component: MasterMapping },\n  { path: '/admin/master/listMapping/:masterId', name: \"Vue d'index maître\", component: IndexView },\n\n  { path: '/master/list/:masterId', name: 'Liste des instances de maître', component: MasterInstancesList },\n  { path: '/master/view/:masterId/:masterInstanceId', name: 'Aperçu', component: MasterView },\n  { path: '/master/newInstance/:masterId', name: 'Ajouter un nouveau', component: addNewMasterInstance },\n\n  { path: '/admin/notification/create', name: 'Créer une notification', component: CreateNotification },\n  { path: '/admin/notification/list', name: 'Générateur de notifications', component: NotificationList },\n  { path: '/admin/notification/edit/:notificationId', name: 'Modifier la notification', component: EditNotification },\n\n  { path: '/admin/workflow/list', name: 'Générateur de flux de travail', component: WorkflowList },\n  { path: '/admin/workflow/create', name: 'Créer flux de travail', component: CreateWorkflow },\n  { path: '/admin/workflow/edit/:workflowId', name: 'Modifier le flux de travail', component: EditWorkflow },\n  { path: '/admin/workflowMaster/menuMapping/:workflowMasterId', name: 'Mappage du menu', component: WorkflowMenuMapping },\n\n  { path: '/admin/workflowMaster/create', name: 'Créer maître de flux de travail', component: CreateWorkflowMaster },\n  { path: '/admin/workflowMaster/notificationSettings', name: 'paramétrage de notification', component: NotificationSettings },\n    { path: '/admin/workflowMaster/list', name: 'Générateur de maître de flux de travail', component: WorkflowMasterList },\n\n\n  { path: '/admin/script/create', name: 'Créer un script', component: CreateScript },\n  { path: '/admin/script/list', name: 'Générateur de scripts', component: ScriptList },\n  { path: '/admin/script/edit/:scriptId', name: 'Modifier le script', component: EditScript },\n\n\n  { path: '/admin/print/create', name: 'Créer une impression', component: CreatePrint },\n  { path: '/admin/print/list', name: \"Constructeur d'impression\", component: PrintList },\n  { path: '/admin/print/edit/:printId', name: \"Modifier l'impression\", component: EditPrint },\n  { path: '/report/view', name: \"Rapport\", component: ReportView },\n\n  { path: '/admin/user/list', name: 'Utilisateurs', component: UserList },\n  { path: '/admin/user/create', name: 'Créer un nouveau utilisateur', component: CreateUser },\n  { path: '/admin/user/edit/:username', name: \"Modifier l'utilisateur\", component: EditUser },\n  { path: '/admin/user/preview/:username', name: \"Aperçu de l'utilisateur\", component: ViewUser },\n\n  { path: '/user/edit/:username', name: 'Modifier votre profile', component: EditProfile },\n  { path: '/user/preview/:username', name: 'Profile', component: ViewProfile },\n  { path: '/user/change/pwd', name: 'Profile', component: ChangePassword },\n\n\n  { path: '/admin/role/list', name: 'Roles', component: RoleList },\n  { path: '/admin/role/create', name: 'Créer un rôle', component: CreateRole },\n  { path: '/admin/role/edit/:roleId', name: 'Créer un rôle', component: EditRole },\n  { path: '/admin/role/preview/:roleId', name: 'Créer un rôle', component: ViewRole },\n\n  { path: '/admin/norme/create', name: 'Créer une norme', component: CreateNorm },\n  { path: '/admin/norme/edit/:normId', name: 'Modifier la norme', component: EditNorm },\n  { path: '/admin/norme/preview/:normId', name: 'Aperçu de la norme', component: ViewNorm },\n  { path: '/admin/norme/list', name: 'List des normes', component: NormList },\n\n  /*{ path: '/base', name: 'Base', component: Cards, exact: true },\n  { path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs },\n  { path: '/base/cards', name: 'Cards', component: Cards },\n  { path: '/base/carousels', name: 'Carousel', component: Carousels },\n  { path: '/base/collapses', name: 'Collapse', component: Collapses },\n  { path: '/base/forms', name: 'Forms', component: BasicForms },\n  { path: '/base/jumbotrons', name: 'Jumbotrons', component: Jumbotrons },\n  { path: '/base/list-groups', name: 'List Groups', component: ListGroups },\n  { path: '/base/navbars', name: 'Navbars', component: Navbars },\n  { path: '/base/navs', name: 'Navs', component: Navs },\n  { path: '/base/paginations', name: 'Paginations', component: Paginations },\n  { path: '/base/popovers', name: 'Popovers', component: Popovers },\n  { path: '/base/progress-bar', name: 'Progress Bar', component: ProgressBar },\n  { path: '/base/switches', name: 'Switches', component: Switches },\n  { path: '/base/tables', name: 'Tables', component: Tables },\n  { path: '/base/tabs', name: 'Tabs', component: Tabs },\n  { path: '/base/tooltips', name: 'Tooltips', component: Tooltips },\n  { path: '/buttons', name: 'Buttons', component: Buttons, exact: true },\n  { path: '/buttons/buttons', name: 'Buttons', component: Buttons },\n  { path: '/buttons/button-dropdowns', name: 'Dropdowns', component: ButtonDropdowns },\n  { path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups },\n  { path: '/buttons/brand-buttons', name: 'Brand Buttons', component: BrandButtons },\n  { path: '/charts', name: 'Charts', component: Charts },\n  { path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons },\n  { path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons },\n  { path: '/icons/flags', name: 'Flags', component: Flags },\n  { path: '/icons/brands', name: 'Brands', component: Brands },\n  { path: '/notifications', name: 'Notifications', component: Alerts, exact: true },\n  { path: '/notifications/alerts', name: 'Alerts', component: Alerts },\n  { path: '/notifications/badges', name: 'Badges', component: Badges },\n  { path: '/notifications/modals', name: 'Modals', component: Modals },\n  { path: '/notifications/toaster', name: 'Toaster', component: Toaster },*/\n\n  // { path: '/widgets', name: 'Widgets', component: Widgets },\n  // { path: '/users', exact: true,  name: 'Users', component: Users },\n  // { path: '/users/:id', exact: true, name: 'User', component: User },\n  { path: '/process/instances/:processKey/:workflowMasterId', name: 'Instances', component: Instances },\n  { path: '/NewInstance/:processKey', exact: true, name: 'New Instance', component: CreateNewInstance },\n  { path: '/NewInstance/:processKey/:workflowMasterId/:processInstanceId', name: 'New Instance', component: CreateAdditionalWorkflow },\n  { path: '/userNotification/:workflowMasterName/:taskName/:textFields/:processDefinitionKey/:processInstanceId/:taskId', name: 'User Notification', component: UserNotification },\n  { path: '/groupNotification/:workflowMasterName/:taskName/:textFields/:processDefinitionKey/:processInstanceId/:taskId', name: 'Group Notification', component: GroupNotification },\n  { path: '/historic/:processInstanceId/:workflowMasterId', name: 'Process History', component: HistoricProcess },\n  { path: '/execute/:processDefinitionKey/:processInstanceId/:taskId/:username', name: 'Form Task', component: Execute },\n];\n\nexport default routes;\n ","import React, {useEffect} from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\n\n\nimport {useParams} from \"react-router-dom\";\nimport {CButton, CCard, CCardBody, CCardHeader, CCol, CRow} from \"@coreui/react\";\nimport {Assignment} from \"@material-ui/icons\";\nimport {PROCESS_SERVICE, SERVER_URL} from \"../../constants\";\n\nexport default function UserNotification(props) {\n  const [checked, setChecked] = React.useState([]);\n  const [userTask, setUserTask] = React.useState({});\n  const [taskId, setTaskId] = React.useState(\"\");\n  const [processDefinitionKey, setProcessDefinitionKey] = React.useState(\"\");\n  const [processInstanceId, setProcessInstanceId] = React.useState(\"\");\n  const [workflowMasterName, setWorkflowMasterName] = React.useState(\"\");\n  const [taskName, setTaskName] = React.useState(\"\");\n  const [textField, setTextField] = React.useState(\"\");\n    const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n\n    const params = useParams();\n\n  useEffect(() => {\n\n    const taskId = props.match.params.taskId;\n    setTaskId(taskId)\n    const processDefinitionKey = props.match.params.processDefinitionKey;\n    const workflowMasterName = props.match.params.workflowMasterName;\n    const textFields = props.match.params.textFields;\n    const taskName = props.match.params.taskName;\n    setWorkflowMasterName(workflowMasterName)\n    if( textFields !== \"null\"){\n      setTextField(textFields)\n    }\n    setTaskName(taskName)\n    setProcessDefinitionKey(processDefinitionKey);\n    //    const domainName = JSON.parse(localStorage.getItem(\"domain_data\")).domainName;\n    //console.log(domainName);\n      const get_header = {\n          method: 'GET',\n          headers: {\n              \"X-Tenant\": domainName,\n              'Content-Type': 'application/json'\n          }\n      };\n    fetch(PROCESS_SERVICE+'/api/process/auth/getTaskById/' + taskId, get_header)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        });\n      })\n      .then(data => {\n        //   console.log(data.group_tasks);\n\n        console.log(data)\n        if(data != null){\n          setUserTask(data);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  });\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n\n  const completeTask = event =>{\n    // event.preventDefault();\n    const processInstanceId = params.processInstanceId;\n    const username = localStorage.getItem(\"username\");\n    props.history.push(\"/execute/\"+processDefinitionKey+\"/\"+ processInstanceId + \"/\" +taskId+\"/\" + username);\n\n  }\n  return (\n\n        <CCard>\n          <CCardHeader color=\"rose\" icon>\n            <h4 >Notification d'utilisateur</h4>\n          </CCardHeader>\n          <CCardBody>\n            <CRow><CCol xs=\"10\">\n              <div style={{fontSize:\"16px\"}} className=\"font-weight-bold\">{workflowMasterName}</div>\n              {/*<small className=\"text-muted float-right mt-1\">Just now</small>*/}\n              <div>\n                <div className=\"text-muted font-weight-bold\">{taskName }</div>\n\n                <div className=\"text-muted\">{textField }</div>\n\n              </div>\n\n            </CCol>\n            <CCol xs=\"2\">\n              <CButton color=\"info\" className=\"float-right\" onClick={event => completeTask(event)} >\n                Compléter\n              </CButton>\n            </CCol></CRow>\n\n          </CCardBody>\n        </CCard>\n\n  );\n}\n","import React, {useEffect} from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {SERVER_URL, PROCESS_SERVICE} from \"../../constants\";\n\n// material-ui icons\nimport Assignment from \"@material-ui/icons/Assignment\";\nimport Person from \"@material-ui/icons/Person\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\n\n\n\nimport {Link} from \"react-router-dom\";\nimport {CButton, CCard, CCardBody, CCardHeader, CCol, CRow} from \"@coreui/react\";\n\n\nexport default function GroupNotification(props) {\n  const [checked, setChecked] = React.useState([]);\n  const [groupTask, setGroupTask] = React.useState({});\n  const [processDefinitionKey, setProcessDefinitionKey] = React.useState(\"\");\n  const [Alert, setAlert] = React.useState(null);\n  const [processInstanceId, setProcessInstanceId] = React.useState(\"\");\n  const [workflowMasterName, setWorkflowMasterName] = React.useState(\"\");\n  const [taskName, setTaskName] = React.useState(\"\");\n  const [textField, setTextField] = React.useState(\"\");\n  const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n\n  useEffect(() => {\n    const taskId = props.match.params.taskId;\n\n    const processDefinitionKey = props.match.params.processDefinitionKey;\n    const workflowMasterName = props.match.params.workflowMasterName;\n    const textFields = props.match.params.textFields;\n    const taskName = props.match.params.taskName;\n    setWorkflowMasterName(workflowMasterName)\n    if(textFields !== \"null\"){\n      setTextField(textFields)\n    }\n\n    setTaskName(taskName)\n\n    setProcessDefinitionKey(processDefinitionKey);\n    //    const domainName = JSON.parse(localStorage.getItem(\"domain_data\")).domainName;\n    //console.log(domainName);\n    // alert(props.match.params.taskId);\n    const get_header = {\n      method: 'GET',\n      headers: {\n        \"X-Tenant\": domainName,\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(PROCESS_SERVICE+'/api/process/auth/getTaskById/' + taskId, get_header)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        });\n      })\n      .then(data => {\n        //   console.log(data.group_tasks);\n\n        console.log(data)\n        if(data != null){\n          setGroupTask(data);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  });\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n  const hideAlert = () => {\n    setAlert(null);\n  };\n  const hideAlertSuccess = () => {\n    setAlert(null);\n    doTheTask();\n  };\n\n  const SuccessfulClaim = () => {\n   /* setAlert(\n      <SweetAlert\n        success\n        style={{ display: \"block\", marginTop: \"-100px\" }}\n        title=\"Success!\"\n        onConfirm={() => hideAlertSuccess()}\n        onCancel={() => hideAlert()}\n        confirmBtnCssClass={classes.button + \" \" + classes.success}\n      >\n        The task is claimed succesfully !\n      </SweetAlert>\n    );*/\n  };\n\n  const claimCancel = () => {\n    /*setAlert(\n      <SweetAlert\n        success\n        style={{ display: \"block\", marginTop: \"-100px\" }}\n        title=\"Canceled!\"\n        onConfirm={() => hideAlert()}\n        onCancel={() => hideAlert()}\n        confirmBtnCssClass={classes.button + \" \" + classes.success}\n      >\n        The claiming is canceled !\n      </SweetAlert>\n    );*/\n  };\n  const validationAlert = () => {\n    /*setAlert(\n      <SweetAlert\n        warning\n        style={{ display: \"block\", marginTop: \"-100px\" }}\n        title=\"Are you sure?\"\n        onConfirm={(e) => claimTask(e)}\n        onCancel={() => claimCancel()}\n        confirmBtnCssClass={classes.button + \" \" + classes.success}\n        cancelBtnCssClass={classes.button + \" \" + classes.danger}\n        confirmBtnText=\"Yes, claim it!\"\n        cancelBtnText=\"No\"\n        showCancel\n      >\n        Do you really want to claim this task ?\n      </SweetAlert>\n    );*/\n  }\n  const completeTask = event => {\n    //   event.preventDefault();\n    const taskId = props.match.params.taskId;\n     const processInstanceId = props.match.params.processInstanceId;\n    const username = localStorage.getItem(\"username\");\n    props.history.push(\"/execute/\" + processDefinitionKey + \"/\" + processInstanceId+\"/\"+ taskId + \"/\" + username);\n  }\n\n  const completeTaskLater = event => {\n    //  event.preventDefault();\n    const username = localStorage.getItem(\"username\");\n    props.history.push(\"/admin/dashboard\" );\n  }\n  const doTheTask = () => {\n    /*setAlert(\n      <SweetAlert\n        warning\n        style={{ display: \"block\", marginTop: \"-100px\" }}\n        title=\"Are you sure?\"\n        onConfirm={(e) => completeTask(e)}\n        onCancel={(e) => completeTaskLater(e)}\n        confirmBtnCssClass={classes.button + \" \" + classes.success}\n        cancelBtnCssClass={classes.button + \" \" + classes.danger}\n        confirmBtnText=\"Yes, complete it!\"\n        cancelBtnText=\"Complete it later\"\n        showCancel\n      >\n        Do you like to complete the Task now ?\n      </SweetAlert>\n    );*/\n  }\n\n  const claimTask = (event)=>{\n    event.preventDefault();\n    const taskId = props.match.params.taskId;\n    const processInstanceId = props.match.params.processInstanceId;\n    console.log(taskId)\n    const task_data = {\n      method: 'POST',\n\n      headers: {\n        'X-Tenant': domainName,\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n      body: JSON.stringify({username:localStorage.getItem(\"username\"), taskId: taskId, processInstanceId:processInstanceId})\n    };\n\n    fetch(PROCESS_SERVICE+ '/api/process/auth/claimTask', task_data)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        });\n      })\n      .then(data => {\n        //   console.log(data.group_tasks);\n        if(data === 1 ){\n          completeTask();\n        }\n\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n\n  return (\n    <div> {Alert}\n         <CCard>\n        <CCardHeader color=\"rose\" icon>\n          <h4 >Notifications de groupe</h4>\n        </CCardHeader>\n        <CCardBody>\n          <CRow><CCol xs=\"10\">\n            <div style={{fontSize:\"16px\"}} className=\"font-weight-bold\">{workflowMasterName}</div>\n            {/*<small className=\"text-muted float-right mt-1\">Just now</small>*/}\n            <div>\n              <div className=\"text-muted font-weight-bold\">{taskName }</div>\n\n              <div className=\"text-muted\">{textField }</div>\n\n            </div>\n\n          </CCol>\n            <CCol xs=\"2\">\n              <CButton color=\"info\" className=\"float-right\" onClick={claimTask}>\n                Démander\n              </CButton>\n            </CCol></CRow>\n\n        </CCardBody>\n      </CCard>\n    </div>\n\n  );\n}\n","import React, {Suspense, useEffect} from 'react'\nimport {\n    Redirect,\n    Route,\n    Switch, useHistory\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\nimport {getAuthed, getLocalToken} from \"../utils\";\nimport {SERVER_URL} from \"../constants\";\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\nconst TheContent = () => {\n\n    const onload = ()=>{\n        return <i className=\"pi pi-spin pi-spinner\" color=\"primary\" style={{'fontSize': '2em'}}></i>\n    }\n    return (\n    <main className=\"c-main\" onLoad={onload}>\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                    <CFade>\n                      <route.component {...props} />\n                    </CFade>\n                  )} />\n              )\n            })}\n            <Redirect from=\"/\" to=\"/dashboard\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst TheFooter = () => {\n  return (\n    <CFooter fixed={false}>\n      {/*<div>\n        <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI</a>\n        <span className=\"ml-1\">&copy; 2020 creativeLabs.</span>\n      </div>\n      <div className=\"mfs-auto\">\n        <span className=\"mr-1\">Powered by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI for React</a>\n      </div>*/}\n    </CFooter>\n  )\n}\n\nexport default React.memo(TheFooter)\n","export default __webpack_public_path__ + \"static/media/ISCT-Group.53881521.png\";","import React , {useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav,\n  CHeaderNavItem,\n  CHeaderNavLink,\n  CSubheader,\n  CBreadcrumbRouter,\n  CLink, CImg\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport socketIOClient from \"socket.io-client\";\n\n// routes config\nimport routes from '../routes'\n\nimport {\n  TheHeaderDropdown,\n  TheHeaderDropdownMssg,\n  TheHeaderDropdownNotif,\n  TheHeaderDropdownTasks\n}  from './index'\nimport {useHistory, withRouter} from \"react-router-dom\";\nimport Image from \"../assets/img/ISCT-Group.png\";\nimport {getAuthed, getLocalToken} from \"../utils\";\nimport {SERVER_URL, USER_SERVICE, PROCESS_SERVICE, AUTH_SERVICE} from \"../constants\";\nimport {ENDPOINT} from \"../constants\";\n\nconst TheHeader = (props) => {\n    const history = useHistory()\n    const token = getLocalToken();\n    const [domainName, setDomainName] = React.useState(\"\");\n\n    useEffect(() => {\n        if(JSON.parse(localStorage.getItem('domain_data')) === undefined || JSON.parse(localStorage.getItem('domain_data')) === null ){\n            localStorage.clear();\n            history.push(\"/domain\");\n        }else{\n            setDomainName(JSON.parse(localStorage.getItem('domain_data')).domainName)\n            var domain_name = JSON.parse(localStorage.getItem('domain_data')).domainName\n            const refreshToken = async () => {\n                //  const token_val = localStorage.getItem(\"token\")\n                if (token !== undefined && token !== null) {\n                    if (JSON.parse(localStorage.getItem('domain_data')) !== null && JSON.parse(localStorage.getItem('domain_data')) !== undefined ) {\n                        const domainId = JSON.parse(localStorage.getItem('domain_data')).domainId;\n                        const domainName = JSON.parse(localStorage.getItem('domain_data')).domainName;\n                        //          console.log(domainId)\n                        //         console.log(token)\n                        /*\n                        let result = await getAuthed(AUTH_SERVICE + '/api/auth/getUserByToken', domainId, domainName);\n                        if (result !== 200) {\n                            localStorage.clear();\n                            history.push(\"/domain\");\n                        }\n                        */\n                    } else {\n                        localStorage.clear();\n                        history.push(\"/domain\");\n                    }\n\n                } else {\n                    localStorage.clear();\n                    history.push(\"/domain\");\n                }\n            }\n            refreshToken()\n            async function fetchData() {\n                //var socket = io('httm://127.0.0.1:4000', {transports: ['websocket']});\n\n\n//        const ENDPOINT = \"http://127.0.0.1:5000/\";\n\n                var socket = socketIOClient(ENDPOINT, {reconnect: true});\n                // var socket = socketIOClient('http://127.0.0.1');\n                if(localStorage.getItem(\"domain_data\") !== null){\n                    const domainName = JSON.parse(localStorage.getItem('domain_data')).domainName;\n                    const get_header = {\n                        method: 'GET',\n                        headers: {\n                            \"X-Tenant\": domainName,\n                            'Content-Type': 'application/json',\n                            \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n                        }\n                    };\n                    fetch(PROCESS_SERVICE + '/api/process/auth/getTasksForNotification/' + domainName + \"/\" + localStorage.getItem(\"username\"), get_header)\n                        .then(response => {\n                            if(response.status === 400){\n                                localStorage.clear();\n                                history.push(\"/domain\");\n\n                            }else{\n                                return new Promise((resolve, reject) => {\n                                    response.text().then(body => {\n                                        resolve(\n                                            body.length ? JSON.parse(body) : null\n                                        );\n                                    }).catch(err => {\n                                        reject(err);\n                                    });\n                                });\n                            }\n\n                        })\n                        .then(data => {\n                            // alert(data.group_tasks);\n                            if (data != null) {\n                                socket.emit(\"send_notif\", {\n                                    \"username\": localStorage.getItem(\"username\"),\n\n                                    \"group_tasks\": data.group_tasks,\n                                    \"group_historic\": data.group_historic,\n                                    \"user_historic\": data.user_historic,\n\n                                    \"groupProcessDefinitionKeys\": data.groupProcessDefinitionKeys,\n                                    \"groupProcessInstanceIds\": data.groupProcessInstanceIds,\n                                    \"user_tasks\": data.user_tasks,\n                                    \"userProcessDefinitionKeys\": data.userProcessDefinitionKeys,\n                                    \"userProcessInstanceIds\": data.userProcessInstanceIds,\n                                });\n                                // alert(data.group_tasks)\n                            }\n                        })\n                        .catch(error => {\n                            console.log(error);\n                        });\n                }\n            }\n            fetchData();\n        }\n\n  });\n\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector(state => state.sidebarShow)\n\n  const toggleSidebar = () => {\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  const toggleSidebarMobile = () => {\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n    const demoExpiration =  () =>{\n\n        const expiration_date = localStorage.getItem(\"domain_expiration_date\")\n        if(expiration_date !== undefined && expiration_date !== null  ){\n            const expiration_year = Number(expiration_date.substr(6,4))\n            const expiration_month = Number(expiration_date.substr(3, 2))\n            const expiration_day = Number(expiration_date.substr(0, 2 ))\n            const today_date = new Date().toLocaleString() + \"\";\n            const today_year = new Date().getFullYear()\n            const today_month = Number(new Date().toLocaleString(\"en-US\", { month: \"2-digit\" }))\n\n            const today_day = Number(new Date().toLocaleString(\"en-US\", { day : '2-digit'}))\n            if(expiration_year === today_year){\n                if(expiration_month === today_month){\n                    if(expiration_day - today_day <= 5 ){\n                            return (\n                                <CSubheader className=\"px-3 justify-content-between\">\n                                    <div className=\"d-md-down-none mfe-2 c-subheader-nav center\"  style={{textAlign:\"center\"}}>\n\n                                        Le demo expirera le <span style={{color:\"red\", fontWeight:\"bold\"}}> &nbsp; {expiration_date}</span>\n                                        <CLink className=\"c-subheader-nav-link\"href=\"#\" style={{color:\"blue\"}}>\n                                            <CIcon name=\"cil-credit-card\" alt=\"Abonnez-vous maintenant\" /> &nbsp; Abonnez-vous maintenant!\n                                        </CLink>\n                                        {/*\n            <CLink\n              className=\"c-subheader-nav-link\"\n              aria-current=\"page\"\n              to=\"/dashboard\"\n            >\n              <CIcon name=\"cil-graph\" alt=\"Dashboard\" />&nbsp;Dashboard\n            </CLink>\n            <CLink className=\"c-subheader-nav-link\" href=\"#\">\n              <CIcon name=\"cil-settings\" alt=\"Settings\" />&nbsp;Settings\n            </CLink>*/}\n                                    </div>\n                                </CSubheader>\n                            )\n\n                    }\n\n                }\n                if((expiration_month === today_month +1) && (today_month !== 2)){\n                    if( 30 - today_day + expiration_day <= 5){\n                            return (\n                                <CSubheader className=\"px-3 justify-content-between\">\n                                    <div className=\"d-md-down-none mfe-2 c-subheader-nav center\"  style={{textAlign:\"center\"}}>\n\n                                        Le demo expirera le <span style={{color:\"red\", fontWeight:\"bold\"}}> &nbsp; {expiration_date}</span>\n                                        <CLink className=\"c-subheader-nav-link\"href=\"#\" style={{color:\"blue\"}}>\n                                            <CIcon name=\"cil-credit-card\" alt=\"Abonnez-vous maintenant\" /> &nbsp; Abonnez-vous maintenant!\n                                        </CLink>\n                                        {/*\n            <CLink\n              className=\"c-subheader-nav-link\"\n              aria-current=\"page\"\n              to=\"/dashboard\"\n            >\n              <CIcon name=\"cil-graph\" alt=\"Dashboard\" />&nbsp;Dashboard\n            </CLink>\n            <CLink className=\"c-subheader-nav-link\" href=\"#\">\n              <CIcon name=\"cil-settings\" alt=\"Settings\" />&nbsp;Settings\n            </CLink>*/}\n                                    </div>\n                                </CSubheader>\n                            )\n\n                    }\n                }\n                if((expiration_month === today_month +1) && (today_month === 2)){\n                    if( 28 - today_day + expiration_day <= 5){\n                            return (\n                                <CSubheader className=\"px-3 justify-content-between\">\n                                    <div className=\"d-md-down-none mfe-2 c-subheader-nav center\"  style={{textAlign:\"center\"}}>\n\n                                        Le demo expirera le <span style={{color:\"red\", fontWeight:\"bold\"}}> &nbsp; {expiration_date}</span>\n                                        <CLink className=\"c-subheader-nav-link\"href=\"#\" style={{color:\"blue\"}}>\n                                            <CIcon name=\"cil-credit-card\" alt=\"Abonnez-vous maintenant\" /> &nbsp; Abonnez-vous maintenant!\n                                        </CLink>\n                                        {/*\n            <CLink\n              className=\"c-subheader-nav-link\"\n              aria-current=\"page\"\n              to=\"/dashboard\"\n            >\n              <CIcon name=\"cil-graph\" alt=\"Dashboard\" />&nbsp;Dashboard\n            </CLink>\n            <CLink className=\"c-subheader-nav-link\" href=\"#\">\n              <CIcon name=\"cil-settings\" alt=\"Settings\" />&nbsp;Settings\n            </CLink>*/}\n                                    </div>\n                                </CSubheader>\n                            )\n\n                    }\n                }\n\n            }\n            if(expiration_year === today_year +1){\n                if((expiration_month === 1) && (today_month === 12)){\n                    if( 31 - today_day + expiration_day <= 5){\n                            return (\n                                <CSubheader className=\"px-3 justify-content-between\">\n                                    <div className=\"d-md-down-none mfe-2 c-subheader-nav center\"  style={{textAlign:\"center\"}}>\n\n                                        Le demo expirera le <span style={{color:\"red\", fontWeight:\"bold\"}}> &nbsp; {expiration_date}</span>\n                                        <CLink className=\"c-subheader-nav-link\"href=\"#\" style={{color:\"blue\"}}>\n                                            <CIcon name=\"cil-credit-card\" alt=\"Abonnez-vous maintenant\" /> &nbsp; Abonnez-vous maintenant!\n                                        </CLink>\n                                        {/*\n            <CLink\n              className=\"c-subheader-nav-link\"\n              aria-current=\"page\"\n              to=\"/dashboard\"\n            >\n              <CIcon name=\"cil-graph\" alt=\"Dashboard\" />&nbsp;Dashboard\n            </CLink>\n            <CLink className=\"c-subheader-nav-link\" href=\"#\">\n              <CIcon name=\"cil-settings\" alt=\"Settings\" />&nbsp;Settings\n            </CLink>*/}\n                                    </div>\n                                </CSubheader>\n                            )\n\n                    }\n                }\n            }\n        }\n\n\n\n\n    }\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n        <CImg src={Image}\n              height={56}\n        />\n      </CHeaderBrand>\n\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\n         {/* <CBreadcrumbRouter\n              className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\n              routes={routes}\n          />*/}\n      {/*  <CHeaderNavItem className=\"px-3\" >\n          <CHeaderNavLink to=\"/dashboard\">Dashboard</CHeaderNavLink>\n        </CHeaderNavItem>\n        <CHeaderNavItem  className=\"px-3\">\n          <CHeaderNavLink to=\"/users\">Users</CHeaderNavLink>\n        </CHeaderNavItem>*/}\n       {/* <CHeaderNavItem className=\"px-3\">\n          <CHeaderNavLink>Settings</CHeaderNavLink>\n        </CHeaderNavItem>*/}\n      </CHeaderNav>\n\n      <CHeaderNav className=\"px-3\">\n        <TheHeaderDropdownNotif/>\n        <TheHeaderDropdownTasks/>\n    {/*    <TheHeaderDropdownMssg/>*/}\n        <TheHeaderDropdown/>\n      </CHeaderNav>\n\n\n\n          {demoExpiration()}\n\n    </CHeader>\n  )\n}\n\nexport default withRouter(TheHeader)\n","import React, {useEffect} from 'react'\nimport {\n  CBadge, CCol, CDataTable,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle, CImg,\n  CProgress, CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {Delete, Edit, Group, Menu, RemoveRedEye} from \"@material-ui/icons\";\nimport socketIOClient from \"socket.io-client\";\nimport {Link} from \"react-router-dom\";\nimport {ENDPOINT} from \"../constants\";\n\nconst TheHeaderDropdownNotif = (props) => {\n  const [openProfile, setOpenProfile] = React.useState(null);\n  const [userTasks, setUserTasks] = React.useState(  []);\n  const [groupProcessDefinitionKeys, setGroupProcessDefinitionKeys] = React.useState(  []);\n  const [groupProcessDefinitionNames, setGroupProcessDefinitionNames] = React.useState(  []);\n  const [userProcessDefinitionKeys, setUserProcessDefinitionKeys] = React.useState(  []);\n  const [processInstanceIds, setProcessInstanceIds] = React.useState([]);\n  const [groupTasks, setGroupTasks] = React.useState(  []);\n  const [groupTasksNames, setGroupTasksNames] = React.useState(  []);\n  const [groupNotification, setGroupNotification] = React.useState(  null);\n  const [userNotification, setUserNotification] = React.useState(  null);\n  const fields = [ 'Action','S No','Workflow name', 'Version']\n  const [fieldsValuesList, setFieldsValuesList] = React.useState([[]]);\n  const [allFieldsValues, setAllFieldsValues] = React.useState([]);\n  const [workflowsData, setWorkflowsData] = React.useState([]);\n  const [domainId, setDomainId] = React.useState(\"\");\n  const [textValue, setTextValue] = React.useState(\"\");\n  const [username, setUsename] = React.useState(localStorage.getItem('username'));\n\n  useEffect(()=>{\n      // setDomainId(JSON.pagetByWorkfowIdrse(localStorage.getItem('domain_data')).domainId);\n      // const ENDPOINT = \"http://127.0.0.1:5000/\";\n      var socket = socketIOClient(ENDPOINT, {reconnect: true});\n\n      socket.on(\"receive_notif_\"+username,  message=> {\n        /*     const var1 = JSON.parse(message.group_tasks);\n             const var2 = JSON.parse(message.groupProcessDefinitionKeys);\n             const var3 = JSON.parse(message.groupProcessInstanceIds);\n             const var4 = JSON.parse(message.user_tasks);\n             const var5 = JSON.parse(message.userProcessDefinitionKeys);\n             const user = JSON.parse(message.username);*/\n        setGroupTasks([]);\n        setGroupProcessDefinitionKeys([]);\n        setProcessInstanceIds([]);\n        setUserTasks([]);\n        setUserProcessDefinitionKeys([]);\n\n        if(message !== null ){\n        var tasks = JSON.parse(message.group_tasks);\n          var historics = JSON.parse(message.group_historic);\n\n        //var tasks_string = tasks.substring(1, tasks.length -1);\n    //    var tasks_array = tasks_string.split(\",\");\n      //    if(tasks_array[0].length > 1){\n          setGroupTasks(tasks);\n\n          var allFields = []\n          var tasks_list_text = []\n          tasks.map((task,index) =>{\n            var fieldValuesList = []\n            task.fieldList.map((field) =>{\n              var verif_field = false\n              historics[index].map(form =>{\n                if(form.value.[field] && verif_field=== false){\n                   fieldValuesList.push({label:form.value.[field], value:field } )\n                  verif_field = true;\n                }\n              })\n              // console.log(fieldVal)\n            })\n            allFields.push(fieldValuesList)\n            var text_values = \"\";\n\n            fieldValuesList.map(val =>{\n              if(text_values !== \"\" && val.value !== \"sNo\"){\n                text_values +=  \" | \";\n              }\n              if(val.value === \"sNo\"){\n                var aux = val.label + \" | \" + text_values\n                text_values = aux\n              }else{\n                text_values += val.label\n              }\n            })\n            if (text_values === \"\") {\n              text_values = \"null\"\n            }\n            tasks_list_text.push(text_values)\n            setTextValue(text_values)\n\n          })\n\n\n          setFieldsValuesList(tasks_list_text);\n\n          // console.log(allFields)\n\n\n             //     console.log(tasks_array.length)\n              //    console.log(tasks_array[0].length)\n              //    }else{\n                 // setGroupTasks([]);\n            //}\n          var processDefinitionsKeys = JSON.parse(message.groupProcessDefinitionKeys);\n      // var processDefinitionsKeys_string = tasks.substring(1, tasks.length -1);\n      // var tasks_array = processDefinitionsKeys_string.split(\", \");\n      // if(tasks_array[0].length > 1){\n          setGroupProcessDefinitionKeys(processDefinitionsKeys);\n                // console.log(tasks_array)\n                // }else{\n                //   setGroupProcessDefinitionKeys([]);\n                // }\n\n\n  var processInstances = JSON.parse(message.groupProcessInstanceIds);\n     /* var groupProcessInstanceIds_string = processInstances.substring(1, processInstances.length -1);\n      var groupProcessInstanceIds_array = groupProcessInstanceIds_string.split(\",\");*/\n                setProcessInstanceIds(processInstances);\n             /*   console.log(groupProcessInstanceIds_string)\n                console.log(message.groupProcessInstanceIds)*/\n\n    /*\n          setUserTasks(JSON.parse(message.user_tasks));\n          setUserProcessDefinitionKeys(JSON.parse(message.userProcessDefinitionKeys));\n          console.log(processInstanceIds)\n          console.log(userTasks)\n          console.log(userProcessDefinitionKeys)*/\n        }\n      })\n\n  },[])\n  const itemsCount = groupTasks.length;\n\n\n  return (\n    <div>\n    <CDropdown\n      inNav\n      className=\"c-header-nav-item mx-2\"\n      id=\"1\"\n    >\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n        <Group/>\n        {itemsCount!== 0 ? <CBadge shape=\"pill\" color=\"danger\">{itemsCount}</CBadge> : null}\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\" style={{width: \"400px\"}}>\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n          className=\"text-center\"\n        >\n          <strong>{itemsCount} Notifications de groupe</strong>\n        </CDropdownItem>\n        {groupTasks.map((task, index) =>{\n        if(task !== null){\n            return <CDropdownItem header\n                           tag=\"div\" >\n              <div className=\"message\">\n                <div className=\"pt-3 mr-3 float-left\">\n                  <div className=\"c-avatar\">\n                    <CDropdown id={groupTasks[index].step}>\n                      <CDropdownToggle style={{marginTop:\"-40px\"}}>\n                        <Menu/>\n                      </CDropdownToggle>\n                      <CDropdownMenu small>\n                        <CDropdownItem><Link to={\"/groupNotification/\"+groupTasks[index].workflowMasterName+\"/\"+groupTasks[index].step+\"/\"+fieldsValuesList[index]+\"/\"+groupProcessDefinitionKeys[index]+\"/\"+processInstanceIds[index]+\"/\"+groupTasks[index].taskId}><Edit/> &nbsp;&nbsp;Démander</Link></CDropdownItem>\n                        {/*<CDropdownItem><RemoveRedEye/>&nbsp;&nbsp;View</CDropdownItem>*/}\n                      </CDropdownMenu>\n                    </CDropdown>\n                  </div>\n                </div>\n                <div>\n                  <div className=\"text-muted\" style={{fontSize: \"14px\"}}>{groupTasks[index].workflowMasterName}</div>\n                  {/*<small className=\"text-muted float-right mt-1\">Just now</small>*/}\n                </div>\n                <div className=\"text-truncate\" style={{fontSize: \"12px\"}}>\n                  {groupTasks[index].step}\n                </div>\n                <div className=\"text-truncate\">\n                  {fieldsValuesList[index]  !== \"null\" ? fieldsValuesList[index] : \" \"}\n                </div>\n\n\n               {/* <div className=\"text-truncate\">\n                  {groupTasks[index].step} | {groupTasks[index].step}\n                </div>*/}\n              {/*  <div className=\"small text-muted text-truncate\">\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\n                </div>*/}\n              </div>\n            </CDropdownItem>\n        }\n        })}\n\n      </CDropdownMenu>\n    </CDropdown>\n    </div>\n  )\n}\n\nexport default TheHeaderDropdownNotif\n","import React, {useEffect} from 'react'\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle, CImg, CLink,\n  CProgress\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport socketIOClient from \"socket.io-client\";\nimport {Edit, Group, Menu, RemoveRedEye} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\nimport {ENDPOINT} from \"../constants\";\n\nconst TheHeaderDropdownTasks = (props) => {\n  const [openProfile, setOpenProfile] = React.useState(null);\n  const [userTasks, setUserTasks] = React.useState(  []);\n  const [userTaskNames, setUserTaskNames] = React.useState(  []);\n  const [groupProcessDefinitionKeys, setGroupProcessDefinitionKeys] = React.useState(  []);\n  const [userProcessDefinitionKeys, setUserProcessDefinitionKeys] = React.useState(  []);\n  const [processInstanceIds, setProcessInstanceIds] = React.useState(  []);\n  const [groupTasks, setGroupTasks] = React.useState(  []);\n  const [groupNotification, setGroupNotification] = React.useState(  null);\n  const [userNotification, setUserNotification] = React.useState(  null);\n  const [username, setUsename] = React.useState(localStorage.getItem('username'));\n  const [fieldsValuesList, setFieldsValuesList] = React.useState([[]]);\n    const [textValue, setTextValue] = React.useState(\"\");\n\n\n  useEffect(()=>{\n\n    // const ENDPOINT = \"http://127.0.0.1:5000/\";\n    var socket = socketIOClient(ENDPOINT, {reconnect: true});\n\n    socket.on(\"receive_notif_\"+ username,  message=> {\n\n        setGroupTasks([]);\n        setGroupProcessDefinitionKeys([]);\n        setProcessInstanceIds([]);\n        setUserTasks([]);\n        setUserProcessDefinitionKeys([]);\n\n        if (message.user_tasks !== null) {\n            var user_tasks = JSON.parse(message.user_tasks);\n            var historics = JSON.parse(message.user_historic);\n\n            //var tasks_string = tasks.substring(1, tasks.length -1);\n            //    var tasks_array = tasks_string.split(\",\");\n            //    if(tasks_array[0].length > 1){\n            setUserTasks(user_tasks);\n\n            var allFields = []\n            var tasks_list_text = []\n            user_tasks.map((task, index) => {\n                var fieldValuesList = []\n                task.fieldList.map((field) => {\n                    var verif_field = false\n                    historics[index].map(form => {\n                        if (form.value.[field] && verif_field === false) {\n                            fieldValuesList.push({label: form.value.[field], value: field})\n                            verif_field = true;\n                        }\n                    })\n                    // console.log(fieldVal)\n                })\n                allFields.push(fieldValuesList)\n                var text_values = \"\";\n\n                fieldValuesList.map(val => {\n                    if (text_values !== \"\" && val.value !== \"sNo\") {\n                        text_values += \" | \";\n                    }\n                    if (val.value === \"sNo\") {\n                        var aux = val.label + \" | \" + text_values\n                        text_values = aux\n                    } else {\n                        text_values += val.label\n                    }\n                })\n                if (text_values === \"\") {\n                    text_values = \"null\"\n                }\n                tasks_list_text.push(text_values)\n                setTextValue(text_values)\n\n            })\n            setFieldsValuesList(tasks_list_text);\n\n\n            var user_process_definintionKeys = JSON.parse(message.userProcessDefinitionKeys);\n            // var user_process_definintionKeys_string = user_process_definintionKeys.substring(1, user_process_definintionKeys.length -1);\n            // var user_process_definintionKeys_array = user_process_definintionKeys_string.split(\", \");\n            setUserProcessDefinitionKeys(user_process_definintionKeys);\n\n            var userProcessInstanceIds = JSON.parse(message.userProcessInstanceIds);\n            // var userProcessInstanceIds_string = userProcessInstanceIds.substring(1, userProcessInstanceIds.length -1);\n            // var userProcessInstanceIds_array = userProcessInstanceIds_string.split(\", \");\n            setProcessInstanceIds(userProcessInstanceIds);\n            // console.log(message.userProcessInstanceIds)\n\n\n        }\n    })\n  },[])\n  const itemsCount = userTasks.length\n  return (\n    <CDropdown\n      inNav\n      className=\"c-header-nav-item mx-2\"\n      id=\"1\"\n    >\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n        <CIcon name=\"cil-list\" />\n        {itemsCount!== 0 ? <CBadge shape=\"pill\" color=\"warning\">{itemsCount}</CBadge> : null}\n\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0 \" placement=\"bottom-end\" style={{width: \"400px\"}}>\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n          className=\"text-center\"\n        >\n          <strong>{itemsCount} Notification d'utilisateur</strong>\n        </CDropdownItem>\n        {userTasks.map((task, index) => {\n                if (task !== null) {\n                    return <CDropdownItem header\n                                          tag=\"div\">\n                        <div className=\"message\">\n                            <div className=\"pt-3 mr-3 float-left\">\n                                <div className=\"c-avatar\">\n                                    <CDropdown id={task.step}>\n                                        <CDropdownToggle style={{marginTop: \"-40px\"}}>\n                                            <Menu/>\n                                        </CDropdownToggle>\n                                        <CDropdownMenu small>\n                                            <CDropdownItem><Link\n                                                to={\"/userNotification/\" + task.workflowMasterName + \"/\" + task.step + \"/\" + fieldsValuesList[index] + \"/\" + userProcessDefinitionKeys[index] + \"/\" + processInstanceIds[index] + \"/\" + task.taskId}><Edit/> &nbsp;&nbsp;Compléter</Link></CDropdownItem>\n                                            {/*<CDropdownItem><RemoveRedEye/>&nbsp;&nbsp;Aperçu</CDropdownItem>*/}\n                                        </CDropdownMenu>\n                                    </CDropdown>\n                                </div>\n                            </div>\n                            <div>\n                                <div className=\"text-muted\"\n                                     style={{fontSize: \"14px\"}}>{task.workflowMasterName}</div>\n                               {/* <small className=\"text-muted float-right mt-1\">Just now</small>*/}\n                            </div>\n                            <div className=\"text-truncate\" style={{fontSize: \"12px\"}}>\n                                {task.step}\n                            </div>\n                            <div className=\"text-truncate\">\n                                {fieldsValuesList[index] !== \"null\" ?fieldsValuesList[index]: \" \" }\n                            </div>\n\n\n                            {/* <div className=\"text-truncate\">\n                  {groupTasks[index].step} | {groupTasks[index].step}\n                </div>*/}\n                            {/*  <div className=\"small text-muted text-truncate\">\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\n                </div>*/}\n                        </div>\n                    </CDropdownItem>\n                }\n            }\n        )}\n\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default TheHeaderDropdownTasks\n","/*!\n\n=========================================================\n* Material Dashboard PRO React - v1.9.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\n// ##############################\n// // // Function that converts from hex color to rgb color\n// // // Example: input = #9c27b0 => output = 156, 39, 176\n// // // Example: input = 9c27b0 => output = 156, 39, 176\n// // // Example: input = #999 => output = 153, 153, 153\n// // // Example: input = 999 => output = 153, 153, 153\n// #############################\nconst hexToRgb = input => {\n  input = input + \"\";\n  input = input.replace(\"#\", \"\");\n  let hexRegex = /[0-9A-Fa-f]/g;\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\n    throw new Error(\"input is not a valid hex color.\");\n  }\n  if (input.length === 3) {\n    let first = input[0];\n    let second = input[1];\n    let last = input[2];\n    input = first + first + second + second + last + last;\n  }\n  input = input.toUpperCase(input);\n  let first = input[0] + input[1];\n  let second = input[2] + input[3];\n  let last = input[4] + input[5];\n  return (\n    parseInt(first, 16) +\n    \", \" +\n    parseInt(second, 16) +\n    \", \" +\n    parseInt(last, 16)\n  );\n};\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 260;\n\nconst drawerMiniWidth = 80;\n\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\n};\n\nconst containerFluid = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\",\n  \"&:before,&:after\": {\n    display: \"table\",\n    content: '\" \"'\n  },\n  \"&:after\": {\n    clear: \"both\"\n  }\n};\n\nconst container = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\",\n  \"@media (min-width: 768px)\": {\n    width: \"750px\"\n  },\n  \"@media (min-width: 992px)\": {\n    width: \"970px\"\n  },\n  \"@media (min-width: 1200px)\": {\n    width: \"1170px\"\n  },\n  \"&:before,&:after\": {\n    display: \"table\",\n    content: '\" \"'\n  },\n  \"&:after\": {\n    clear: \"both\"\n  }\n};\n\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\"\n};\n\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\", \"#7b1fa2\"];\nconst warningColor = [\n  \"#ff9800\",\n  \"#ffa726\",\n  \"#fb8c00\",\n  \"#ffa21a\",\n  \"#f57c00\",\n  \"#faf2cc\",\n  \"#fcf8e3\"\n];\nconst dangerColor = [\n  \"#f44336\",\n  \"#ef5350\",\n  \"#e53935\",\n  \"#f55a4e\",\n  \"#d32f2f\",\n  \"#ebcccc\",\n  \"#f2dede\"\n];\nconst successColor = [\n  \"#4caf50\",\n  \"#66bb6a\",\n  \"#43a047\",\n  \"#5cb860\",\n  \"#388e3c\",\n  \"#d0e9c6\",\n  \"#dff0d8\"\n];\nconst infoColor = [\n  \"#00acc1\",\n  \"#26c6da\",\n  \"#00acc1\",\n  \"#00d3ee\",\n  \"#0097a7\",\n  \"#c4e3f3\",\n  \"#d9edf7\"\n];\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\", \"#c2185b\"];\nconst grayColor = [\n  \"#999\",\n  \"#777\",\n  \"#3C4858\",\n  \"#AAAAAA\",\n  \"#D2D2D2\",\n  \"#DDD\",\n  \"#555555\",\n  \"#333\",\n  \"#eee\",\n  \"#ccc\",\n  \"#e4e4e4\",\n  \"#E5E5E5\",\n  \"#f9f9f9\",\n  \"#f5f5f5\",\n  \"#495057\",\n  \"#e7e7e7\",\n  \"#212121\",\n  \"#c8c8c8\",\n  \"#505050\"\n];\nconst blackColor = \"#000\";\nconst whiteColor = \"#FFF\";\nconst twitterColor = \"#55acee\";\nconst facebookColor = \"#3b5998\";\nconst googleColor = \"#dd4b39\";\nconst linkedinColor = \"#0976b4\";\nconst pinterestColor = \"#cc2127\";\nconst youtubeColor = \"#e52d27\";\nconst tumblrColor = \"#35465c\";\nconst behanceColor = \"#1769ff\";\nconst dribbbleColor = \"#ea4c89\";\nconst redditColor = \"#ff4500\";\n\nconst boxShadow = {\n  boxShadow:\n    \"0 10px 30px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 4px 25px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\"\n};\n\nconst primaryBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(primaryColor[0]) +\n    \",.4)\"\n};\nconst infoBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(infoColor[0]) +\n    \",.4)\"\n};\nconst successBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(successColor[0]) +\n    \",.4)\"\n};\nconst warningBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(warningColor[0]) +\n    \",.4)\"\n};\nconst dangerBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(dangerColor[0]) +\n    \",.4)\"\n};\nconst roseBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(roseColor[0]) +\n    \",.4)\"\n};\n\nconst warningCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\n  ...warningBoxShadow\n};\nconst successCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\n  ...successBoxShadow\n};\nconst dangerCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\n  ...dangerBoxShadow\n};\nconst infoCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\n  ...infoBoxShadow\n};\nconst primaryCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\n  ...primaryBoxShadow\n};\nconst roseCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\n  ...roseBoxShadow\n};\n\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n  borderRadius: \"6px\",\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n  background: whiteColor\n};\n\nconst cardActions = {\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid \" + grayColor[8],\n  height: \"auto\",\n  ...defaultFont\n};\n\nconst cardHeader = {\n  margin: \"-20px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\"\n};\n\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow:\n    \"0 10px 20px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 3px 20px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\"\n};\n\nconst tooltip = {\n  padding: \"10px 15px\",\n  minWidth: \"130px\",\n  color: whiteColor,\n  lineHeight: \"1.7em\",\n  background: \"rgba(\" + hexToRgb(grayColor[6]) + \",0.9)\",\n  border: \"none\",\n  borderRadius: \"3px\",\n  opacity: \"1!important\",\n  boxShadow:\n    \"0 8px 10px 1px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.14), 0 3px 14px 2px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 5px 5px -3px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\",\n  maxWidth: \"200px\",\n  textAlign: \"center\",\n  fontFamily: '\"Helvetica Neue\",Helvetica,Arial,sans-serif',\n  fontSize: \"12px\",\n  fontStyle: \"normal\",\n  fontWeight: \"400\",\n  textShadow: \"none\",\n  textTransform: \"none\",\n  letterSpacing: \"normal\",\n  wordBreak: \"normal\",\n  wordSpacing: \"normal\",\n  wordWrap: \"normal\",\n  whiteSpace: \"normal\",\n  lineBreak: \"auto\"\n};\n\nconst title = {\n  color: grayColor[2],\n  textDecoration: \"none\",\n  fontWeight: \"300\",\n  marginTop: \"30px\",\n  marginBottom: \"25px\",\n  minHeight: \"32px\",\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n  \"& small\": {\n    color: grayColor[1],\n    fontSize: \"65%\",\n    fontWeight: \"400\",\n    lineHeight: \"1\"\n  }\n};\n\nconst cardTitle = {\n  ...title,\n  marginTop: \"0\",\n  marginBottom: \"3px\",\n  minHeight: \"auto\",\n  \"& a\": {\n    ...title,\n    marginTop: \".625rem\",\n    marginBottom: \"0.75rem\",\n    minHeight: \"auto\"\n  }\n};\n\nconst cardSubtitle = {\n  marginTop: \"-.375rem\"\n};\n\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\"\n  }\n};\n\nexport {\n  hexToRgb,\n  //variables\n  drawerWidth,\n  drawerMiniWidth,\n  transition,\n  container,\n  containerFluid,\n  boxShadow,\n  card,\n  defaultFont,\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  blackColor,\n  whiteColor,\n  twitterColor,\n  facebookColor,\n  googleColor,\n  linkedinColor,\n  pinterestColor,\n  youtubeColor,\n  tumblrColor,\n  behanceColor,\n  dribbbleColor,\n  redditColor,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  cardActions,\n  cardHeader,\n  defaultBoxShadow,\n  tooltip,\n  title,\n  cardTitle,\n  cardSubtitle,\n  cardLink\n};\n","import React, {useEffect} from 'react'\nimport CIcon from '@coreui/icons-react'\nimport { freeSet } from '@coreui/icons'\nimport {SERVER_URL} from \"../constants\";\nimport AllMenu from \"../views/Administration/masterBuilder/MenuMapping/AllMenu\";\nimport render from \"enzyme/src/render\";\n//var menu = [];\n/*if(localStorage.getItem(\"workflows\") !== null){\nJSON.parse(localStorage.getItem(\"workflows\")).map(process =>\n  { menu = menu.concat({\n    _tag: 'CSidebarNavItem',\n    name: process.name,\n    icon: 'cil-border-all',\n    to: '/process/instances/'+process.id+\"_\"+process.name,\n  })\n  }\n)};*/\nvar menu = []\n\nexport default[\n\n{\n    _tag: 'CSidebarNavItem',\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,\n    badge: {\n      color: 'info',\n      text: 'NEW',\n    }\n  },\n  {\n    _tag: 'CSidebarNavDropdown',\n    name: 'Administration',\n    icon: 'cil-puzzle',\n    _children: [\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Form Builder',\n        icon: 'cil-grid',\n        to: '/admin/form/list',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Workflow Builder',\n        icon: 'cil-graph',\n        to: '/admin/workflow/list',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Master Builder',\n        icon: 'cil-options',\n        to: '/admin/master/list',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Notification Builder',\n        icon: 'cil-bell',\n        to: '/admin/notification/list',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Script Builder',\n        icon: 'cil-code',\n        to: '/admin/script/list',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Print Builder',\n        icon: 'cil-print',\n        to: '/admin/print/list',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Report Builder',\n        icon: 'cil-chart-pie',\n        to: '/admin/report/list',\n      },\n\n    ],\n  },\n  {\n    _tag: 'CSidebarNavDropdown',\n    name: 'IMS',\n    icon: 'cil-home',\n    _children: [\n      {_tag: 'CSidebarNavDropdown',\n        name: 'QMS',\n        icon:'cil-settings',\n      //  _children: menu\n      }\n    ],\n  },\n  {\n    _tag: 'CSidebarNavDropdown',\n    name: 'Masters',\n    icon: 'cil-home',\n    _children: [\n      {_tag: 'CSidebarNavDropdown',\n        name: 'QMS',\n        icon:'cil-settings',\n       // _children: menu\n      }\n    ],\n  },\n\n  {\n    _tag: 'CSidebarNavDropdown',\n    name: 'Base',\n    route: '/base',\n    icon: 'cil-puzzle',\n    _children: [\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Breadcrumb',\n        to: '/base/breadcrumbs',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Cards',\n        to: '/base/cards',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Carousel',\n        to: '/base/carousels',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Collapse',\n        to: '/base/collapses',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Forms',\n        to: '/base/forms',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Jumbotron',\n        to: '/base/jumbotrons',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'List group',\n        to: '/base/list-groups',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Navs',\n        to: '/base/navs',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Navbars',\n        to: '/base/navbars',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Pagination',\n        to: '/base/paginations',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Popovers',\n        to: '/base/popovers',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Progress',\n        to: '/base/progress-bar',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Switches',\n        to: '/base/switches',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Tables',\n        to: '/base/tables',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Tabs',\n        to: '/base/tabs',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Tooltips',\n        to: '/base/tooltips',\n      },\n    ],\n  },\n  {\n    _tag: 'CSidebarNavDropdown',\n    name: 'Buttons',\n    route: '/buttons',\n    icon: 'cil-cursor',\n    _children: [\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Buttons',\n        to: '/buttons/buttons',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Brand buttons',\n        to: '/buttons/brand-buttons',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Buttons groups',\n        to: '/buttons/button-groups',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Dropdowns',\n        to: '/buttons/button-dropdowns',\n      }\n    ],\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Charts',\n    to: '/charts',\n    icon: 'cil-chart-pie'\n  },\n  {\n    _tag: 'CSidebarNavDropdown',\n    name: 'Icons',\n    route: '/icons',\n    icon: 'cil-star',\n    _children: [\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'CoreUI Free',\n        to: '/icons/coreui-icons',\n        badge: {\n          color: 'success',\n          text: 'NEW',\n        },\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'CoreUI Flags',\n        to: '/icons/flags',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'CoreUI Brands',\n        to: '/icons/brands',\n      },\n    ],\n  },\n  {\n    _tag: 'CSidebarNavDropdown',\n    name: 'Notifications',\n    route: '/notifications',\n    icon: 'cil-bell',\n    _children: [\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Alerts',\n        to: '/notifications/alerts',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Badges',\n        to: '/notifications/badges',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Modal',\n        to: '/notifications/modals',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Toaster',\n        to: '/notifications/toaster'\n      }\n    ]\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Widgets',\n    to: '/widgets',\n    icon: 'cil-calculator',\n    badge: {\n      color: 'info',\n      text: 'NEW',\n    },\n  },\n  {\n    _tag: 'CSidebarNavDivider'\n  },\n  {\n    _tag: 'CSidebarNavTitle',\n    _children: ['Extras'],\n  },\n  {\n    _tag: 'CSidebarNavDropdown',\n    name: 'Pages',\n    route: '/pages',\n    icon: 'cil-star',\n    _children: [\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Login',\n        to: '/login',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Register',\n        to: '/register',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Error 404',\n        to: '/404',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Error 500',\n        to: '/500',\n      },\n    ],\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Disabled',\n    icon: 'cil-ban',\n    badge: {\n      color: 'secondary',\n      text: 'NEW',\n    },\n    addLinkClass: 'c-disabled',\n    'disabled': true\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-2'\n  },\n  {\n    _tag: 'CSidebarNavTitle',\n    _children: ['Labels']\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Label danger',\n    to: '',\n    icon: {\n      name: 'cil-star',\n      className: 'text-danger'\n    },\n    label: true\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Label info',\n    to: '',\n    icon: {\n      name: 'cil-star',\n      className: 'text-info'\n    },\n    label: true\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Label warning',\n    to: '',\n    icon: {\n      name: 'cil-star',\n      className: 'text-warning'\n    },\n    label: true\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-2'\n  }\n]\n\n","import React, {useEffect} from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem, CImg,\n} from '@coreui/react'\nimport Image from '../assets/img/ISCT-Group.png';\nimport CIcon from '@coreui/icons-react'\n\n// sidebar nav\nimport navigation from './_nav'\nimport {whiteColor} from \"../assets/jss/material-dashboard-pro-react\";\nimport {blueGrey, grey} from \"@material-ui/core/colors\";\nimport {MASTER_QMS_SUBMENU_SERVICE,IMS_QMS_SUBMENU_SERVICE, IMS_MENU_SERVICE, MASTER_MENU_SERVICE, MENU_SERVICE, SERVER_URL} from \"../constants\";\nimport {getAuthed, getLocalToken, renewAccessTokenIfGoingExpire} from \"../utils\";\nimport UserImage from \"../views/Administration/users/img/user.png\";\n\n\nconst TheSidebar = (props) => {\n\n  const dispatch = useDispatch()\n  const show = useSelector(state => state.sidebarShow)\n  const [menu, setMenu] = React.useState([]);\n  const [workflowMasterAdded, setWorkflowMasterAdded] = React.useState(localStorage.getItem(\"workflowMasterAdded\"));\n    const [image, setImage] = React.useState(null);\n    const [domainName, setDomainName] = React.useState(\"\");\n\n    const history = useHistory()\n    //const token = getLocalToken();\n   useEffect(  ()=>{\n       if(JSON.parse(localStorage.getItem('domain_data')) === null){\n           history.push(\"/domain\");\n       }else{\n           setDomainName(JSON.parse(localStorage.getItem('domain_data')).domainName)\n           var domain_name = JSON.parse(localStorage.getItem('domain_data')).domainName\n           var img = null\n           const domain_image = localStorage.getItem('domain_image')\n\n           if(domain_image !== \"\" ){\n               if(domain_image.includes(\"data:image/\")){\n                   img = domain_image;\n               }else{\n                   img = \"data:image/png;base64,\"+domain_image;\n               }\n           }else{\n               img = Image;\n           }\n           setImage(img)\n           var username = localStorage.getItem(\"username\")\n           var masters_tab = [];\n           var ims_tab = [];\n           async function getAllMenu (){\n               /*getAllImsMenu()\n               getAllMastersMenu()*/\n               const get_header = {\n                   method: 'GET',\n                   headers: {\n                       \"X-Tenant\": domain_name,\n                       'Content-Type': 'application/json',\n                       \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n                   }\n               };\n               await fetch(MENU_SERVICE + '/api/menu/auth/allMenu/'+username, get_header)\n                   .then(response => {\n                           return new Promise((resolve, reject) => {\n                               console.log(response)\n                               if(response.status !== 200){\n                                   history.push(\"/domain\")\n                               }else{\n                                   response.text().then(body => {\n                                       resolve(\n                                           body.length ? JSON.parse(body) : null\n                                       );\n                                   }).catch(err => {\n                                       reject(err);\n                                   });\n                               }\n                           });\n                       }\n                       //     console.log(response.json())\n                       //  console.log(response)\n                   )\n                   .then( data => {\n                       if(data !== null){\n                           /////////////////////////////////////////////////////////////////////\n                           const  ims = JSON.parse(data.menu_ims)\n                           const ims_menu =JSON.parse(ims.menu)\n                           const ims_sub_menu =JSON.parse(ims.submenu);\n                           var ims_item = {};\n                           ims_menu.map((ims_val, index) => {\n                               ims_item.name = ims_val.name;\n                               ims_item._tag = ims_val._tag;\n                               ims_item.icon = <CIcon name={ims_val.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                               if (ims_val._tag === \"CSidebarNavItem\") {\n                                   ims_item.to = ims_val.to;\n                               } else {\n                                   // imsMenu(ims_val.id, ims_item)\n                                   const children = ims_sub_menu[index];\n                                   let childNavTab = [];\n                                   let childNavItem = {};\n                                   children.map(child => {\n                                       childNavItem._tag = child._tag;\n                                       childNavItem.name = child.name;\n                                       childNavItem.icon = <CIcon name={child.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                                       childNavItem.to = child.to;\n                                       childNavItem.exact= false;\n                                       childNavTab.push(childNavItem)\n                                       childNavItem = {};\n                                   })\n                                   ims_item._children = childNavTab;\n                               }\n                               ims_tab.push(ims_item);\n                               ims_item = {};\n                           })\n                           /////////////////////////////////////////////////////////////////////////////\n                           const masters_menu = JSON.parse(JSON.parse(data.menu_master).menu);\n                           const masters_submenu = JSON.parse(JSON.parse(data.menu_master).submenu);\n                           var masters_item = {};\n\n                           masters_menu.map((masters_val, index) => {\n\n                               masters_item.name = masters_val.name;\n                               masters_item._tag = masters_val._tag;\n                               masters_item.icon = <CIcon name={masters_val.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                               if (masters_val._tag === \"CSidebarNavItem\"){\n                                   masters_item.to = masters_val.to;\n                               }else {\n                                   const childrenMaster = masters_submenu[index];\n                                   let childMasterNavTab = [];\n                                   let childMasterNavItem = {};\n                                   childrenMaster.map(child => {\n                                       childMasterNavItem._tag = child._tag;\n                                       childMasterNavItem.name = child.name;\n                                       childMasterNavItem.icon = <CIcon name={child.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                                       childMasterNavItem.to = child.to;\n                                       childMasterNavTab.push(childMasterNavItem)\n                                       childMasterNavItem = {};\n                                   })\n                                   masters_item._children = childMasterNavTab;\n                                   // masterMenu( masters_val.id, masters_item)\n\n                               }\n                               masters_tab.push(masters_item);\n                               masters_item = {};\n                           })\n\n                           ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                           var tab = JSON.parse(JSON.parse(data.menu).menu);\n                           var navTab = [];\n                           var navItem ={};\n\n                           const roles = JSON.parse(localStorage.getItem(\"userRoles\"))\n                           const permissions = JSON.parse(localStorage.getItem(\"userPermissions\"))\n                           console.log(roles)\n                           console.log(permissions)\n                           const permissionTab = []\n\n                           if(permissions.length ){\n                               permissions.map(rolePermissions =>{\n                                   rolePermissions.map(permission =>{\n                                       permissionTab.push(permission.key)\n                                   })\n                               })\n\n                           }\n\n\n                           const menuList = JSON.parse(JSON.parse(data.menu).menu)\n                           menuList.map(nav =>{\n                               if( roles !== null && permissions !== null){\n                                   if(nav.name === \"Administration\" ){\n                                       if(permissionTab.includes(nav.key)){\n                                           const childrens = nav._children\n                                           navItem._tag = nav._tag;\n                                           navItem.name = nav.name;\n                                           navItem.icon = <CIcon name={nav.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                                           if(nav._tag !== \"CSidebarNavItem\"){\n                                               const children = nav._children;\n                                               var childNavTab = [];\n                                               var childNavItem ={};\n\n\n                                               children.map(child =>{\n                                                   if(permissionTab.includes(child.key)) {\n                                                       childNavItem._tag = child._tag;\n                                                       childNavItem.name = child.name;\n                                                       childNavItem.icon =\n                                                           <CIcon name={child.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                                                       if (child._tag === \"CSidebarNavItem\") {\n                                                           childNavItem.to = child.to;\n                                                           childNavTab.push(childNavItem)\n                                                           childNavItem = {};\n                                                       }\n                                                   }\n                                               })\n                                               navItem._children = childNavTab;\n                                           }else{\n                                               navItem.to = nav.to;\n                                           }\n                                           navTab.push(navItem)\n                                           navItem = {};\n\n\n\n                                       }\n                                   }else{\n                                       navItem._tag = nav._tag;\n                                       navItem.name = nav.name;\n                                       navItem.icon = <CIcon name={nav.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                                       if(nav._tag !== \"CSidebarNavItem\"){\n                                           const children = nav._children;\n                                           var childNavTab = [];\n                                           var childNavItem ={};\n                                           children.map(child =>{\n                                               childNavItem._tag = child._tag;\n                                               childNavItem.name = child.name;\n                                               childNavItem.icon = <CIcon name={child.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n\n                                               if (nav.name === \"SGI\" && child.name === \"QMS\") {\n                                                   childNavItem._children = ims_tab;\n                                               }\n                                               if (nav.name === \"Maîtres\" && child.name === \"QMS\") {\n                                                   childNavItem._children = masters_tab;\n                                               }\n                                               childNavTab.push(childNavItem)\n                                               childNavItem = {};\n\n                                           })\n                                           navItem._children = childNavTab;\n                                       }else{\n                                           navItem.to = nav.to;\n                                       }\n                                       navTab.push(navItem)\n                                       navItem = {};\n                                   }\n\n                                   /*console.log(roles[0].roleId)\n                                   console.log(permissions[0])*/\n                               }\n\n                           })\n                           // menu = navTab;\n                           setMenu(navTab)\n                       }\n                   })\n\n           }\n           getAllMenu()\n       }\n   }, [workflowMasterAdded])\n /*const fetchData = async () =>  {\n   console.log(token)\n   console.log(localStorage.getItem('domain_data'))\n    if (token !== undefined && token !== null) {\n    if(JSON.parse(localStorage.getItem('domain_data')) !== null){\n         const domainId = JSON.parse(localStorage.getItem('domain_data')).domainId;\n         let result = await getAuthed(SERVER_URL + '/api/form/getAll', domainId);\n         console.log(result)\n         if(result !== 200){\n          localStorage.clear();\n          history.push(\"/domain\");\n       }\n       }else{\n           localStorage.clear();\n           history.push(\"/domain\");\n       }\n\n       }\n       else{\n         localStorage.clear();\n         history.push(\"/domain\");\n       }\n       }\n       fetchData();*/\n/*\nasync function fetchData() {\n            console.log(localStorage.getItem(\"username\"))\n            if (localStorage.getItem(\"username\") === null) {\n                        props.history.push(\"/domain\");\n                      } else {\n                        let token = getLocalToken();\n                        console.log(token)\n                        if (token) {\n                          const domainId = JSON.parse(localStorage.getItem('domain_data')).domainId;\n                          let result = await getAuthed(SERVER_URL + '/api/form/getAll', domainId);\n                          console.log(result)\n                          if(result !== 200){\n                           localStorage.clear();\n                           props.history.push(\"/domain\");\n                        }\n                      }else{\n                         console.log(token)\n                         localStorage.clear();\n                         props.history.push(\"/domain\");}\n                      }\n                      }\n                      fetchData();\n*/\n\n\n     /*async function getAllImsMenu() {\n       await fetch(IMS_MENU_SERVICE + '/api/menu/auth/allImsMenu/'+username)\n           .then(response => {\n                 return new Promise((resolve, reject) => {\n                   response.text().then(body => {\n                     resolve(\n                         body.length ? JSON.parse(body) : null\n                     );\n                   }).catch(err => {\n                     reject(err);\n                   });\n                 });\n               }\n               //     console.log(response.json())\n               //  console.log(response)\n           )\n           .then(sgi_data => {\n            /!* const ims_menu = JSON.parse(sgi_data.menu);\n             var ims_item = {};\n             ims_menu.map(ims_val => {\n               ims_item.name = ims_val.name;\n               ims_item._tag = ims_val._tag;\n               ims_item.icon = <CIcon name={ims_val.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n               if (ims_val._tag === \"CSidebarNavItem\"){\n                 ims_item.to = ims_val.to;\n               }else {\n                 const children = ims_val._children;\n                 let childNavTab = [];\n                 let childNavItem = {};\n                 children.map(child => {\n                   childNavItem._tag = child._tag;\n                   childNavItem.name = child.name;\n                   childNavItem.icon = <CIcon name={child.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                   childNavItem.to = child.to;\n                   childNavTab.push(childNavItem)\n                   childNavItem = {};\n                 })\n                 ims_item._children = childNavTab;\n               }\n               ims_tab.push(ims_item);\n               ims_item = {};*!/\n         //    })\n             //   console.log(ims_tab)\n           })\n     }*/\n/*\n   async function getAllMastersMenu(){\n      await fetch(MASTER_MENU_SERVICE + '/api/menu/auth/allMastersMenu/'+username)\n         .then(response => {\n               return new Promise((resolve, reject) => {\n                 response.text().then(body => {\n                   resolve(\n                       body.length ? JSON.parse(body) : null\n                   );\n                 }).catch(err => {\n                   reject(err);\n                 });\n               });\n             }\n             //     console.log(response.json())\n             //  console.log(response)\n         )\n         .then(masters_data => {\n          /!* const masters_menu = JSON.parse(masters_data.menu);\n           var masters_item = {};\n\n           masters_menu.map(masters_val => {\n             masters_item.name = masters_val.name;\n             masters_item._tag = masters_val._tag;\n             masters_item.icon = <CIcon name={masters_val.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n             if (masters_val._tag === \"CSidebarNavItem\"){\n               masters_item.to = masters_val.to;\n             }else {\n               const childrenMaster = masters_val._children;\n               let childMasterNavTab = [];\n               let childMasterNavItem = {};\n               childrenMaster.map(child => {\n                 childMasterNavItem._tag = child._tag;\n                 childMasterNavItem.name = child.name;\n                 childMasterNavItem.icon = <CIcon name={child.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                 childMasterNavItem.to = child.to;\n                 childMasterNavTab.push(childMasterNavItem)\n                 childMasterNavItem = {};\n               })\n               masters_item._children = childMasterNavTab;\n             }\n             masters_tab.push(masters_item);\n             masters_item = {};\n           })\n*!/\n           // console.log(childNavItem)\n         })\n   }*/\n\n\n\n    /* async function imsMenu(ims_menu_id,ims_item ){\n         await fetch(IMS_QMS_SUBMENU_SERVICE + '/api/menu/auth/getByImsQmsMenuId/'+ims_menu_id)\n             .then(response => {\n                     return new Promise((resolve, reject) => {\n                         response.text().then(body => {\n                             resolve(\n                                 body.length ? JSON.parse(body) : null\n                             );\n                         }).catch(err => {\n                             reject(err);\n                         });\n                     });\n                 }\n                 //     console.log(response.json())\n                 //  console.log(response)\n             )\n             .then(data => {\n                 const children = JSON.parse(data._children);\n                 let childNavTab = [];\n                 let childNavItem = {};\n                 children.map(child => {\n                     childNavItem._tag = child._tag;\n                     childNavItem.name = child.name;\n                     childNavItem.icon = <CIcon name={child.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                     childNavItem.to = child.to;\n                     childNavTab.push(childNavItem)\n                     childNavItem = {};\n                 })\n                 ims_item._children = childNavTab;\n             })\n     }\n     async function masterMenu(master_menu_id, masters_item){\n         await fetch(MASTER_QMS_SUBMENU_SERVICE + '/api/menu/auth/getByMasterQmsMenuId/'+master_menu_id)\n             .then(response => {\n                     return new Promise((resolve, reject) => {\n                         response.text().then(body => {\n                             resolve(\n                                 body.length ? JSON.parse(body) : null\n                             );\n                         }).catch(err => {\n                             reject(err);\n                         });\n                     });\n                 }\n                 //     console.log(response.json())\n                 //  console.log(response)\n             )\n             .then(data => {\n                 const childrenMaster = JSON.parse(data._children);\n                 let childMasterNavTab = [];\n                 let childMasterNavItem = {};\n                 childrenMaster.map(child => {\n                     childMasterNavItem._tag = child._tag;\n                     childMasterNavItem.name = child.name;\n                     childMasterNavItem.icon = <CIcon name={child.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                     childMasterNavItem.to = child.to;\n                     childMasterNavTab.push(childMasterNavItem)\n                     childMasterNavItem = {};\n                 })\n                 masters_item._children = childMasterNavTab;\n             })\n     }*/\n\n\n\n  return (\n    <CSidebar\n      show={show}\n      onShowChange={(val) => dispatch({type: 'set', sidebarShow: val  })}\n\n    >\n        <CSidebarBrand className=\"d-md-down-none\" to=\"/\" style={{backgroundColor:whiteColor}}>\n          <CImg src={image}\n                height={56}\n          />\n      </CSidebarBrand>\n      <CSidebarNav>\n        <CCreateElement style={{whiteSpace: \"break-spaces !important\" }}\n          items={menu}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle\n          }}\n        />\n      </CSidebarNav>\n    {/*  <CSidebarMinimizer className=\"c-d-md-down-none\"/>*/}\n    </CSidebar>\n  )\n}\n\nexport default React.memo(TheSidebar)\n","import React, {useEffect} from 'react'\nimport {\n  TheContent,\n  TheSidebar,\n  TheFooter,\n  TheHeader\n} from './index'\nimport socketIOClient from \"socket.io-client\";\nimport {useHistory} from \"react-router-dom\";\nimport {getAuthed, getLocalToken, getDecodedAccessToken} from \"../utils\";\nimport {SERVER_URL} from \"../constants\";\nimport jwt_decode from \"jwt-decode\";\n\nconst TheLayout = () => {\n    const history = useHistory()\n    const token = getLocalToken();\n\n  return (\n    <div className=\"c-app c-default-layout\">\n      <TheSidebar/>\n      <div className=\"c-wrapper\">\n        <TheHeader/>\n        <div className=\"c-body\">\n          <TheContent/>\n        </div>\n        <TheFooter/>\n      </div>\n    </div>\n  )\n}\n\nexport default TheLayout\n","import React, {useEffect} from 'react'\nimport { useHistory } from \"react-router\";\n\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CImg\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport socketIOClient from \"socket.io-client\";\nimport {SERVER_URL, USER_SERVICE} from \"../constants\";\nimport UserImage from \"../views/Administration/users/img/user.png\";\n\n\nconst TheHeaderDropdown = (props) => {\n  const history = useHistory();\nconst [username,setUsername]=React.useState(\"\");\nconst [domainName,setDomainName]=React.useState(\"\");\nconst [userImage,setUserImage]=React.useState(localStorage.getItem(\"image\"));\n  useEffect(()=> {\n    var img = null\n    if (localStorage.getItem('domain_data') === null) {\n      localStorage.clear();\n      history.push(\"/domain\");\n    } else {\n      setUsername(localStorage.getItem(\"username\"))\n      setDomainName(JSON.parse(localStorage.getItem(\"domain_data\")).domainName)\n      const domain = JSON.parse(localStorage.getItem(\"domain_data\")).domainName\n      const header_data = {\n        method: 'GET',\n        headers: {\n          \"X-Tenant\": domain,\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n      };\n      fetch(USER_SERVICE + \"/api/auth/user/getUserByUsername/\"+localStorage.getItem(\"username\"),header_data)\n          .then((response) => {\n            return response.json();\n          })\n          .then(data => {\n\n            const user = JSON.parse(data.user);\n\n            if (data.photo) {\n              img = \"data:image/png;base64,\" + data.photo;\n            } else {\n              img = 'img/user.png';\n            }\n            setUserImage(img)\n          })\n    }\n  },[userImage])\n\n  const handleLogout = () => {\n    localStorage.clear();\n    global.localStorage.clear();\n    history.push(\"/domain\");\n  }\n  return (\n    <CDropdown\n      inNav\n      className=\"c-header-nav-items mx-2\"\n      direction=\"down\"\n    >\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n        <div className=\"c-avatar\">\n          <CImg\n            src={userImage}\n            className=\"c-avatar-img\"\n            alt=\"img\"\n          />\n        </div>\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n          className=\"text-center\"\n        >\n          <strong>Account</strong>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-home\" className=\"mfe-2\" />\n          {domainName}\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-user\" className=\"mfe-2\" />\n          {username}\n        </CDropdownItem>\n       {/* <CDropdownItem>\n          <CIcon name=\"cil-envelope-open\" className=\"mfe-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-task\" className=\"mfe-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-comment-square\" className=\"mfe-2\" />\n          Comments\n          <CBadge color=\"warning\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>*/}\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n          className=\"text-center\"\n        >\n          <strong>Settings</strong>\n        </CDropdownItem>\n        <CDropdownItem href={'#/user/preview/'+username} >\n          <CIcon name=\"cil-user\" className=\"mfe-2\" />Profile\n        </CDropdownItem>\n        <CDropdownItem  href={'#/user/change/pwd'} >\n          <CIcon name=\"cil-settings\" className=\"mfe-2\" />\n          Changer le mot de passe\n        </CDropdownItem>\n        {/*<CDropdownItem>\n          <CIcon name=\"cil-settings\" className=\"mfe-2\" />\n          Paramétrage\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-credit-card\" className=\"mfe-2\" />\n          Paiement\n          <CBadge color=\"secondary\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>*/}\n       {/* <CDropdownItem>\n          <CIcon name=\"cil-file\" className=\"mfe-2\" />\n          Projects\n          <CBadge color=\"primary\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem divider />*/}\n\n        <CDropdownItem onClick={handleLogout}>\n          <CIcon name=\"cil-lock-locked\" className=\"mfe-2\" />\n            Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default TheHeaderDropdown\n","import React, {useEffect} from \"react\";\nimport {SERVER_URL, MENU_SERVICE, MASTER_SERVICE} from \"../../../../constants\";\n\nconst AllMenu = () => {\n    const [menu, setMenu] = React.useState([]);\n    const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n\n    useEffect(()=>{\n        const menu_data = {\n            method: 'GET',\n            headers: {\n                \"X-Tenant\": domainName,\n                'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n            }\n        };\n        fetch(MENU_SERVICE + '/api/menu/auth/allMenu', menu_data)\n            .then(response => {\n                    return new Promise((resolve, reject) => {\n                        response.text().then(body => {\n                            resolve(\n                                body.length ? JSON.parse(body) : null\n                            );\n                        }).catch(err => {\n                            reject(err);\n                        });\n                    });\n                }\n                //     console.log(response.json())\n                //  console.log(response)\n            )\n            .then(data => {\n                // alert(data)\n                console.log(JSON.parse(data.menu))\n                setMenu(JSON.parse(data.menu));\n                // setMenu(data)\n            })\n    },[])\n return (<div>{menu}</div>)\n}\nexport default AllMenu;","import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","export default __webpack_public_path__ + \"static/media/user.921dff75.png\";"],"sourceRoot":""}