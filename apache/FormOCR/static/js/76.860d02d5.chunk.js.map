{"version":3,"sources":["views/Administration/users/ViewProfile.js"],"names":["ViewProfile","props","useState","firstname","setFirstname","lastname","setLastname","email","setEmail","phone","setPhone","username","setUsername","photo","setPhoto","React","JSON","parse","localStorage","getItem","domainId","domainName","usernameAdmin","setUsernameAdmin","useRef","userRoles","setUserRoles","selectedRoles","setSelectedRoles","useEffect","match","params","get_header","method","headers","fetch","USER_SERVICE","then","response","json","data","rolesFromApi","map","role","push","name","roleName","key","checked","default","catch","error","console","log","user","img","UserImage","firstName","lastName","roles","selectedList","activeTab","variant","data-tab","noValidate","style","marginTop","row","className","sm","md","src","id","width","htmlFor","disabled","value","margin","inputId","some","item","position","xs","col","xl","block","color","onClick","history"],"mappings":"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","file":"static/js/76.860d02d5.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n// import { Form, Field } from 'react-final-form';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Calendar } from 'primereact/calendar';\nimport { Password } from 'primereact/password';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Dialog } from 'primereact/dialog';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { Toast } from 'primereact/toast';\nimport { FileUpload } from 'primereact/fileupload';\nimport { ProgressBar } from 'primereact/progressbar';\nimport { Tooltip } from 'primereact/tooltip';\nimport { Tag } from 'primereact/tag';\nimport './img css/imgStyle.scss';\nimport axios from 'axios';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CForm,\n    CFormGroup,\n    CInput,\n    CInvalidFeedback,\n    CLabel, CNav, CNavItem, CNavLink,\n    CRow, CTabContent, CTabPane, CTabs\n} from \"@coreui/react\";\nimport Select from \"@material-ui/core/Select\";\nimport {Cancel,Edit, Save} from \"@material-ui/icons\";\nimport {SERVER_URL, USER_SERVICE, PROFILE_IMG_UPLOAD_URL} from \"../../../constants\";\nimport UserImage from \"./img/user.png\"\nimport Editor from \"@monaco-editor/react\";\n//import './FormDemo.css';\n\nconst ViewProfile = (props) => {\n    // const [countries, setCountries] = useState([]);\n    const [showMessage, setShowMessage] = useState(false);\n    const [checked, setChecked] = useState(false);\n    const [firstname, setFirstname] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [usernameState, setUsernameState] = useState(\"\");\n    const [usernameError, setUsernameError] = useState(\"\");\n    const [lastnameState, setLastnameState] = useState(\"\");\n    const [lastnameError, setLastnameError] = useState(\"\");\n    const [firstnameError, setFirstnameError] = useState(\"\");\n    const [firstnameState, setFirstnameState] = useState(\"\");\n    const [emailState, setEmailState] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\");\n    const [phoneState, setPhoneState] = useState(\"\");\n    const [phoneError, setPhoneError] = useState(\"\");\n    const [passwordState, setPasswordState] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [photo, setPhoto] = useState(null);\n    const [formData, setFormData] = useState({});\n    const [domainId, setDomainId] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainId);\n    const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n    const [usernameAdmin, setUsernameAdmin] = React.useState(localStorage.getItem('username'));\n    // const countryservice = new CountryService();\n    const [totalSize, setTotalSize] = useState(0);\n    const toast = useRef(null);\n    const fileUploadRef = useRef(null);\n    const [userRoles, setUserRoles] = React.useState([]);\n    const [selectedRoles, setSelectedRoles] = useState([]);\n\n\n    useEffect(() => {\n        const {username} = props.match.params;\n        setUsernameAdmin(username)\n        const get_header = {\n            method: 'GET',\n            headers: {\n                \"X-Tenant\": domainName,\n                'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n            }\n        };\n        fetch(USER_SERVICE + \"/api/auth/role/getRoles\", get_header)\n            .then((response) => {\n                return response.json();\n            })\n            .then(data => {\n                var rolesFromApi = [];\n                var selectedList = [];\n                data.map(role => {\n                    rolesFromApi.push({\n                        name : role.roleName,\n                        key : role.roleName,\n                        checked: role.default\n                    })\n\n                })\n\n                // setSelectedRoles(selectedList);\n                setUserRoles(rolesFromApi);\n\n            }).catch(error => {\n            console.log(error);\n        });\n\n\n        /*const data = {\n            method: 'POST',\n            headers: {\n                \"Authorization\": \"Bearer \" + localStorage.getItem('Authorization')\n            },\n            body: JSON.stringify({userId: userId})\n        };*/\n        fetch(USER_SERVICE + \"/api/auth/user/getUserByUsername/\"+username, get_header)\n            .then((response) => {\n                return response.json();\n            })\n            .then(data => {\n\n                console.log(data)\n                const user = JSON.parse(data.user);\n                var img = null\n                if(data.photo){\n                    img = \"data:image/png;base64,\"+data.photo;\n                }else{\n                    img = UserImage;\n                }\n\n                setUsername(user.username)\n                setFirstname(user.firstName)\n                setLastname(user.lastName)\n                setPhone(user.phone)\n                setEmail(user.email)\n                setPhoto(img);\n                const roles = user.roles;\n                var selectedList = []\n                roles.map(role =>{\n                    selectedList.push({\n                        name : role.roleName,\n                        key : role.roleName,\n                        checked: role.default\n                    })\n                })\n                setSelectedRoles(selectedList)\n            })\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n\n\n    const EditProfile = () =>{\n        props.history.push(\"/user/edit/\"+usernameAdmin);\n    }\n    return (\n        <>\n            <CCard>\n                <CCardHeader>\n                    <h3>Profile</h3>\n                </CCardHeader>\n\n                <CCardBody>\n                    <CTabs activeTab=\"user\">\n                        <CNav variant=\"tabs\">\n                            <CNavItem>\n                                <CNavLink data-tab=\"user\">\n                                    Information d'utilisateur\n                                </CNavLink>\n                            </CNavItem>\n                            <CNavItem>\n                                <CNavLink data-tab=\"role\">\n                                    Roles\n                                </CNavLink>\n                            </CNavItem>\n                        </CNav>\n                        <CTabContent>\n                            <CTabPane data-tab=\"user\">\n                                <CForm  noValidate style={{marginTop: \"20px\"}}>\n                                    <CFormGroup row className=\"my-0\">\n                                        <CCol sm={12} md={6}>\n                                            <div className=\"profile-pic\" >\n                                                {/* <label className=\"-label\" htmlFor=\"file\" >\n                                                    <i style={{fontWeight:\"bold\"}} className=\"pi pi-camera\"></i>\n                                                    <span style={{fontWeight:\"bold\"}}>Changer l'image</span>\n                                                </label>*/}\n                                                {/* <input id=\"file\" type=\"file\" onChange={event => loadFile(event)} />*/}\n\n                                                <img src={photo} id=\"output\"\n                                                     width=\"200\"/>\n                                            </div>\n                                        </CCol>\n                                        <CCol sm={12} md={6}>\n                                            <div className=\"row\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"lastname\">Nom</CLabel>\n                                                    <CInput   id=\"lastname\"\n                                                              disabled\n                                                              value={lastname} />\n\n                                                </CFormGroup>\n                                            </div>\n                                            <div className=\"row\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"firstname\">Prénom</CLabel>\n                                                    <CInput style={{width:\"100%\"}} id=\"firstname\"\n                                                            disabled\n                                                            value={firstname} />\n\n                                                </CFormGroup>\n                                            </div>\n                                        </CCol>\n                                    </CFormGroup>\n\n                                    <CFormGroup row className=\"my-0\">\n                                        <CCol sm={12} md={6}>\n                                            <CFormGroup>\n                                                <CLabel htmlFor=\"username\">Nom d'utilisateur</CLabel>\n                                                <CInput\n                                                    id=\"username\"\n                                                    disabled\n                                                    value={username}\n                                                />\n\n                                            </CFormGroup>\n                                        </CCol>\n                                        <CCol sm={12} md={6}>\n                                            <CFormGroup>\n                                                <CLabel htmlFor=\"email\">Email</CLabel>\n                                                <CInput id=\"email\"\n                                                        disabled\n\n                                                        value={email} />\n\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CFormGroup>\n                                    <CFormGroup row className=\"my-0\">\n\n                                        <CCol sm={12} md={6}>\n                                            <CFormGroup>\n                                                <CLabel htmlFor=\"phone\">Téléphone</CLabel>\n                                                <CInput id=\"phone\"\n                                                        disabled\n                                                        value={phone}  />\n\n                                            </CFormGroup>\n                                        </CCol>\n\n                                        {/*<CCol sm={12} md={6}>\n                        <div className=\"p-field-checkbox\">\n                            <Checkbox inputId=\"default\" name=\"defaut\" value=\"defaut\" onChange={e => setChecked(e.checked)} checked={checked} />\n                            <label htmlFor=\"default\"> Defaut</label>\n\n                        </div>\n                        </CCol>*/}\n\n                                    </CFormGroup>\n                                </CForm>\n\n                            </CTabPane>\n                            <CTabPane data-tab=\"role\">\n                                <CCardBody>\n                                    {\n                                        userRoles.map((role) => {\n                                            return (\n                                                <div key={role.key} className=\"field-checkbox\" style={{margin:\"10px\"}}>\n                                                    <Checkbox disabled inputId={role.key} name=\"role\" value={role} checked={selectedRoles.some((item) => item.key === role.key)} />\n                                                    <label style={{position: \"absolute\"}} htmlFor={role.key}> &nbsp;{role.name}</label>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </CCardBody>\n                            </CTabPane>\n                        </CTabContent>\n                    </CTabs>\n\n\n                    <CRow xs=\"4\" style={{marginTop: \"50px\"}}>\n\n\n                        <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\n                            <CButton block variant=\"outline\" color=\"info\" id=\"workflowSave\" onClick={EditProfile}><Edit/> Modifier</CButton>\n                        </CCol>\n\n                    </CRow>\n                </CCardBody>\n            </CCard>\n        </>\n\n    );\n}\nexport default ViewProfile"],"sourceRoot":""}