{"version":3,"sources":["views/Authentication/sign-in/Domain.js","views/Authentication/bg.jpg","views/Authentication/icon.gif"],"names":["Domain","props","React","useState","domainNameState","setDomainNameState","domainName","setDomainName","domainNameError","setDomainNameError","alert","setAlert","setToken","useEffect","localStorage","getItem","color","setItem","className","md","style","background","image","src","logo","width","borderRadius","to","shape","active","tabIndex","onSubmit","event","undefined","match","params","token","preventDefault","requestOptions","method","headers","body","JSON","stringify","fetch","DOMAIN_SERVICE","then","response","Promise","resolve","reject","text","length","parse","catch","err","data","status","requestOptions1","result","expiration_date","substr","indexOf","domain","history","push","error","console","log","invalid","type","id","value","onChange","target","placeholder","xs"],"mappings":"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","file":"static/js/78.929a9b95.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\nimport {HashRouter, Link, Route, Switch} from 'react-router-dom'\nimport {\n  CAlert,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText, CInvalidFeedback,\n  CRow\n} from '@coreui/react'\nimport {DOMAIN_SERVICE} from '../../../constants';\nimport image from '../bg.jpg'\nimport CIcon from '@coreui/icons-react'\nimport {TheLayout} from \"../../../containers\";\nimport logo from './../icon.gif';\nconst Domain = (props) => {\n  const [domainNameState, setDomainNameState] = React.useState(\"\");\n  const [domainName, setDomainName] = React.useState(\"\");\n  const [domainNameError, setDomainNameError] = React.useState(\"\");\n  const [alert, setAlert] = React.useState(null);\n  const [token, setToken] = React.useState(null);\n  useEffect(()=>{\n    if(localStorage.getItem('new_account') === \"true\"){\n      setAlert(<CAlert color=\"warning\">\n        You will receive a confirmation email to activate your account!\n      </CAlert>)\n      localStorage.setItem('new_account', \"false\");\n    }\n  },[])\n\n  const verifyLength = (value, length) => {\n    if (value.length >= length) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleFormSubmit = (event) =>{\n\n  if(props.match.params.token !== undefined){\n      setToken(props.match.params.token);\n      localStorage.setItem(\"device_token\", props.match.params.token)\n  }\n\n    event.preventDefault();\n    if (domainNameState === \"\") {\n      setDomainNameState(\"error\");\n    }\n    // const endpoint = SERVER_URL+\"/api/auth/verifyDomain\";\n\n    const requestOptions = {\n      method: 'POST',\n //     crossDomain : true,\n  //    mode: 'no-cors',\n      headers: {\n        \"X-Tenant\": domainName,\n\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({domainName: domainName})\n    };\n    if( domainNameState === \"success\"){\n        fetch(DOMAIN_SERVICE+'/api/auth/verifyDomain', requestOptions)\n          .then(response =>{\n              return new Promise((resolve, reject) => {\n                response.text().then(body => {\n                  resolve(\n                    body.length ? JSON.parse(body) : null\n                  );\n                }).catch(err => {\n                  reject(err);\n                });\n              });\n            }\n          )\n          .then(data =>\n          {\n            if(data === null) {\n              setDomainNameState(\"notExist\");\n              setDomainNameError(\"Invalid Domain name ! \")\n\n            }else if(data.status === 415){\n              alert(\"unsupported Media type !\")\n            }\n            else{\n              //  const object = JSON.parse(data);\n              const requestOptions1 = {\n                method: 'POST',\n           //     crossDomain : true,\n             //   mode: 'no-cors',\n                headers: {\n                  \"X-Tenant\": domainName  ,\n                  'Content-Type': 'application/json'\n\n                },\n                body: JSON.stringify({domainName: domainName})\n              };\n              fetch(DOMAIN_SERVICE+'/api/auth/verifyDomainActivation', requestOptions1)\n                  .then(response =>{\n                        return new Promise((resolve, reject) => {\n                          response.text().then(body => {\n                            resolve(\n                                body.length ? JSON.parse(body) : null\n                            );\n                          }).catch(err => {\n                            reject(err);\n                          });\n                        });\n                      }\n                  )\n                  .then(result =>\n                  {\n                    const status =result.status;\n                  if(status === 'active'){\n                    var expiration_date = null\n                    if(data.expiration_date !== null ){\n                      expiration_date = data.expiration_date.substr(0, data.expiration_date.indexOf(\" \"))\n\n                    }\n                  localStorage.setItem('domain_data', data.domain);\n                    localStorage.setItem('domain_image', data.image);\n                    localStorage.setItem(\"domainName\", JSON.parse(data.domain).domainName)\n                  localStorage.setItem(\"domain_expiration_date\", expiration_date)\n\n                    props.history.push(\"/login\");\n              }else {\n                setAlert(<CAlert color=\"danger\">\n                  domain inactive !\n                </CAlert>)\n              }\n\n\n                  })\n            }\n          })\n          .catch(error => {\n            console.log(error);\n          });\n    }\n  }\n\n  return (\n\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center \">\n          <CCol md=\"12\">\n            <CCardGroup>\n\n              <CCard className=\"text-white py-4 col-md-5 order-md-2\" style={{background:` linear-gradient(rgba(0, 0, 255, 0.0), rgba(0, 0, 255, 0.0)), url(${image})`}} >\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <img src={logo}  width=\"150px\" style={{borderRadius: \"0px\"}} ></img>\n                   {/* <h2 className=\"text-white\"><b>ISCT-GROUP <br/>Plateforme</b></h2>*/}\n\n\n                    <p className=\"mt-5\">Vous n'avez pas encore un compte ?</p>\n                    <Link to=\"/register\">\n                      <CButton  color=\"primary\" shape=\"pill\" active tabIndex={-1}><b>S'inscrire maintenant!</b></CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"p-4 col-md-7 order-md-1\">\n                <CCardBody>\n                  <CForm onSubmit={handleFormSubmit} method=\"post\">\n                    <h1>Domaine</h1>\n                    <p className=\"text-muted\">Entrez votre domaine</p>\n                    {alert}\n                    <CInputGroup className=\"mb-3\">\n                      <CInput\n                        invalid={domainNameState === \"error\" || domainNameState === \"notExist\"}\n                              type=\"text\" id=\"domainName\"\n                              value={domainName}\n                              onChange={\n                                event => {\n                                  setDomainName(event.target.value)\n                                  if (verifyLength(event.target.value, 1)) {\n                                    setDomainNameState(\"success\");\n                                  } else {\n                                    setDomainNameState(\"error\");\n                                    setDomainNameError(\"Le nom de domaine est requis ! \")\n                                  }\n                                }\n                              }\n                              placeholder=\"Nom de domaine *\"\n                              />\n                     {/* <CInputGroupPrepend>\n                        <CInputGroupText>\n                          .isct-group.com\n                        </CInputGroupText>\n                      </CInputGroupPrepend>*/}\n                      <CInvalidFeedback className=\"help-block\">\n                        {domainNameError}\n                      </CInvalidFeedback>\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"12\">\n                        <CButton  type=\"submit\" color=\"primary\" className=\"px-6 mt-lg-3\" shape=\"pill\"><i className=\"pi pi-sign-in\"> </i> &nbsp; Se connecter</CButton>\n                      </CCol>\n\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n\n\n              </CCard>\n\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n)\n}\nexport default Domain\n","export default __webpack_public_path__ + \"static/media/bg.608704a5.jpg\";","export default __webpack_public_path__ + \"static/media/icon.cfaf8cec.gif\";"],"sourceRoot":""}