{"version":3,"sources":["views/Administration/workflowMaster/MenuMapping.js","../node_modules/@material-ui/icons/esm/Add.js"],"names":["WorkflowMenuMapping","props","useState","showLeafIcon","showLine","setSelectedMenu","React","setWorkflowMaster","showIcon","imsKey","setImsKey","menuLevel","setMenuLevel","treeKeys","setTreeKeys","JSON","parse","localStorage","getItem","domainName","menu","setMenu","useHistory","useEffect","get_header","method","headers","ims_tab","username","fetch","IMS_MENU_SERVICE","then","response","Promise","resolve","reject","text","body","length","catch","err","sgi_data","ims_menu","ims_submenu","submenu","ims_item","map","ims_val","index","title","name","key","id","icon","customClasses","_tag","to","push","ims_child","expanded","sub_ims_tab","sub_ims_item","child","children","MENU_SERVICE","data","KeysList","tab","navTab","navItem","filter","d","nav","_children","childNavTab","childNavItem","console","log","expandedKeys","onExpand","onSelect","selectedKeys","info","node","sub_menu_id","menu_id","ims_submenu_id","indexOf","substr","treeData","onClick","workflowMasterId","match","params","workflow_data","stringify","WORKFLOW_MASTER_SERVICE","menu_object","workflowId","imsqmsmenuid","menu_data","IMS_QMS_SUBMENU_SERVICE","insertId","alert","history","handleSubmit","color","className","active","tabIndex","style","textAlign","createSvgIcon"],"mappings":"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","file":"static/js/92.994fa0ea.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Tree, Switch } from 'antd';\nimport { CarryOutOutlined, FormOutlined } from '@ant-design/icons';\nimport {SERVER_URL, WORKFLOW_MASTER_SERVICE, IMS_MENU_SERVICE, IMS_QMS_SUBMENU_SERVICE, MENU_SERVICE} from \"../../../constants\";\nimport CIcon from \"@coreui/icons-react\";\nimport {useHistory} from \"react-router-dom\";\nimport {CButton, CCardHeader, CCol, CRow, CCardBody, CCard, CCardFooter} from \"@coreui/react\";\nimport {Add} from \"@material-ui/icons\";\n\nconst WorkflowMenuMapping = (props) => {\n    const [showLine, setShowLine] = useState({\n        showLeafIcon: false,\n    });\n    const [selectedMenu, setSelectedMenu] = useState({})\n    const [workflowMaster, setWorkflowMaster] = React.useState({});\n    const [showIcon, setShowIcon] = useState(true);\n    const [imsKey, setImsKey] = useState(null);\n    const [menuLevel, setMenuLevel] = useState(null);\n    const [treeKeys, setTreeKeys] = useState([]);\n    const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n\n\n    const onSelect = (selectedKeys, info) => {\n        console.log('selected', selectedKeys, info);\n        setSelectedMenu(info.node);\n        var ims_selected_key = 0;\n        var sub_menu_id = '';\n        var menu_id = '';\n        var masters_submenu_id = '';\n\n        var ims_submenu_id = '';\n        var key = info.node.key;\n        if(key.indexOf(\"-\") !== -1){\n            menu_id = key.substr(0, key.indexOf(\"-\"));\n            console.log(menu_id)\n            key = key.substr(key.indexOf(\"-\")+1,key.length-1)\n            // if(menu_id === \"3\"){\n                if(key.indexOf(\"-\") !== -1){\n                    const sub_menu_id = key.substr(0, key.indexOf(\"-\"));\n                    key = key.substr(key.indexOf(\"-\")+1, key.length-1)\n                    console.log(sub_menu_id)\n                    if(key.indexOf(\"-\") !== -1){\n                        ims_submenu_id = key.substr(0, key.indexOf(\"-\"));\n                        console.log(ims_submenu_id)\n                        key = key.substr(key.indexOf(\"-\")+1, key.length-1)\n                        console.log(\"ims sub menu \")\n                        ims_selected_key = ims_submenu_id\n                        setImsKey(ims_selected_key)\n                       // setMenuLevel(\"IMSSubmenu\")\n                    }else{\n                        ims_submenu_id = key\n                        console.log(ims_submenu_id)\n                        console.log(\"ims menu\")\n                        ims_selected_key = ims_submenu_id\n                        setImsKey(ims_selected_key)\n                        setMenuLevel(\"IMSMenu\")\n                    }\n                }else{\n                    sub_menu_id = key\n                    console.log(sub_menu_id)\n                    console.log(\"sub menu  \")\n                    ims_selected_key = sub_menu_id\n                    setImsKey(ims_selected_key)\n                    setMenuLevel(\"Submenu\")\n\n                }\n          /*  }else if (menu_id === \"4\"){\n                if(key.indexOf(\"-\") !== -1){\n                    sub_menu_id = key.substr(0, key.indexOf(\"-\"));\n                    console.log(sub_menu_id)\n                    key = key.substr(key.indexOf(\"-\")+1,key.length-1)\n                    if(key.indexOf(\"-\") !== -1){\n                        masters_submenu_id = key.substr(0, key.indexOf(\"-\"));\n                        console.log(masters_submenu_id)\n                        key = key.substr(key.indexOf(\"-\")+1,key.length-1)\n                        console.log(\"masters sub menu \")\n                        ims_selected_key = masters_submenu_id\n                        setImsKey(ims_selected_key)\n                        //setMenuLevel(\"MastersSubmenu\")\n                    }else{\n                        masters_submenu_id = key\n                        console.log(masters_submenu_id)\n                        console.log(\"masters menu\")\n                        ims_selected_key = masters_submenu_id\n                        setImsKey(ims_selected_key)\n                       // setMenuLevel(\"MastersMenu\")\n\n                    }\n                }else{\n                    sub_menu_id = key;\n                    console.log(sub_menu_id)\n                    console.log(\"sub menu qms masters\")\n                    ims_selected_key = sub_menu_id\n                    setImsKey(ims_selected_key)\n                    //setMenuLevel(\"Submenu\")\n\n                }\n            }else{\n                sub_menu_id = key;\n                console.log(sub_menu_id)\n                console.log(\"sub menu other than ims qnd masters \")\n                ims_selected_key = sub_menu_id\n                setImsKey(ims_selected_key)\n               // setMenuLevel(\"IMSSubmenu\")\n\n            }*/\n        }else{\n            menu_id = key\n            console.log(menu_id)\n            console.log(\"menu \")\n            ims_selected_key = menu_id\n            setImsKey(ims_selected_key)\n            setMenuLevel(\"Menu\")\n\n        }};\n    const [menu, setMenu] = React.useState([]);\n    const history = useHistory()\n    useEffect(()=>{\n        /*  const token = getLocalToken();\n          console.log(token)\n          if(token === 'undefined'){\n            history.push(\"/domain\");\n          }*/\n        const get_header = {\n            method: 'GET',\n            headers: {\n                \"X-Tenant\": domainName,\n                'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n            }\n        };\n        var ims_tab = [];\n        var username = localStorage.getItem(\"username\")\n         fetch(IMS_MENU_SERVICE + '/api/menu/auth/allImsMenu/'+username, get_header)\n            .then(response => {\n                    return new Promise((resolve, reject) => {\n                        response.text().then(body => {\n                            resolve(\n                                body.length ? JSON.parse(body) : null\n                            );\n                        }).catch(err => {\n                            reject(err);\n                        });\n                    });\n                }\n                //     console.log(response.json())\n                //  console.log(response)\n            )\n            .then(sgi_data => {\n                const ims_menu = JSON.parse(sgi_data.menu);\n                const ims_submenu = JSON.parse(sgi_data.submenu);\n                var ims_item = {};\n                ims_menu.map((ims_val, index) => {\n                    ims_item.title = ims_val.name;\n                    ims_item.key = \"3-17-\"+ims_val.id;\n                    ims_item.icon = <CIcon name={ims_val.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n\n                    if(ims_val._tag === \"CSidebarNavItem\"){\n                        ims_item.to = ims_val.to;\n                        ims_tab.push(ims_item);\n                        ims_item = {};\n                    }else{\n\n                        const ims_child = ims_submenu[index]\n                        ims_item.expanded = true\n                        var sub_ims_tab = []\n                        var sub_ims_item = {}\n                        ims_child.map(child =>{\n                            sub_ims_item.title = child.name;\n                            sub_ims_item.key = \"3-17-\"+ims_val.id+\"-\"+child.id;\n                            sub_ims_item.icon = <CIcon name={child.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                            sub_ims_item.to = child.to\n                            sub_ims_tab.push(sub_ims_item)\n                            sub_ims_item = {}\n                        })\n                        ims_item.children = sub_ims_tab\n                    }\n                    ims_tab.push(ims_item);\n                    ims_item = {};\n                })\n            })\n\n         fetch(MENU_SERVICE + '/api/menu/auth/allMenu/'+username, get_header)\n            .then(response => {\n                    return new Promise((resolve, reject) => {\n                        response.text().then(body => {\n                            resolve(\n                                body.length ? JSON.parse(body) : null\n                            );\n                        }).catch(err => {\n                            reject(err);\n                        });\n                    });\n                }\n                //     console.log(response.json())\n                //  console.log(response)\n            )\n            .then(data => {\n                var KeysList = [];\n                // alert(data)\n                var tab = JSON.parse(JSON.parse(data.menu).menu);\n                var navTab = [];\n                var navItem ={};\n\n                var newTab = tab.filter(d => d.name === \"SGI\")\n                newTab.map(nav =>{\n                    navItem.key = nav.id;\n                    navItem.title = nav.name;\n                    navItem.icon = <CIcon name={nav.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                    if(nav._tag !== \"CSidebarNavItem\"){\n                        const children = nav._children;\n                       \n\n                        var childNavTab = [];\n                        var childNavItem ={};\n                        children.map(child =>{\n                            childNavItem.key = nav.id+\"-\"+child.id;\n                            childNavItem.title = child.name;\n                            childNavItem.icon = <CIcon name={child.icon} customClasses=\"c-sidebar-nav-icon\"/>;\n                            if(child._tag === \"CSidebarNavItem\"){\n                                //  childNavItem.to = child.to;\n                                childNavTab.push(childNavItem)\n                                childNavItem = {};\n                            }else {\n                                if (nav.name === \"SGI\" && child.name === \"QMS\") {\n                                    childNavItem.children = ims_tab;\n                                    KeysList.push(childNavItem.key)\n                                }\n                              /*  if (nav.name === \"Masters\" && child.name === \"QMS\") {\n                                    childNavItem.children = masters_tab;\n                                }*/\n                                childNavTab.push(childNavItem)\n                                childNavItem = {};\n                            }\n                        })\n                        navItem.children = childNavTab;\n                        KeysList.push(navItem.key)\n                    }\n                    navTab.push(navItem)\n                    navItem = {};\n                })\n                //console.log(navTab)\n                // menu = navTab;\n                setMenu(navTab)\n                console.log(navTab)\n                setTreeKeys(KeysList)\n                console.log(KeysList)\n\n            })\n    },[])\n    const handleSubmit = ()=>{\n\n        //const workflowMasterId = localStorage.getItem(\"workflowMasterId\");\n        const workflowMasterId = props.match.params.workflowMasterId;\n        console.log(workflowMasterId)\n        const workflow_data = {\n            method: 'POST',\n            headers: {\n                \"X-Tenant\": domainName,\n                'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n            body: JSON.stringify({id : workflowMasterId})\n        };\n        fetch(WORKFLOW_MASTER_SERVICE + '/api/workflowMaster/getByWorkflowMasterId',workflow_data)\n            .then(response => {\n                return new Promise((resolve, reject) => {\n                    response.text().then(body => {\n                        resolve(\n                            body.length ? JSON.parse(body) : null\n                        );\n                    }).catch(err => {\n                        reject(err);\n                    });\n                });\n            })\n            .then(data => {\n\n                setWorkflowMaster(data)\n                console.log(data);\n\n\n                var menu_object = {name : data.name, _tag: 'CSidebarNavItem',\n                    icon: 'cil-border-all',\n                    to: '/process/instances/'+data.workflowId+\"_\"+data.name+\"/\"+data.id, imsqmsmenuid: imsKey, menuLevel: menuLevel }\n                const menu_data = {\n                    method: 'POST',\n                    headers: {\n                        \"X-Tenant\": domainName,\n                        'Content-Type': 'application/json',\n                        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n                    body: JSON.stringify(menu_object)\n                };\n                fetch(IMS_QMS_SUBMENU_SERVICE + '/api/imsSubMenu/addMenu',menu_data)\n                    .then(response => {\n                        return new Promise((resolve, reject) => {\n                            response.text().then(body => {\n                                console.log(body)\n                                resolve(\n                                    body.length ? JSON.parse(body) : null\n                                );\n                            }).catch(err => {\n                                reject(err);\n                            });\n                        });\n                    })\n                    .then(data =>{\n\n                        if(data.insertId === \"\"){\n                            alert(\"please select a repository\")\n\n                        }else{\n                            props.history.push(\"/admin/indexView/edit/\"+workflowMasterId);\n                            // props.history.push(\"/admin/workflowMaster/list\");\n                           // props.history.push(\"/workflow\")\n                        }\n                    })\n            })\n    }\n\n    return (\n        <div>\n            <CCardHeader>\n                <h3>Choisir un dossier</h3>\n            </CCardHeader>\n                    <Tree\n                        showLine={showLine}\n                        showIcon={showIcon}\n                        expandedKeys={[...treeKeys]}\n                        onExpand={setTreeKeys}\n\n                     //   defaultExpandAll={true}\n                       // defaultExpandParent={true}\n                       // defaultExpandedKeys={['3','3-17', '3-7-1']}\n                        onSelect={onSelect}\n                        treeData={menu}\n                    />\n\n\n                <CCardFooter>\n                    <CButton onClick={()=> handleSubmit()}  color=\"success\" className=\"mt-3 -item-right\" active tabIndex={-1} style={{textAlign: \"right\"}}><Add/>Submit</CButton>\n                </CCardFooter>\n        </div>\n    );\n};\nexport default WorkflowMenuMapping;\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');"],"sourceRoot":""}