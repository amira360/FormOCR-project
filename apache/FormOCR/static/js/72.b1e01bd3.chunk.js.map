{"version":3,"sources":["views/Administration/formBuilder/EditForm.js","../node_modules/@material-ui/icons/esm/Save.js","../node_modules/@material-ui/icons/esm/Cancel.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","marginLeft","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","withStyles","withTheme","props","React","useState","formName","setFormName","formId","setFormId","formSno","setFormSno","formCode","setFormCode","formVersion","setFormVersion","formCodeState","setFormCodeState","JSON","parse","localStorage","getItem","domainId","domainName","roles","setRoles","components","setComponents","userRoles","setUserRoles","setSelectedRoles","formData","setFormData","form","setForm","newVersion","setNewVersion","username","useEffect","rolesFromApi","roles_data","method","headers","fetch","USER_SERVICE","then","response","json","data","console","log","map","role","push","value","roleName","label","id","roleId","match","params","getFormId","form_data","body","stringify","code","FORM_SERVICE","Promise","resolve","reject","text","length","catch","err","form_roles","form_file","form_json","name","sno","version","tab","selected_role","role_val","filter","error","xs","sm","noValidate","row","className","md","htmlFor","disabled","onChange","e","target","placeholder","options","isMulti","variant","inline","style","marginBottom","custom","checked","document","getElementById","backgroundColor","schema","col","xl","block","color","onClick","event","preventDefault","form_post","history","createSvgIcon","d"],"mappings":"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","file":"static/js/72.b1e01bd3.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CFormGroup,\n  CInput, CSelect,\n  CLabel, CNavbar, CNavbarBrand, CRow, CForm, CInputGroup, CInvalidFeedback,CInputCheckbox,\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\nimport { DocsLink } from 'src/reusable'\nimport { Link } from 'react-router-dom'\nimport {FormBuilder, form} from 'react-formio';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport {SERVER_URL, FORM_SERVICE, USER_SERVICE, NORM_SERVICE} from '../../../constants';\nimport 'formiojs/dist/formio.full.min';\nimport 'formiojs/dist/formio.full.min.css';\nimport {Cancel, Save} from \"@material-ui/icons\";\nimport {Chip} from \"@material-ui/core\";\nimport Select from 'react-select';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    marginLeft: 0+'px !important',\n    minWidth: 220,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst EditForm = (props) => {\n  const [collapsed, setCollapsed] = React.useState(true)\n  const [showElements, setShowElements] = React.useState(true)\n  const [formName, setFormName] = React.useState('');\n  const [Alert, setAlert] = React.useState('');\n  const [formId, setFormId] = React.useState('');\n  const [formSno, setFormSno] = React.useState('');\n  const [display, setDisplay] = React.useState('');\n  const [formCode, setFormCode] = React.useState('');\n  const [formVersion, setFormVersion] = React.useState('');\n  const [type, setType] = React.useState('form');\n  const [formCodeState, setFormCodeState] = React.useState('');\n  const [domainId, setDomainId] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainId);\n  const [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n  const [roles, setRoles] = React.useState([]);\n  const [components, setComponents] = React.useState([]);\n  const [userRoles, setUserRoles] = React.useState([]);\n  const [selectedRoles, setSelectedRoles] = React.useState([]);\n  const [formData, setFormData] = React.useState({});\n  const [form, setForm] = React.useState({});\n  const [formCodeError, setFormCodeError] = React.useState('');\n  const [newVersion, setNewVersion] = React.useState(false);\n  const [username, setUsername] = React.useState(localStorage.getItem('username'));\n\n/*  const [norms, setNorms] = React.useState([]);\n  const [selectedNorms, setSelectedNorms] = React.useState([]);*/\n\n  const classes = useStyles();\n  useEffect(()=> {\n    var rolesFromApi = [];\n    const roles_data = {\n      method: 'GET',\n      headers: {\n        \"X-Tenant\":domainName,\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n\n    };\n    fetch(USER_SERVICE +\"/api/auth/role/getRoles\", roles_data)\n      .then((response) => {\n        return response.json();\n      })\n      .then(data => {\n        console.log(data);\n\n        data.map(role => {\n          rolesFromApi.push({\n             value : role.roleName,\n             label : role.roleName,\n            id: role.roleId\n          })})\n        setUserRoles(rolesFromApi);\n        const  formCode = props.match.params.formCode;\n        //  alert(formCode)\n        const  getFormId = props.match.params.formId;\n\n\n        const form_data = {\n          method: 'POST',\n          headers: {\n            \"X-Tenant\": domainName,\n            'Content-Type': 'application/json',\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n          },\n          body: JSON.stringify({code : formCode})\n        };\n        fetch(FORM_SERVICE +'/api/form/getByFormCode',form_data)\n            .then(response => {\n              return new Promise((resolve, reject) => {\n                response.text().then(body => {\n                  resolve(\n                      body.length ? JSON.parse(body) : null\n                  );\n                }).catch(err => {\n                  reject(err);\n                });\n              });\n            })\n            .then(data => {\n              //  setComponents(JSON.parse(data.form_json).components)\n\n\n              const form_data = JSON.parse(data.form_data)\n              const form_roles = JSON.parse(data.form_roles)\n              console.log(form_data)\n\n              //console.log(form_data);\n              //  setComponents(JSON.parse(data.form_json).components)\n              const form_file = JSON.parse(data.form_json);\n              setFormId(getFormId)\n              setFormCode(form_data.code)\n              setFormName(form_data.name)\n              setFormSno(form_data.sno)\n              setFormVersion(form_data.version)\n              setFormData(form_data)\n              // const roles_data = form_roles\n              var tab = []\n              console.log(form_roles)\n              console.log(rolesFromApi)\n              form_roles.map(selected_role => {\n\n                var role_val = rolesFromApi.filter(role => role.id === selected_role.roleId)\n                tab.push(role_val[0])\n              })\n              console.log(tab)\n              setSelectedRoles(tab)\n              setRoles([...tab])\n\n              // setSelectedRoles(form_data.roles)\n              setForm(form_file)\n              /* const form_data = JSON.parse(data.form_json);\n               console.log(form_data)\n               setFormId(getFormId)\n               setFormCode(form_data.code)\n               setFormName(form_data.name)\n               setFormData(form_data)\n               setSelectedRoles(form_data.roles)\n               console.log(form_data.roles)\n\n               setForm(form_data.form)*/\n              // this.props.history.push(\"/admin/formView\");\n            })\n            .catch(error => {\n              console.log(error);\n            })\n      }).catch(error => {\n      console.log(error);\n    });\n    /*fetch(NORM_SERVICE + \"/api/auth/norm/getAll\")\n        .then((response) => {\n          return response.json();\n        })\n        .then(data => {\n          console.log(data);\n          var normsFromApi = [];\n          const allNorms = JSON.parse(data.standards)\n          allNorms.map(norm =>{\n            normsFromApi.push({label: norm.name, value: norm.id})\n          })\n          setNorms(normsFromApi)\n        })\n        .catch(err => {\n          console.log(err);\n        });*/\n\n   /* setFormId(formId)\n      console.log(formCode);\n      const form_post = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json', \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")},\n        body: JSON.stringify({formCode : formCode})\n      };\n      fetch('http://localhost:8080/api/form/getByFormCode',form_post)\n        .then(response => {\n          return new Promise((resolve, reject) => {\n            response.text().then(body => {\n              resolve(\n                body.length ? JSON.parse(body) : null\n              );\n            }).catch(err => {\n              reject(err);\n            });\n          });\n        })\n        .then(data => {\n          //  setComponents(JSON.parse(data.form_json).components)\n          var formDatas = JSON.parse(data.form_json);\n          console.log(formDatas);\n          setFormData(formDatas)\n          setSelectedRoles(formDatas.roles)\n          console.log(selectedRoles)\n          setForm(formDatas.form)\n\n          // this.props.history.push(\"/admin/formView\");\n        })\n        .catch(error => {\n          console.log(error);\n        })\n*/\n  },[]);\nconst NewVersionHandle = (checked) =>{\nsetNewVersion(checked)\nif (checked === true){\ndocument.getElementById(\"formVersion\").disabled = false;\n}else{\ndocument.getElementById(\"formVersion\").disabled = true;}\n}\n\n  const handleFormSubmit =(event ) => {\n    event.preventDefault();\n\n   \n    const form_data ={display:'form', components:components};\n    const form_post = {\n      method: 'POST',\n      headers: {\n        \"X-Tenant\": domainName,\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \"+localStorage.getItem('Authorization')\n      },\n      body: JSON.stringify({\n        // standards: selectedNorms,\n        formName: formName,formId: formId, formCode:formCode, username: username,\n         domainId: domainId, roles:roles, form:form_data, version: formVersion, newVersion: newVersion})\n    };\n\n    if (formCodeState === \"\") {\n      setFormCodeState(\"error\");\n    }\n      fetch(FORM_SERVICE + '/api/form/edit', form_post)\n        .then(response => {\n          console.log(response)\n          //toaser\n          props.history.push(\"/admin/form/list\");\n        })\n  }\n  const hideAlert = () => {\n    setAlert(null)\n  };\n\n  const verifyLength = (value, length) => {\n    if (value.length >= length) {\n      return true;\n    }\n    return false;\n  };\n  const basicAlert = () =>{\n    /* this.setState({alert:\n         <SweetAlert\n           style={{ display: \"block\", marginTop: \"-100px\" }}\n           title=\"the form code is already used !\"\n           onConfirm={() => this.hideAlert()}\n           onCancel={() => this.hideAlert()}\n         />\n     })*/\n  };\n\n  const handleDelete = (chipToDelete) =>{\n    console.log(chipToDelete);\n    console.log(roles);\n    console.log(roles.filter((chip) => chip !== chipToDelete))\n    const data = roles.filter((chip) => chip !== chipToDelete);\n    setRoles(data);\n  };\n  let icon;\n  return (\n    <>\n      <CCol xs=\"12\" sm=\"12\">\n        <CCard>\n          <CCardHeader>\n            <h4>Modifier  -  {formData.name}</h4>\n          </CCardHeader>\n          <CCardBody>\n\n            <CForm  noValidate>\n              <CFormGroup row className=\"my-0\">\n                <CCol sm={12} md={6}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"SNo\">S No</CLabel>\n                    <CInput id=\"SNo\" /*onChange={e => setFormId(e.target.value)}\n                              value={formId}*/ value={formSno} disabled />\n                  </CFormGroup>\n                </CCol>\n                <CCol sm={12} md={6}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"formName\">Nom du formulaire</CLabel>\n                    <CInput id=\"formName\"  onChange={e => setFormName(e.target.value) } value={formName}/>\n                  </CFormGroup>\n                </CCol>\n\n              </CFormGroup>\n              <CFormGroup row className=\"my-0\">\n                <CCol sm={12} md={6}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"formCode\">Form code</CLabel>\n                    <CInput id=\"formCode\" value={formCode} disabled/>\n                  </CFormGroup>\n                </CCol>\n                <CCol sm={12} md={6}>\n                  <CFormGroup>\n                      <CLabel htmlFor=\"AccessControlUser\">Contrôle d'accès</CLabel>\n\n                      <Select\n                        name=\"form-field-name2\"\n                        placeholder=\"Global\"\n                        value={roles}\n                        options={userRoles}\n                        onChange={setRoles}\n                        isMulti\n                      />\n                </CFormGroup>\n              </CCol>\n              </CFormGroup>\n               <CFormGroup row className=\"my-0\">\n                  <CCol sm={12} md={6}>\n                    <CFormGroup>\n                      <CLabel htmlFor=\"formVersion\">Version</CLabel>\n                      <CInput id=\"formVersion\" onChange={e => setFormVersion(e.target.value) }\n                              value={formVersion} disabled />\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm={12} md={6}>\n                        <CFormGroup variant=\"custom-checkbox\" inline style={{marginBottom:\"20px\"}}>\n                          <CInputCheckbox custom id=\"inline-checkbox2\" name=\"inline-checkbox2\" onChange={e =>{ NewVersionHandle(e.target.checked)\n                           console.log(e.target.checked)}}  value={newVersion} />\n                          <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox2\" >Nouvelle version</CLabel>\n                        </CFormGroup>\n                      </CCol>\n                 {/*<CCol sm={12} md={6}>\n                   <CFormGroup>\n                     <CLabel htmlFor=\"type\">Norme</CLabel>\n                     <Select\n                         name=\"type\"\n                         value={selectedNorms}\n                         onChange={setSelectedNorms}\n                         placeholder=\"Selectionnez les normes\"\n                         options={norms}\n                         isMulti\n                     />\n                   </CFormGroup>\n                 </CCol>*/}\n            </CFormGroup>\n\n\n\n                  <CCard>\n\n                 <CCardHeader style={{backgroundColor:\"#F5F5F5\"}}>\n                                                  Générateur de formulaires\n                                              </CCardHeader>\n\n\n\n                <CCardBody>\n                <FormBuilder form={form} onChange={(schema) => { setComponents(schema.components)}}/>\n                </CCardBody>\n\n\n\n\n                  </CCard>\n                   <CRow xs=\"4\">\n\n                      <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\n                        <CButton block variant=\"outline\" color=\"info\" id=\"formSave\" onClick={handleFormSubmit}><Save/> Enregister</CButton>\n                      </CCol>\n                      <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\n                        <CButton block variant=\"outline\" color=\"danger\" onClick={()=> props.history.push(\"/admin/form/list\")}><Cancel />\n                                                                                                                  Annuler</CButton>\n                      </CCol>\n\n                      </CRow>\n\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </>\n  )\n}\nexport default withStyles({ ...useStyles}, { withTheme: true })(EditForm) ;\n\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');"],"sourceRoot":""}