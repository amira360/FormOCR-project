{"version":3,"sources":["views/Administration/formBuilder/PreviewForm.js"],"names":["makeStyles","theme","formControl","margin","spacing","marginLeft","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","PreviewForm","props","React","useState","form","setForm","formData","setFormData","JSON","parse","localStorage","getItem","domainName","useEffect","formCode","match","params","console","log","form_data","method","headers","body","stringify","code","fetch","FORM_SERVICE","then","response","Promise","resolve","reject","text","length","catch","err","data","form_json","error","className","name","onChange","e","onSubmit"],"mappings":"yOA6BkBA,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,OAAQF,EAAMG,QAAQ,GACtBC,WAAY,iBACZC,SAAU,IACVC,SAAU,KAEZC,MAAO,CACLC,QAAS,OACTC,SAAU,QAEZC,KAAM,CACJR,OAAQ,GAEVS,QAAS,CACPC,UAAWZ,EAAMG,QAAQ,QAyGdU,UA3FK,SAACC,GAAW,IAAD,EAEPC,IAAMC,SAAS,IAFR,mBAExBC,EAFwB,KAElBC,EAFkB,OAGCH,IAAMC,SAAS,IAHhB,gCAICD,IAAMC,SAAS,KAJhB,mBAIxBG,EAJwB,KAIdC,EAJc,OAKKL,IAAMC,SAASK,KAAKC,MAAMC,aAAaC,QAAQ,gBAAgBC,YALpE,mBAKxBA,EALwB,UAO/BC,qBAAU,WAAM,IAENC,EAAab,EAAMc,MAAMC,OAAzBF,SACRG,QAAQC,IAAIJ,GACZ,IAAMK,EAAY,CAChBC,OAAQ,OAERC,QAAS,CACP,WAAYT,EACZ,eAAgB,mBAChB,cAAiB,UAAYF,aAAaC,QAAQ,kBAEpDW,KAAMd,KAAKe,UAAU,CAACC,KAAOV,KAE/BW,MAAMC,IAAe,0BAA0BP,GAC5CQ,MAAK,SAAAC,GACJ,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BH,EAASI,OAAOL,MAAK,SAAAL,GACnBQ,EACER,EAAKW,OAASzB,KAAKC,MAAMa,GAAQ,SAElCY,OAAM,SAAAC,GACPJ,EAAOI,YAIZR,MAAK,SAAAS,GACJnB,QAAQC,IAAIkB,GAEZ/B,EAAQG,KAAKC,MAAM2B,EAAKC,YACxB9B,EAAYC,KAAKC,MAAM2B,EAAKjB,eAG7Be,OAAM,SAAAI,GACLrB,QAAQC,IAAIoB,QACV,IA6BN,OACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,qBAAKC,UAAU,cAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,qBAAKA,UAAU,oBAAf,SAAmC,oBACjCA,UAAU,mDADuB,SAC4B,uBAAMA,UAAU,cAAhB,yBAA2CjC,EAASkC,kBAKzH,cAAC,IAAD,UACE,cAAC,OAAD,CAAMpC,KAAMA,EAAMqC,SAAU,SAAAC,GAAC,OAAIzB,QAAQC,IAAIwB,EAAEN,OAAQO,SAxChD,SAAAP,GAAQ,IACbtB,EAAab,EAAMc,MAAMC,OAAzBF,SACVG,QAAQC,IAAIkB,GAOuB1B,aAAaC,QAAQ,iBAE9CH,KAAKe,UAAL,aAAgBT,SAAWA,GAAWA,EAAWsB","file":"static/js/99.122d9e24.chunk.js","sourcesContent":["\n\nimport React, {useEffect} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CFormGroup,\n  CInput, CSelect,\n  CLabel, CNavbar, CNavbarBrand, CRow, CForm, CInputGroup, CInvalidFeedback,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { DocsLink } from 'src/reusable'\nimport { Link } from 'react-router-dom'\nimport {FormBuilder} from 'react-formio';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport {Form} from 'react-formio';\nimport {SERVER_URL, FORM_SERVICE} from '../../../constants';\n\nimport 'formiojs/dist/formio.full.min';\nimport 'formiojs/dist/formio.full.min.css';\nimport {Cancel, Save} from \"@material-ui/icons\";\nimport {Chip} from \"@material-ui/core\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    marginLeft: 0+'px !important',\n    minWidth: 220,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst PreviewForm = (props) => {\n\nconst [form, setForm] = React.useState({});\nconst [formName, setFormName] = React.useState({});\nconst [formData, setFormData] = React.useState({});\nconst [domainName, setDomainName] = React.useState(JSON.parse(localStorage.getItem('domain_data')).domainName);\n\nuseEffect(()=> {\n\n  const { formCode } = props.match.params;\n  console.log(formCode);\n  const form_data = {\n    method: 'POST',\n\n    headers: {\n      \"X-Tenant\": domainName,\n      'Content-Type': 'application/json',\n      \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n    },\n    body: JSON.stringify({code : formCode})\n  };\n  fetch(FORM_SERVICE + '/api/form/getByFormCode',form_data)\n    .then(response => {\n      return new Promise((resolve, reject) => {\n        response.text().then(body => {\n          resolve(\n            body.length ? JSON.parse(body) : null\n          );\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    })\n    .then(data => {\n      console.log(data);\n      //  setComponents(JSON.parse(data.form_json).components)\n      setForm(JSON.parse(data.form_json))\n      setFormData(JSON.parse(data.form_data));\n      // this.props.history.push(\"/admin/formView\");\n    })\n    .catch(error => {\n      console.log(error);\n    })},[])\n\n  const submit = data =>{\n    const { formCode } = props.match.params;\n  console.log(data)\n    const form_data = {\n      method: 'POST',\n\n      headers: {\n        \"X-Tenant\": domainName,\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"Authorization\")\n      },\n      body: JSON.stringify({formCode : formCode, [formCode]: data})\n    };\n\n   /* fetch(SERVER_URL + '/api/form/save',form_data)\n      .then(response => {\n        return new Promise((resolve, reject) => {\n          response.text().then(body => {\n            resolve(\n              body.length ? JSON.parse(body) : null\n            );\n          }).catch(err => {\n            reject(err);\n          });\n        });\n      })*/\n  }\n  return (\n    <div>\n      <CCard>\n        <CCardHeader>\n          <div className=\"m-subheader\">\n            <div className=\"d-flex align-items-center\">\n              <div className=\"mr-auto col-xs-6 \"><h4\n                className=\"m-subheader__title m-subheader__title--separator\"><span className=\"ng-tns-c2-0\">Preview  -  {formData.name}</span>\n              </h4></div>\n            </div>\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <Form form={form} onChange={e => console.log(e.data)}  onSubmit={submit}  />\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default PreviewForm;\n"],"sourceRoot":""}